public final class org.codehaus.jackson.io.NumberInput extends java.lang.Object
{
    static final long L_BILLION;
    static final java.lang.String MAX_LONG_STR;
    static final java.lang.String MIN_LONG_STR_NO_SIGN;

    static void <clinit>()
    {
        java.lang.String $r0;

        <org.codehaus.jackson.io.NumberInput: long L_BILLION> = 1000000000L;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);

        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int)>(1);

        <org.codehaus.jackson.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN> = $r0;

        $r0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(9223372036854775807L);

        <org.codehaus.jackson.io.NumberInput: java.lang.String MAX_LONG_STR> = $r0;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.io.NumberInput r0;

        r0 := @this: org.codehaus.jackson.io.NumberInput;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static final boolean inLongRange(java.lang.String, boolean)
    {
        java.lang.String $r0, $r1;
        boolean $z0;
        int $i0, $i1;
        char $c2, $c3;

        $r0 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label2;

        $r1 = <org.codehaus.jackson.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

     label1:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 >= $i0 goto label3;

        return 1;

     label2:
        $r1 = <org.codehaus.jackson.io.NumberInput: java.lang.String MAX_LONG_STR>;

        goto label1;

     label3:
        if $i1 <= $i0 goto label4;

        return 0;

     label4:
        $i1 = 0;

     label5:
        if $i1 >= $i0 goto label7;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>($i1);

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c2 <= $c3 goto label6;

        return 0;

     label6:
        $i1 = $i1 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static final boolean inLongRange(char[], int, int, boolean)
    {
        char[] $r0;
        int $i0, $i1, $i2, $i3;
        boolean $z0;
        java.lang.String $r1;
        char $c4, $c5;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $z0 == 0 goto label2;

        $r1 = <org.codehaus.jackson.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;

     label1:
        $i2 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i1 >= $i2 goto label3;

        return 1;

     label2:
        $r1 = <org.codehaus.jackson.io.NumberInput: java.lang.String MAX_LONG_STR>;

        goto label1;

     label3:
        if $i1 <= $i2 goto label4;

        return 0;

     label4:
        $i1 = 0;

     label5:
        if $i1 >= $i2 goto label7;

        $i3 = $i0 + $i1;

        $c4 = $r0[$i3];

        $c5 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        if $c4 <= $c5 goto label6;

        return 0;

     label6:
        $i1 = $i1 + 1;

        goto label5;

     label7:
        return 1;
    }

    public static double parseAsDouble(java.lang.String, double)
    {
        double $d0, $d1;
        java.lang.String $r0;
        int $i0;
        java.lang.Throwable $r1;

        $r0 := @parameter0: java.lang.String;

        $d0 := @parameter1: double;

        if $r0 != null goto label1;

        return $d0;

     label1:
        $r0 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

        return $d0;

     label2:
        $d1 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label3:
        return $d1;

     label4:
        $r1 := @caughtexception;

        return $d0;

        catch java.lang.NumberFormatException from label2 to label3 with label4;
    }

    public static int parseAsInt(java.lang.String, int)
    {
        int $i0, $i1, i2, i3;
        java.lang.String $r0, $r1;
        char $c4;
        double $d0;
        java.lang.Throwable $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        if $r0 != null goto label01;

        return $i0;

     label01:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i2 = $i1;

        if $i1 != 0 goto label02;

        return $i0;

     label02:
        i3 = 0;

        if 0 >= $i1 goto label03;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c4 != 43 goto label06;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r0 = $r1;

        i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label03:
        if i3 >= i2 goto label09;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        if $c4 > 57 goto label04;

        if $c4 >= 48 goto label08;

     label04:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label05:
        $i0 = (int) $d0;

        return $i0;

     label06:
        if $c4 != 45 goto label03;

        i3 = 1;

        goto label03;

     label07:
        $r2 := @caughtexception;

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

     label10:
        return i3;

     label11:
        $r3 := @caughtexception;

        return $i0;

        catch java.lang.NumberFormatException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public static long parseAsLong(java.lang.String, long)
    {
        long $l0, $l5;
        java.lang.String $r0, $r1;
        int $i1, i2, i3;
        char $c4;
        double $d0;
        java.lang.Throwable $r2, $r3;

        $r0 := @parameter0: java.lang.String;

        $l0 := @parameter1: long;

        if $r0 != null goto label01;

        return $l0;

     label01:
        $r1 = virtualinvoke $r0.<java.lang.String: java.lang.String trim()>();

        $r0 = $r1;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i2 = $i1;

        if $i1 != 0 goto label02;

        return $l0;

     label02:
        i3 = 0;

        if 0 >= $i1 goto label03;

        $c4 = virtualinvoke $r1.<java.lang.String: char charAt(int)>(0);

        if $c4 != 43 goto label06;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r0 = $r1;

        i2 = virtualinvoke $r1.<java.lang.String: int length()>();

     label03:
        if i3 >= i2 goto label09;

        $c4 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        if $c4 > 57 goto label04;

        if $c4 >= 48 goto label08;

     label04:
        $d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>($r0);

     label05:
        $l0 = (long) $d0;

        return $l0;

     label06:
        if $c4 != 45 goto label03;

        i3 = 1;

        goto label03;

     label07:
        $r2 := @caughtexception;

     label08:
        i3 = i3 + 1;

        goto label03;

     label09:
        $l5 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

     label10:
        return $l5;

     label11:
        $r3 := @caughtexception;

        return $l0;

        catch java.lang.NumberFormatException from label04 to label05 with label07;
        catch java.lang.NumberFormatException from label09 to label10 with label11;
    }

    public static final int parseInt(java.lang.String)
    {
        java.lang.String $r0;
        char $c0, c1;
        int $i2, i3, i4, i5;
        boolean z0;

        $r0 := @parameter0: java.lang.String;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        c1 = $c0;

        $i2 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $c0 != 45 goto label03;

        z0 = 1;

     label01:
        if z0 == 0 goto label07;

        if $i2 == 1 goto label02;

        if $i2 <= 10 goto label04;

     label02:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label03:
        z0 = 0;

        goto label01;

     label04:
        i3 = 1 + 1;

        c1 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(1);

     label05:
        if c1 > 57 goto label06;

        if c1 >= 48 goto label08;

     label06:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label07:
        if $i2 <= 9 goto label18;

        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label08:
        i4 = c1 - 48;

        if i3 >= $i2 goto label16;

        i5 = i3 + 1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i3);

        if $c0 > 57 goto label09;

        if $c0 >= 48 goto label10;

     label09:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label10:
        i3 = i4 * 10;

        i4 = $c0 - 48;

        i4 = i3 + i4;

        if i5 >= $i2 goto label16;

        i3 = i5 + 1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i5);

        if $c0 > 57 goto label11;

        if $c0 >= 48 goto label12;

     label11:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label12:
        i5 = i4 * 10;

        i4 = $c0 - 48;

        i4 = i5 + i4;

        if i3 >= $i2 goto label16;

     label13:
        i5 = i3;

        i3 = i3 + 1;

        $c0 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i5);

        if $c0 > 57 goto label14;

        if $c0 >= 48 goto label15;

     label14:
        $i2 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r0);

        return $i2;

     label15:
        i5 = i4 * 10;

        i4 = $c0 - 48;

        i4 = i5 + i4;

        if i3 < $i2 goto label13;

     label16:
        if z0 == 0 goto label17;

        $i2 = neg i4;

        return $i2;

     label17:
        return i4;

     label18:
        i3 = 1;

        goto label05;
    }

    public static final int parseInt(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, i3, $i4;
        char $c2;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $c2 = $r0[$i0];

        i3 = $c2 - 48;

        $i1 = $i1 + $i0;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        i3 = i3 * 10;

        $c2 = $r0[$i0];

        $i4 = $c2 - 48;

        i3 = i3 + $i4;

        $i0 = $i0 + 1;

        if $i0 >= $i1 goto label1;

        $i1 = i3 * 10;

        $c2 = $r0[$i0];

        $i0 = $c2 - 48;

        $i0 = $i1 + $i0;

        return $i0;

     label1:
        return i3;
    }

    public static final long parseLong(java.lang.String)
    {
        java.lang.String $r0;
        int $i0;
        long $l1;

        $r0 := @parameter0: java.lang.String;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 > 9 goto label1;

        $i0 = staticinvoke <org.codehaus.jackson.io.NumberInput: int parseInt(java.lang.String)>($r0);

        $l1 = (long) $i0;

        return $l1;

     label1:
        $l1 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>($r0);

        return $l1;
    }

    public static final long parseLong(char[], int, int)
    {
        char[] $r0;
        int $i0, $i1, $i3;
        long l2, $l4;

        $r0 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i1 = $i1 - 9;

        $i3 = staticinvoke <org.codehaus.jackson.io.NumberInput: int parseInt(char[],int,int)>($r0, $i0, $i1);

        l2 = (long) $i3;

        l2 = l2 * 1000000000L;

        $i0 = $i0 + $i1;

        $i0 = staticinvoke <org.codehaus.jackson.io.NumberInput: int parseInt(char[],int,int)>($r0, $i0, 9);

        $l4 = (long) $i0;

        l2 = $l4 + l2;

        return l2;
    }
}
