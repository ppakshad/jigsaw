public final class org.codehaus.jackson.node.NodeCursor$Array extends org.codehaus.jackson.node.NodeCursor
{
    java.util.Iterator _contents;
    org.codehaus.jackson.JsonNode _currentNode;

    public void <init>(org.codehaus.jackson.JsonNode, org.codehaus.jackson.node.NodeCursor)
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.node.NodeCursor $r2;
        java.util.Iterator $r3;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        $r1 := @parameter0: org.codehaus.jackson.JsonNode;

        $r2 := @parameter1: org.codehaus.jackson.node.NodeCursor;

        specialinvoke r0.<org.codehaus.jackson.node.NodeCursor: void <init>(int,org.codehaus.jackson.node.NodeCursor)>(1, $r2);

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonNode: java.util.Iterator getElements()>();

        r0.<org.codehaus.jackson.node.NodeCursor$Array: java.util.Iterator _contents> = $r3;

        return;
    }

    public boolean currentHasChildren()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.JsonNode $r1;
        org.codehaus.jackson.node.ContainerNode r2;
        int $i0;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode currentNode()>();

        r2 = (org.codehaus.jackson.node.ContainerNode) $r1;

        $i0 = virtualinvoke r2.<org.codehaus.jackson.node.ContainerNode: int size()>();

        if $i0 <= 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public org.codehaus.jackson.JsonNode currentNode()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.JsonNode r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        r1 = r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode _currentNode>;

        return r1;
    }

    public org.codehaus.jackson.JsonToken endToken()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.JsonToken r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        r1 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        return r1;
    }

    public java.lang.String getCurrentName()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        return null;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.node.NodeCursor $r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        $r1 = specialinvoke r0.<org.codehaus.jackson.node.NodeCursor: org.codehaus.jackson.node.NodeCursor getParent()>();

        return $r1;
    }

    public org.codehaus.jackson.JsonToken nextToken()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        java.util.Iterator $r1;
        boolean $z0;
        java.lang.Object $r2;
        org.codehaus.jackson.JsonNode $r3;
        org.codehaus.jackson.JsonToken $r4;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        $r1 = r0.<org.codehaus.jackson.node.NodeCursor$Array: java.util.Iterator _contents>;

        $z0 = interfaceinvoke $r1.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode _currentNode> = null;

        return null;

     label1:
        $r1 = r0.<org.codehaus.jackson.node.NodeCursor$Array: java.util.Iterator _contents>;

        $r2 = interfaceinvoke $r1.<java.util.Iterator: java.lang.Object next()>();

        $r3 = (org.codehaus.jackson.JsonNode) $r2;

        r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode _currentNode> = $r3;

        $r3 = r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonNode _currentNode>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonNode: org.codehaus.jackson.JsonToken asToken()>();

        return $r4;
    }

    public org.codehaus.jackson.JsonToken nextValue()
    {
        org.codehaus.jackson.node.NodeCursor$Array r0;
        org.codehaus.jackson.JsonToken $r1;

        r0 := @this: org.codehaus.jackson.node.NodeCursor$Array;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.node.NodeCursor$Array: org.codehaus.jackson.JsonToken nextToken()>();

        return $r1;
    }
}
