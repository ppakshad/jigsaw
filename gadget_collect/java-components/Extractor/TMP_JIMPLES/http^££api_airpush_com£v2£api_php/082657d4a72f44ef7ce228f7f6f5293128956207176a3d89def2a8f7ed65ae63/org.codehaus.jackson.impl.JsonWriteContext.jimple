public class org.codehaus.jackson.impl.JsonWriteContext extends org.codehaus.jackson.JsonStreamContext
{
    public static final int STATUS_EXPECT_NAME;
    public static final int STATUS_EXPECT_VALUE;
    public static final int STATUS_OK_AFTER_COLON;
    public static final int STATUS_OK_AFTER_COMMA;
    public static final int STATUS_OK_AFTER_SPACE;
    public static final int STATUS_OK_AS_IS;
    protected org.codehaus.jackson.impl.JsonWriteContext _child;
    protected java.lang.String _currentName;
    protected final org.codehaus.jackson.impl.JsonWriteContext _parent;

    protected void <init>(int, org.codehaus.jackson.impl.JsonWriteContext)
    {
        org.codehaus.jackson.impl.JsonWriteContext r0, $r1;
        int $i0;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.codehaus.jackson.impl.JsonWriteContext;

        specialinvoke r0.<org.codehaus.jackson.JsonStreamContext: void <init>()>();

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _child> = null;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type> = $i0;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _parent> = $r1;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = -1;

        return;
    }

    public static org.codehaus.jackson.impl.JsonWriteContext createRootContext()
    {
        org.codehaus.jackson.impl.JsonWriteContext $r0;

        $r0 = new org.codehaus.jackson.impl.JsonWriteContext;

        specialinvoke $r0.<org.codehaus.jackson.impl.JsonWriteContext: void <init>(int,org.codehaus.jackson.impl.JsonWriteContext)>(0, null);

        return $r0;
    }

    private final org.codehaus.jackson.impl.JsonWriteContext reset(int)
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        int $i0;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $i0 := @parameter0: int;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type> = $i0;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = -1;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName> = null;

        return r0;
    }

    protected final void appendDesc(java.lang.StringBuilder)
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        java.lang.StringBuilder $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $r1 := @parameter0: java.lang.StringBuilder;

        $i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type>;

        if $i0 != 2 goto label3;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(123);

        $r2 = r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName>;

        if $r2 == null goto label2;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

        $r2 = r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName>;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34);

     label1:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;

     label2:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63);

        goto label1;

     label3:
        $i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type>;

        if $i0 != 1 goto label4;

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $i0 = virtualinvoke r0.<org.codehaus.jackson.impl.JsonWriteContext: int getCurrentIndex()>();

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        return;

     label4:
        virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("/");

        return;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0, r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _child>;

        if r1 != null goto label1;

        r1 = new org.codehaus.jackson.impl.JsonWriteContext;

        specialinvoke r1.<org.codehaus.jackson.impl.JsonWriteContext: void <init>(int,org.codehaus.jackson.impl.JsonWriteContext)>(1, r0);

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _child> = r1;

        return r1;

     label1:
        r0 = specialinvoke r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext reset(int)>(1);

        return r0;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0, r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _child>;

        if r1 != null goto label1;

        r1 = new org.codehaus.jackson.impl.JsonWriteContext;

        specialinvoke r1.<org.codehaus.jackson.impl.JsonWriteContext: void <init>(int,org.codehaus.jackson.impl.JsonWriteContext)>(2, r0);

        r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _child> = r1;

        return r1;

     label1:
        r0 = specialinvoke r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext reset(int)>(2);

        return r0;
    }

    public final java.lang.String getCurrentName()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName>;

        return r1;
    }

    public volatile org.codehaus.jackson.JsonStreamContext getParent()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r0 = virtualinvoke r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext getParent()>();

        return r0;
    }

    public final org.codehaus.jackson.impl.JsonWriteContext getParent()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext _parent>;

        return r0;
    }

    public final java.lang.String toString()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        java.lang.StringBuilder r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(64);

        virtualinvoke r0.<org.codehaus.jackson.impl.JsonWriteContext: void appendDesc(java.lang.StringBuilder)>(r1);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }

    public final int writeFieldName(java.lang.String)
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        java.lang.String $r1, $r2;
        int $i0;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        $r1 := @parameter0: java.lang.String;

        $i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type>;

        if $i0 != 2 goto label3;

        $r2 = r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName>;

        if $r2 == null goto label1;

        return 4;

     label1:
        r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName> = $r1;

        $i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        if $i0 >= 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        return 4;
    }

    public final int writeValue()
    {
        org.codehaus.jackson.impl.JsonWriteContext r0;
        int i0, $i1;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.impl.JsonWriteContext;

        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type>;

        if i0 != 2 goto label2;

        $r1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName>;

        if $r1 != null goto label1;

        return 5;

     label1:
        r0.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String _currentName> = null;

        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        i0 = i0 + 1;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = i0;

        return 2;

     label2:
        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _type>;

        if i0 != 1 goto label4;

        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        $i1 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        $i1 = $i1 + 1;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = $i1;

        if i0 >= 0 goto label3;

        return 0;

     label3:
        return 1;

     label4:
        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        i0 = i0 + 1;

        r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index> = i0;

        i0 = r0.<org.codehaus.jackson.impl.JsonWriteContext: int _index>;

        if i0 != 0 goto label5;

        return 0;

     label5:
        return 3;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_SPACE> = 3;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_COMMA> = 1;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_OK_AFTER_COLON> = 2;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_EXPECT_VALUE> = 4;

        <org.codehaus.jackson.impl.JsonWriteContext: int STATUS_EXPECT_NAME> = 5;

        return;
    }
}
