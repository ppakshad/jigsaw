public class org.codehaus.jackson.map.deser.BeanDeserializerFactory extends org.codehaus.jackson.map.deser.BasicDeserializerFactory
{
    private static final java.lang.Class[] INIT_CAUSE_PARAMS;
    public static final org.codehaus.jackson.map.deser.BeanDeserializerFactory instance;
    protected final org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig;

    static void <clinit>()
    {
        java.lang.Class[] $r0;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory $r1;

        $r0 = newarray (java.lang.Class)[1];

        $r0[0] = class "Ljava/lang/Throwable;";

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS> = $r0;

        $r1 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke $r1.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerFactory instance> = $r1;

        return;
    }

    public void <init>()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializerFactory$Config r1;
        org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: void <init>()>();

        if r1 != null goto label1;

        $r2 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl;

        r1 = $r2;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl: void <init>()>();

     label1:
        r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig> = r1;

        return;
    }

    static org.codehaus.jackson.map.Deserializers[] access$000()
    {
        org.codehaus.jackson.map.Deserializers[] r0;

        r0 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.Deserializers[] NO_DESERIALIZERS>;

        return r0;
    }

    protected void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.CreatorContainer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;
        org.codehaus.jackson.map.deser.CreatorContainer $r5;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] r6;
        java.util.List $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor r10;
        int $i0, $i1, $i2;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r11;
        java.lang.String $r12;
        java.lang.Class $r13, $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r4 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        $r5 := @parameter4: org.codehaus.jackson.map.deser.CreatorContainer;

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getConstructors()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.codehaus.jackson.map.introspect.AnnotatedConstructor) $r9;

        $i0 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: int getParameterCount()>();

        if $i0 < 1 goto label01;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $i0 != 1 goto label11;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r12 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r11);

        if $r12 == null goto label02;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 != 0 goto label12;

     label02:
        $r13 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.Class getParameterClass(int)>(0);

        if $r13 != class "Ljava/lang/String;" goto label04;

        if $z0 != 0 goto label03;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label03:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addStringConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>(r10);

        goto label01;

     label04:
        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r13 == $r14 goto label05;

        if $r13 != class "Ljava/lang/Integer;" goto label07;

     label05:
        if $z0 != 0 goto label06;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label06:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addIntConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>(r10);

        goto label01;

     label07:
        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        if $r13 == $r14 goto label08;

        if $r13 != class "Ljava/lang/Long;" goto label10;

     label08:
        if $z0 != 0 goto label09;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label09:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addLongConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>(r10);

        goto label01;

     label10:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $z0 == 0 goto label01;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)>(r10);

        goto label01;

     label11:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $z0 == 0 goto label01;

     label12:
        r6 = newarray (org.codehaus.jackson.map.deser.SettableBeanProperty)[$i0];

        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label18;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>($i1);

        if $r11 != null goto label16;

        $r12 = null;

     label14:
        if $r12 == null goto label15;

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 != 0 goto label17;

     label15:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of constructor ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have name when multiple-paramater constructor annotated as Creator");

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r15;

     label16:
        $r12 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r11);

        goto label14;

     label17:
        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1, $r2, $r12, $i1, $r11);

        r6[$i1] = $r17;

        $i1 = $i1 + 1;

        goto label13;

     label18:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[])>(r10, r6);

        goto label01;

     label19:
        return;
    }

    protected void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.VisibilityChecker, org.codehaus.jackson.map.AnnotationIntrospector, org.codehaus.jackson.map.deser.CreatorContainer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker r3;
        org.codehaus.jackson.map.AnnotationIntrospector $r4;
        org.codehaus.jackson.map.deser.CreatorContainer $r5;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] r6;
        java.util.List $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r10;
        int $i0, $i1, $i2;
        org.codehaus.jackson.map.introspect.AnnotatedParameter $r11;
        java.lang.String $r12;
        java.lang.Class $r13, $r14;
        java.lang.IllegalArgumentException $r15;
        java.lang.StringBuilder $r16;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r3 := @parameter2: org.codehaus.jackson.map.introspect.VisibilityChecker;

        $r4 := @parameter3: org.codehaus.jackson.map.AnnotationIntrospector;

        $r5 := @parameter4: org.codehaus.jackson.map.deser.CreatorContainer;

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.List getFactoryMethods()>();

        $r8 = interfaceinvoke $r7.<java.util.List: java.util.Iterator iterator()>();

     label01:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label17;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r9;

        $i0 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMethod: int getParameterCount()>();

        if $i0 < 1 goto label01;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $i0 != 1 goto label11;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>(0);

        $r12 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r11);

        if $r12 == null goto label02;

        $i1 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i1 != 0 goto label12;

     label02:
        $r13 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        if $r13 != class "Ljava/lang/String;" goto label04;

        if $z0 != 0 goto label03;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label03:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addStringFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r10);

        goto label01;

     label04:
        $r14 = <java.lang.Integer: java.lang.Class TYPE>;

        if $r13 == $r14 goto label05;

        if $r13 != class "Ljava/lang/Integer;" goto label07;

     label05:
        if $z0 != 0 goto label06;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label06:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addIntFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r10);

        goto label01;

     label07:
        $r14 = <java.lang.Long: java.lang.Class TYPE>;

        if $r13 == $r14 goto label08;

        if $r13 != class "Ljava/lang/Long;" goto label10;

     label08:
        if $z0 != 0 goto label09;

        $z0 = interfaceinvoke r3.<org.codehaus.jackson.map.introspect.VisibilityChecker: boolean isCreatorVisible(org.codehaus.jackson.map.introspect.AnnotatedMember)>(r10);

        if $z0 == 0 goto label01;

     label09:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addLongFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r10);

        goto label01;

     label10:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $z0 == 0 goto label01;

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addDelegatingFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r10);

        goto label01;

     label11:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: boolean hasCreatorAnnotation(org.codehaus.jackson.map.introspect.Annotated)>(r10);

        if $z0 == 0 goto label01;

     label12:
        r6 = newarray (org.codehaus.jackson.map.deser.SettableBeanProperty)[$i0];

        $i1 = 0;

     label13:
        if $i1 >= $i0 goto label16;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.map.introspect.AnnotatedParameter getParameter(int)>($i1);

        $r12 = virtualinvoke $r4.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String findPropertyNameForParam(org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r11);

        if $r12 == null goto label14;

        $i2 = virtualinvoke $r12.<java.lang.String: int length()>();

        if $i2 != 0 goto label15;

     label14:
        $r15 = new java.lang.IllegalArgumentException;

        $r16 = new java.lang.StringBuilder;

        specialinvoke $r16.<java.lang.StringBuilder: void <init>()>();

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Argument #");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" of factory method ");

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r10);

        $r16 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" has no property name annotation; must have when multiple-paramater static method annotated as Creator");

        $r12 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12);

        throw $r15;

     label15:
        $r17 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructCreatorProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,int,org.codehaus.jackson.map.introspect.AnnotatedParameter)>($r1, $r2, $r12, $i1, $r11);

        r6[$i1] = $r17;

        $i1 = $i1 + 1;

        goto label13;

     label16:
        virtualinvoke $r5.<org.codehaus.jackson.map.deser.CreatorContainer: void addPropertyFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>(r10, r6);

        goto label01;

     label17:
        return;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomArrayDeserializer(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.type.ArrayType $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.TypeDeserializer $r5;
        org.codehaus.jackson.map.JsonDeserializer r6, $r12;
        org.codehaus.jackson.map.DeserializerFactory$Config $r7;
        java.lang.Iterable $r8;
        java.util.Iterator $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.codehaus.jackson.map.Deserializers r11;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        r6 := @parameter5: org.codehaus.jackson.map.JsonDeserializer;

        $r7 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r9 = interfaceinvoke $r8.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r9.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r10 = interfaceinvoke $r9.<java.util.Iterator: java.lang.Object next()>();

        r11 = (org.codehaus.jackson.map.Deserializers) $r10;

        $r12 = interfaceinvoke r11.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findArrayDeserializer(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, r6);

        if $r12 == null goto label1;

        return $r12;

     label2:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.DeserializerFactory$Config $r6;
        java.lang.Iterable $r7;
        java.util.Iterator $r8;
        boolean $z0;
        java.lang.Object $r9;
        org.codehaus.jackson.map.Deserializers r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r8 = interfaceinvoke $r7.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r8.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r9 = interfaceinvoke $r8.<java.util.Iterator: java.lang.Object next()>();

        r10 = (org.codehaus.jackson.map.Deserializers) $r9;

        $r11 = interfaceinvoke r10.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r3, $r4, $r5);

        if $r11 == null goto label1;

        return $r11;

     label2:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.type.CollectionType $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.TypeDeserializer $r6;
        org.codehaus.jackson.map.JsonDeserializer r7, $r13;
        org.codehaus.jackson.map.DeserializerFactory$Config $r8;
        java.lang.Iterable $r9;
        java.util.Iterator $r10;
        boolean $z0;
        java.lang.Object $r11;
        org.codehaus.jackson.map.Deserializers r12;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.CollectionType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.TypeDeserializer;

        r7 := @parameter6: org.codehaus.jackson.map.JsonDeserializer;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.jackson.map.Deserializers) $r11;

        $r13 = interfaceinvoke r12.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findCollectionDeserializer(org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, r7);

        if $r13 == null goto label1;

        return $r13;

     label2:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomEnumDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.DeserializerFactory$Config $r5;
        java.lang.Iterable $r6;
        java.util.Iterator $r7;
        boolean $z0;
        java.lang.Object $r8;
        org.codehaus.jackson.map.Deserializers r9;
        org.codehaus.jackson.map.JsonDeserializer $r10;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r6 = virtualinvoke $r5.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r7 = interfaceinvoke $r6.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r7.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r8 = interfaceinvoke $r7.<java.util.Iterator: java.lang.Object next()>();

        r9 = (org.codehaus.jackson.map.Deserializers) $r8;

        $r10 = interfaceinvoke r9.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findEnumDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)>(r1, $r2, $r3, $r4);

        if $r10 == null goto label1;

        return $r10;

     label2:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomMapDeserializer(org.codehaus.jackson.map.type.MapType, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.TypeDeserializer, org.codehaus.jackson.map.JsonDeserializer) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.type.MapType $r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.DeserializerProvider $r3;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r4;
        org.codehaus.jackson.map.BeanProperty $r5;
        org.codehaus.jackson.map.KeyDeserializer $r6;
        org.codehaus.jackson.map.TypeDeserializer $r7;
        org.codehaus.jackson.map.JsonDeserializer r8, $r14;
        org.codehaus.jackson.map.DeserializerFactory$Config $r9;
        java.lang.Iterable $r10;
        java.util.Iterator $r11;
        boolean $z0;
        java.lang.Object $r12;
        org.codehaus.jackson.map.Deserializers r13;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.type.MapType;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r5 := @parameter4: org.codehaus.jackson.map.BeanProperty;

        $r6 := @parameter5: org.codehaus.jackson.map.KeyDeserializer;

        $r7 := @parameter6: org.codehaus.jackson.map.TypeDeserializer;

        r8 := @parameter7: org.codehaus.jackson.map.JsonDeserializer;

        $r9 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r11 = interfaceinvoke $r10.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r11.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r12 = interfaceinvoke $r11.<java.util.Iterator: java.lang.Object next()>();

        r13 = (org.codehaus.jackson.map.Deserializers) $r12;

        $r14 = interfaceinvoke r13.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findMapDeserializer(org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r2, $r3, $r4, $r5, $r6, $r7, r8);

        if $r14 == null goto label1;

        return $r14;

     label2:
        return null;
    }

    protected org.codehaus.jackson.map.JsonDeserializer _findCustomTreeNodeDeserializer(java.lang.Class, org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.DeserializationConfig $r2;
        org.codehaus.jackson.map.BeanProperty $r3;
        org.codehaus.jackson.map.DeserializerFactory$Config $r4;
        java.lang.Iterable $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        org.codehaus.jackson.map.Deserializers r8;
        org.codehaus.jackson.map.JsonDeserializer $r9;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationConfig;

        $r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r4 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializers()>();

        $r6 = interfaceinvoke $r5.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (org.codehaus.jackson.map.Deserializers) $r7;

        $r9 = interfaceinvoke r8.<org.codehaus.jackson.map.Deserializers: org.codehaus.jackson.map.JsonDeserializer findTreeNodeDeserializer(java.lang.Class,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.BeanProperty)>(r1, $r2, $r3);

        if $r9 == null goto label1;

        return $r9;

     label2:
        return null;
    }

    protected void addBeanProps(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r3;
        java.util.HashSet r4, $r16;
        java.util.HashMap r5;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r6, r7;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r8;
        boolean $z0;
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r9;
        org.codehaus.jackson.map.AnnotationIntrospector $r10;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r11;
        java.util.LinkedHashMap $r12;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r13, r21;
        java.lang.Boolean $r14;
        java.lang.String[] $r15;
        java.util.Iterator $r17;
        java.lang.Object $r18;
        java.lang.String r19;
        java.lang.Iterable $r20;
        org.codehaus.jackson.map.introspect.AnnotatedField r22;
        java.util.Set $r23;
        java.util.Map$Entry r24;
        java.lang.Class $r25, $r28;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r26;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r27;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        r7 = $r6;

        $r8 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_SETTERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r8);

        if $z0 != 0 goto label01;

        $r9 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r7 = interfaceinvoke $r6.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withSetterVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r9);

     label01:
        $r8 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_FIELDS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r8);

        if $z0 != 0 goto label02;

        $r9 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r7 = interfaceinvoke r7.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withFieldVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r9);

     label02:
        $r10 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r6 = virtualinvoke $r10.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r11, r7);

        $r12 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker)>($r6);

        $r13 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter()>();

        $r10 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r14 = virtualinvoke $r10.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean findIgnoreUnknownProperties(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r11);

        if $r14 == null goto label03;

        $z0 = virtualinvoke $r14.<java.lang.Boolean: boolean booleanValue()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setIgnoreUnknownProperties(boolean)>($z0);

     label03:
        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r15 = virtualinvoke $r10.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.String[] findPropertiesToIgnore(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r11);

        $r16 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r15);

        $r17 = virtualinvoke $r16.<java.util.HashSet: java.util.Iterator iterator()>();

     label04:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label05;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r19 = (java.lang.String) $r18;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r19);

        goto label04;

     label05:
        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r20 = virtualinvoke $r11.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredMemberMethods()>();

        $r17 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label06:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label07;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r21 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r18;

        r19 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.String okNameForSetter(org.codehaus.jackson.map.introspect.AnnotatedMethod)>(r21);

        if r19 == null goto label06;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r19);

        goto label06;

     label07:
        $r20 = virtualinvoke $r11.<org.codehaus.jackson.map.introspect.AnnotatedClass: java.lang.Iterable ignoredFields()>();

        $r17 = interfaceinvoke $r20.<java.lang.Iterable: java.util.Iterator iterator()>();

     label08:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label09;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r22 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r18;

        r19 = virtualinvoke r22.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.String getName()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r19);

        goto label08;

     label09:
        r5 = new java.util.HashMap;

        specialinvoke r5.<java.util.HashMap: void <init>()>();

        $r23 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label10:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label12;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.util.Map$Entry) $r18;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        r19 = (java.lang.String) $r18;

        $z0 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>(r19);

        if $z0 != 0 goto label10;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        r21 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r18;

        $r25 = virtualinvoke r21.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getParameterClass(int)>(0);

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>($r1, $r2, $r25, r5);

        if $z0 == 0 goto label11;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r19);

        goto label10;

     label11:
        $r26 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, r19, r21);

        if $r26 == null goto label10;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r26);

        goto label10;

     label12:
        if $r13 == null goto label13;

        $r27 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r13);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setAnySetter(org.codehaus.jackson.map.deser.SettableAnyProperty)>($r27);

     label13:
        r4 = new java.util.HashSet;

        $r23 = interfaceinvoke $r12.<java.util.Map: java.util.Set keySet()>();

        specialinvoke r4.<java.util.HashSet: void <init>(java.util.Collection)>($r23);

        $r12 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>($r6, r4);

        $r23 = virtualinvoke $r12.<java.util.LinkedHashMap: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label14:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label16;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.util.Map$Entry) $r18;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        r19 = (java.lang.String) $r18;

        $z0 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>(r19);

        if $z0 != 0 goto label14;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>(r19);

        if $z0 != 0 goto label14;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        r22 = (org.codehaus.jackson.map.introspect.AnnotatedField) $r18;

        $r25 = virtualinvoke r22.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.Class getRawType()>();

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.Class,java.util.Map)>($r1, $r2, $r25, r5);

        if $z0 == 0 goto label15;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>(r19);

        goto label14;

     label15:
        $r26 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>($r1, $r2, r19, r22);

        if $r26 == null goto label14;

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r26);

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r19);

        goto label14;

     label16:
        $r8 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature USE_GETTERS_AS_SETTERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r8);

        if $z0 == 0 goto label19;

        $r12 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)>($r6, r4);

        $r23 = interfaceinvoke $r12.<java.util.Map: java.util.Set entrySet()>();

        $r17 = interfaceinvoke $r23.<java.util.Set: java.util.Iterator iterator()>();

     label17:
        $z0 = interfaceinvoke $r17.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label19;

        $r18 = interfaceinvoke $r17.<java.util.Iterator: java.lang.Object next()>();

        r24 = (java.util.Map$Entry) $r18;

        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getValue()>();

        $r13 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) $r18;

        $r25 = virtualinvoke $r13.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.Class getRawType()>();

        $r28 = class "Ljava/util/Collection;";

        $z0 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r25);

        if $z0 != 0 goto label18;

        $r28 = class "Ljava/util/Map;";

        $z0 = virtualinvoke $r28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>($r25);

        if $z0 == 0 goto label17;

     label18:
        $r18 = interfaceinvoke r24.<java.util.Map$Entry: java.lang.Object getKey()>();

        r19 = (java.lang.String) $r18;

        $z0 = virtualinvoke $r16.<java.util.HashSet: boolean contains(java.lang.Object)>(r19);

        if $z0 != 0 goto label17;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: boolean hasProperty(java.lang.String)>(r19);

        if $z0 != 0 goto label17;

        $r26 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, r19, $r13);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r26);

        virtualinvoke r4.<java.util.HashSet: boolean add(java.lang.Object)>(r19);

        goto label17;

     label19:
        return;
    }

    protected void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.deser.BeanDeserializerBuilder) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r3;
        java.util.Map $r4;
        java.util.Set $r5;
        java.util.Iterator $r6;
        boolean $z0;
        java.lang.Object $r7;
        java.util.Map$Entry r8;
        java.lang.String r9, $r11;
        org.codehaus.jackson.map.introspect.AnnotatedMember r10;
        org.codehaus.jackson.map.introspect.AnnotatedMethod r12;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r13;
        org.codehaus.jackson.map.introspect.AnnotatedField r14;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.util.Map findBackReferenceProperties()>();

        if $r4 == null goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Map: java.util.Set entrySet()>();

        $r6 = interfaceinvoke $r5.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r6.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r7 = interfaceinvoke $r6.<java.util.Iterator: java.lang.Object next()>();

        r8 = (java.util.Map$Entry) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getKey()>();

        r9 = (java.lang.String) $r7;

        $r7 = interfaceinvoke r8.<java.util.Map$Entry: java.lang.Object getValue()>();

        r10 = (org.codehaus.jackson.map.introspect.AnnotatedMember) $r7;

        $z0 = r10 instanceof org.codehaus.jackson.map.introspect.AnnotatedMethod;

        if $z0 == 0 goto label2;

        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.String getName()>();

        r12 = (org.codehaus.jackson.map.introspect.AnnotatedMethod) r10;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r11, r12);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r9, $r13);

        goto label1;

     label2:
        $r11 = virtualinvoke r10.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.String getName()>();

        r14 = (org.codehaus.jackson.map.introspect.AnnotatedField) r10;

        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedField)>($r1, $r2, $r11, r14);

        virtualinvoke $r3.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addBackReferenceProperty(java.lang.String,org.codehaus.jackson.map.deser.SettableBeanProperty)>(r9, $r13);

        goto label1;

     label3:
        return;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r5, r6;
        org.codehaus.jackson.map.deser.CreatorContainer $r7;
        org.codehaus.jackson.map.DeserializerFactory$Config $r8;
        boolean $z0;
        java.lang.Iterable $r9;
        java.util.Iterator $r10;
        java.lang.Object $r11;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier r12;
        org.codehaus.jackson.map.JsonDeserializer $r13, r14;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r3);

        r6 = $r5;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1, $r3);

        virtualinvoke $r5.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>($r7);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r3, $r5);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addReferenceProperties(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r3, $r5);

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label2;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r11;

        r6 = virtualinvoke r12.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r3, r6);

        goto label1;

     label2:
        $r13 = virtualinvoke r6.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>($r4);

        r14 = $r13;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label4;

        $r8 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r10 = interfaceinvoke $r9.<java.lang.Iterable: java.util.Iterator iterator()>();

     label3:
        $z0 = interfaceinvoke $r10.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label5;

        $r11 = interfaceinvoke $r10.<java.util.Iterator: java.lang.Object next()>();

        r12 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r11;

        r14 = virtualinvoke r12.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r3, r14);

        goto label3;

     label4:
        return $r13;

     label5:
        return r14;
    }

    public org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r3;
        org.codehaus.jackson.map.BeanProperty $r4;
        org.codehaus.jackson.map.deser.ThrowableDeserializer r5;
        java.lang.Class[] $r6;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r7, r8;
        org.codehaus.jackson.map.deser.CreatorContainer $r9;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r10;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r11;
        org.codehaus.jackson.map.DeserializerFactory$Config $r12;
        boolean $z0;
        java.lang.Iterable $r13;
        java.util.Iterator $r14;
        java.lang.Object $r15;
        org.codehaus.jackson.map.deser.BeanDeserializerModifier r16;
        org.codehaus.jackson.map.JsonDeserializer $r17, r18;
        org.codehaus.jackson.map.deser.BeanDeserializer r19;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r3);

        r8 = $r7;

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1, $r3);

        virtualinvoke $r7.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)>($r9);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void addBeanProps(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r3, $r7);

        $r6 = <org.codehaus.jackson.map.deser.BeanDeserializerFactory: java.lang.Class[] INIT_CAUSE_PARAMS>;

        $r10 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedMethod findMethod(java.lang.String,java.lang.Class[])>("initCause", $r6);

        if $r10 == null goto label1;

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r3, "cause", $r10);

        if $r11 == null goto label1;

        virtualinvoke $r7.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addProperty(org.codehaus.jackson.map.deser.SettableBeanProperty)>($r11);

     label1:
        virtualinvoke $r7.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("localizedMessage");

        virtualinvoke $r7.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void addIgnorable(java.lang.String)>("message");

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r12.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label3;

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r14 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r15;

        r8 = virtualinvoke r16.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.deser.BeanDeserializerBuilder updateBuilder(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.deser.BeanDeserializerBuilder)>($r1, $r3, r8);

        goto label2;

     label3:
        $r17 = virtualinvoke r8.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: org.codehaus.jackson.map.JsonDeserializer build(org.codehaus.jackson.map.BeanProperty)>($r4);

        r18 = $r17;

        $z0 = $r17 instanceof org.codehaus.jackson.map.deser.BeanDeserializer;

        if $z0 == 0 goto label4;

        r5 = new org.codehaus.jackson.map.deser.ThrowableDeserializer;

        r19 = (org.codehaus.jackson.map.deser.BeanDeserializer) $r17;

        specialinvoke r5.<org.codehaus.jackson.map.deser.ThrowableDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>(r19);

        r18 = r5;

     label4:
        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $z0 = virtualinvoke $r12.<org.codehaus.jackson.map.DeserializerFactory$Config: boolean hasDeserializerModifiers()>();

        if $z0 == 0 goto label6;

        $r12 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.DeserializerFactory$Config: java.lang.Iterable deserializerModifiers()>();

        $r14 = interfaceinvoke $r13.<java.lang.Iterable: java.util.Iterator iterator()>();

     label5:
        $z0 = interfaceinvoke $r14.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label6;

        $r15 = interfaceinvoke $r14.<java.util.Iterator: java.lang.Object next()>();

        r16 = (org.codehaus.jackson.map.deser.BeanDeserializerModifier) $r15;

        r18 = virtualinvoke r16.<org.codehaus.jackson.map.deser.BeanDeserializerModifier: org.codehaus.jackson.map.JsonDeserializer modifyDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonDeserializer)>($r1, $r3, r18);

        goto label5;

     label6:
        return r18;
    }

    protected org.codehaus.jackson.map.deser.SettableAnyProperty constructAnySetter(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.BeanProperty$Std r4;
        org.codehaus.jackson.map.deser.SettableAnyProperty r5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r6;
        boolean $z0;
        java.lang.reflect.Type $r7;
        org.codehaus.jackson.map.type.TypeBindings $r8;
        org.codehaus.jackson.type.JavaType $r9;
        java.lang.String $r10;
        org.codehaus.jackson.map.util.Annotations $r11;
        org.codehaus.jackson.map.JsonDeserializer $r12;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r7 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(1);

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r9 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>($r7, $r8);

        r4 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r10 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.String getName()>();

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r4.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r10, $r9, $r11, $r3);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r9, $r3, r4);

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r3, r4);

        if $r12 == null goto label2;

        r5 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke r5.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)>(r4, $r3, $r9);

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableAnyProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r12);

        return r5;

     label2:
        $r10 = virtualinvoke r4.<org.codehaus.jackson.map.BeanProperty$Std: java.lang.String getName()>();

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r3, $r9, $r10);

        r5 = new org.codehaus.jackson.map.deser.SettableAnyProperty;

        specialinvoke r5.<org.codehaus.jackson.map.deser.SettableAnyProperty: void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)>(r4, $r3, $r9);

        return r5;
    }

    protected org.codehaus.jackson.map.deser.BeanDeserializerBuilder constructBeanDeserializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r1;
        org.codehaus.jackson.map.deser.BeanDeserializerBuilder $r2;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r2 = new org.codehaus.jackson.map.deser.BeanDeserializerBuilder;

        specialinvoke $r2.<org.codehaus.jackson.map.deser.BeanDeserializerBuilder: void <init>(org.codehaus.jackson.map.introspect.BasicBeanDescription)>($r1);

        return $r2;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedField) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.introspect.AnnotatedField $r4;
        org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty r5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r6;
        boolean $z0;
        java.lang.reflect.Type $r7;
        org.codehaus.jackson.map.type.TypeBindings $r8;
        org.codehaus.jackson.type.JavaType $r9, $r12;
        org.codehaus.jackson.map.BeanProperty$Std r10;
        org.codehaus.jackson.map.util.Annotations $r11;
        org.codehaus.jackson.map.JsonDeserializer $r13;
        java.lang.Object $r14;
        org.codehaus.jackson.map.TypeDeserializer r15;
        org.codehaus.jackson.map.AnnotationIntrospector $r16;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedField;

        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedField: void fixAccess()>();

     label1:
        $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedField: java.lang.reflect.Type getGenericType()>();

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r9 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>($r7, $r8);

        r10 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r10.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r3, $r9, $r11, $r4);

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r9, $r4, r10);

        if $r12 == $r9 goto label2;

        r10 = virtualinvoke r10.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r12);

     label2:
        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r4, r10);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r4, $r12, $r3);

        $r14 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        r15 = (org.codehaus.jackson.map.TypeDeserializer) $r14;

        r5 = new org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty;

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedField)>($r3, $r9, r15, $r11, $r4);

        if $r13 == null goto label3;

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r13);

     label3:
        $r16 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r4);

        if $r17 == null goto label4;

        $z0 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r3);

     label4:
        return r5;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSettableProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r4;
        org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty r5;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r6;
        boolean $z0;
        java.lang.reflect.Type $r7;
        org.codehaus.jackson.map.type.TypeBindings $r8;
        org.codehaus.jackson.type.JavaType $r9, $r12;
        org.codehaus.jackson.map.BeanProperty$Std r10;
        org.codehaus.jackson.map.util.Annotations $r11;
        org.codehaus.jackson.map.JsonDeserializer $r13;
        java.lang.Object $r14;
        org.codehaus.jackson.map.TypeDeserializer r15;
        org.codehaus.jackson.map.AnnotationIntrospector $r16;
        org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty $r17;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r6 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r7 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Type getParameterType(int)>(0);

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r9 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)>($r7, $r8);

        r10 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r10.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r3, $r9, $r11, $r4);

        $r12 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType resolveType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r9, $r4, r10);

        if $r12 == $r9 goto label2;

        r10 = virtualinvoke r10.<org.codehaus.jackson.map.BeanProperty$Std: org.codehaus.jackson.map.BeanProperty$Std withType(org.codehaus.jackson.type.JavaType)>($r12);

     label2:
        $r13 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r4, r10);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r4, $r12, $r3);

        $r14 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        r15 = (org.codehaus.jackson.map.TypeDeserializer) $r14;

        r5 = new org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty;

        $r11 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r3, $r9, r15, $r11, $r4);

        if $r13 == null goto label3;

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r13);

     label3:
        $r16 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty findReferenceType(org.codehaus.jackson.map.introspect.AnnotatedMember)>($r4);

        if $r17 == null goto label4;

        $z0 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: boolean isManagedReference()>();

        if $z0 == 0 goto label4;

        $r3 = virtualinvoke $r17.<org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty: java.lang.String getName()>();

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setManagedReferenceName(java.lang.String)>($r3);

     label4:
        return r5;
    }

    protected org.codehaus.jackson.map.deser.SettableBeanProperty constructSetterlessProperty(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.String, org.codehaus.jackson.map.introspect.AnnotatedMethod) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r4;
        org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty r5;
        org.codehaus.jackson.map.BeanProperty$Std r6;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r7;
        boolean $z0;
        org.codehaus.jackson.map.type.TypeBindings $r8;
        org.codehaus.jackson.type.JavaType $r9;
        org.codehaus.jackson.map.util.Annotations $r10;
        org.codehaus.jackson.map.JsonDeserializer $r11;
        java.lang.Object $r12;
        org.codehaus.jackson.map.TypeDeserializer r13;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r7 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r7);

        if $z0 == 0 goto label1;

        virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: void fixAccess()>();

     label1:
        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()>();

        $r9 = virtualinvoke $r4.<org.codehaus.jackson.map.introspect.AnnotatedMethod: org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)>($r8);

        r6 = new org.codehaus.jackson.map.BeanProperty$Std;

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r6.<org.codehaus.jackson.map.BeanProperty$Std: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMember)>($r3, $r9, $r10, $r4);

        $r11 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r4, r6);

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r4, $r9, $r3);

        $r12 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Object getTypeHandler()>();

        r13 = (org.codehaus.jackson.map.TypeDeserializer) $r12;

        r5 = new org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty;

        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.util.Annotations getClassAnnotations()>();

        specialinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty: void <init>(java.lang.String,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.TypeDeserializer,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r3, $r9, r13, $r10, $r4);

        if $r11 == null goto label2;

        virtualinvoke r5.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r11);

     label2:
        return r5;
    }

    public org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        org.codehaus.jackson.map.BeanProperty $r3;
        org.codehaus.jackson.type.JavaType $r4, $r9;
        org.codehaus.jackson.map.BeanDescription $r5;
        org.codehaus.jackson.map.introspect.BasicBeanDescription r6;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r7;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        java.lang.Class $r10, $r11;
        boolean $z0;
        org.codehaus.jackson.map.AbstractTypeResolver $r12;
        org.codehaus.jackson.map.AnnotationIntrospector $r13;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r14;
        org.codehaus.jackson.map.deser.AbstractDeserializer $r15;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        $r4 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r4);

        r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer findDeserializerFromAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)>($r1, $r7, $r3);

        if $r8 == null goto label1;

        return $r8;

     label1:
        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType,java.lang.String)>($r1, $r7, $r4, null);

        $r10 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r11 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        if $r10 == $r11 goto label2;

        $r4 = $r9;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r9);

        r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

     label2:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer _findCustomBeanDeserializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r4, $r1, $r2, r6, $r3);

        if $r8 == null goto label3;

        return $r8;

     label3:
        $r8 = specialinvoke r0.<org.codehaus.jackson.map.deser.BasicDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer createBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r4, $r3);

        if $r8 == null goto label4;

        return $r8;

     label4:
        $r10 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: boolean isPotentialBeanType(java.lang.Class)>($r10);

        if $z0 != 0 goto label5;

        return null;

     label5:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isThrowable()>();

        if $z0 == 0 goto label6;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildThrowableDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r1, $r4, r6, $r3);

        return $r8;

     label6:
        $z0 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label8;

        $r12 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AbstractTypeResolver getAbstractTypeResolver()>();

        if $r12 == null goto label7;

        $r13 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r7 = virtualinvoke r6.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r14 = virtualinvoke $r13.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.jsontype.TypeResolverBuilder findTypeResolver(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType)>($r7, $r4);

        if $r14 != null goto label7;

        $r9 = virtualinvoke $r12.<org.codehaus.jackson.map.AbstractTypeResolver: org.codehaus.jackson.type.JavaType resolveAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)>($r1, $r4);

        if $r9 == null goto label7;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)>($r9);

        r6 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r5;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r1, $r9, r6, $r3);

        return $r8;

     label7:
        $r15 = new org.codehaus.jackson.map.deser.AbstractDeserializer;

        specialinvoke $r15.<org.codehaus.jackson.map.deser.AbstractDeserializer: void <init>(org.codehaus.jackson.type.JavaType)>($r4);

        return $r15;

     label8:
        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.JsonDeserializer buildBeanDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)>($r1, $r4, r6, $r3);

        return $r8;
    }

    protected org.codehaus.jackson.map.deser.CreatorContainer findDeserializerCreators(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        org.codehaus.jackson.map.deser.CreatorContainer r3;
        org.codehaus.jackson.map.DeserializationConfig$Feature $r4;
        boolean $z0, $z1;
        java.lang.Class $r5;
        org.codehaus.jackson.map.AnnotationIntrospector $r6, $r12;
        org.codehaus.jackson.type.JavaType $r7;
        java.lang.reflect.Constructor $r8;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r9, r10;
        org.codehaus.jackson.annotate.JsonAutoDetect$Visibility $r11;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r13;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature CAN_OVERRIDE_ACCESS_MODIFIERS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        r3 = new org.codehaus.jackson.map.deser.CreatorContainer;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.Class getBeanClass()>();

        specialinvoke r3.<org.codehaus.jackson.map.deser.CreatorContainer: void <init>(java.lang.Class,boolean)>($r5, $z0);

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.type.JavaType getType()>();

        $z1 = virtualinvoke $r7.<org.codehaus.jackson.type.JavaType: boolean isConcrete()>();

        if $z1 == 0 goto label2;

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: java.lang.reflect.Constructor findDefaultConstructor()>();

        if $r8 == null goto label2;

        if $z0 == 0 goto label1;

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r8);

     label1:
        virtualinvoke r3.<org.codehaus.jackson.map.deser.CreatorContainer: void setDefaultConstructor(java.lang.reflect.Constructor)>($r8);

     label2:
        $r9 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.introspect.VisibilityChecker getDefaultVisibilityChecker()>();

        r10 = $r9;

        $r4 = <org.codehaus.jackson.map.DeserializationConfig$Feature: org.codehaus.jackson.map.DeserializationConfig$Feature AUTO_DETECT_CREATORS>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)>($r4);

        if $z0 != 0 goto label3;

        $r11 = <org.codehaus.jackson.annotate.JsonAutoDetect$Visibility: org.codehaus.jackson.annotate.JsonAutoDetect$Visibility NONE>;

        r10 = interfaceinvoke $r9.<org.codehaus.jackson.map.introspect.VisibilityChecker: org.codehaus.jackson.map.introspect.VisibilityChecker withCreatorVisibility(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)>($r11);

     label3:
        $r12 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r13 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r9 = virtualinvoke $r12.<org.codehaus.jackson.map.AnnotationIntrospector: org.codehaus.jackson.map.introspect.VisibilityChecker findAutoDetectVisibility(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.map.introspect.VisibilityChecker)>($r13, r10);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerConstructors(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>($r1, $r2, $r9, $r6, r3);

        virtualinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void _addDeserializerFactoryMethods(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.deser.CreatorContainer)>($r1, $r2, $r9, $r6, r3);

        return r3;
    }

    public final org.codehaus.jackson.map.DeserializerFactory$Config getConfig()
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializerFactory$Config r1;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        return r1;
    }

    protected boolean isIgnorableType(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.introspect.BasicBeanDescription, java.lang.Class, java.util.Map)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.introspect.BasicBeanDescription $r2;
        java.lang.Class r3;
        java.util.Map r4;
        java.lang.Object $r5;
        java.lang.Boolean r6, $r10;
        org.codehaus.jackson.map.BeanDescription $r7;
        org.codehaus.jackson.map.AnnotationIntrospector $r8;
        org.codehaus.jackson.map.introspect.AnnotatedClass $r9;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.BasicBeanDescription;

        r3 := @parameter2: java.lang.Class;

        r4 := @parameter3: java.util.Map;

        $r5 = interfaceinvoke r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (java.lang.Boolean) $r5;

        if r6 != null goto label1;

        $r7 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.BeanDescription introspectClassAnnotations(java.lang.Class)>(r3);

        $r2 = (org.codehaus.jackson.map.introspect.BasicBeanDescription) $r7;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationConfig: org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()>();

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.introspect.BasicBeanDescription: org.codehaus.jackson.map.introspect.AnnotatedClass getClassInfo()>();

        $r10 = virtualinvoke $r8.<org.codehaus.jackson.map.AnnotationIntrospector: java.lang.Boolean isIgnorableType(org.codehaus.jackson.map.introspect.AnnotatedClass)>($r9);

        r6 = $r10;

        if $r10 != null goto label1;

        r6 = <java.lang.Boolean: java.lang.Boolean FALSE>;

     label1:
        $z0 = virtualinvoke r6.<java.lang.Boolean: boolean booleanValue()>();

        return $z0;
    }

    protected boolean isPotentialBeanType(java.lang.Class)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        java.lang.Class r1;
        java.lang.String $r2, $r5;
        java.lang.IllegalArgumentException $r3;
        java.lang.StringBuilder $r4;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>(r1);

        if $r2 == null goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label1:
        $z0 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: boolean isProxyType(java.lang.Class)>(r1);

        if $z0 == 0 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Proxy class ");

        $r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label2:
        $r2 = staticinvoke <org.codehaus.jackson.map.util.ClassUtil: java.lang.String isLocalType(java.lang.Class)>(r1);

        if $r2 == null goto label3;

        $r3 = new java.lang.IllegalArgumentException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Class ");

        $r5 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (of type ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as a Bean");

        $r2 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r2);

        throw $r3;

     label3:
        return 1;
    }

    public org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
    {
        org.codehaus.jackson.map.deser.BeanDeserializerFactory r0;
        org.codehaus.jackson.map.DeserializerFactory$Config $r1, $r2;
        java.lang.Class $r3;
        java.lang.IllegalStateException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;

        r0 := @this: org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializerFactory$Config;

        $r2 = r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: org.codehaus.jackson.map.DeserializerFactory$Config _factoryConfig>;

        if $r2 != $r1 goto label1;

        return r0;

     label1:
        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r3 == class "Lorg/codehaus/jackson/map/deser/BeanDeserializerFactory;" goto label2;

        $r4 = new java.lang.IllegalStateException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype of BeanDeserializerFactory (");

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r6 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has not properly overridden method \'withAdditionalDeserializers\': can not instantiate subtype with ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additional deserializer definitions");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        r0 = new org.codehaus.jackson.map.deser.BeanDeserializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializerFactory: void <init>(org.codehaus.jackson.map.DeserializerFactory$Config)>($r1);

        return r0;
    }
}
