public class org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer extends org.codehaus.jackson.map.deser.FromStringDeserializer
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.FromStringDeserializer: void <init>(java.lang.Class)>(class "Ljava/net/URI;");

        return;
    }

    protected volatile java.lang.Object _deserialize(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer r0;
        java.lang.String $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.net.URI $r3;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer: java.net.URI _deserialize(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    protected java.net.URI _deserialize(java.lang.String, org.codehaus.jackson.map.DeserializationContext) throws java.lang.IllegalArgumentException
    {
        org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer r0;
        java.lang.String $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.net.URI $r3;

        r0 := @this: org.codehaus.jackson.map.deser.FromStringDeserializer$URIDeserializer;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>($r1);

        return $r3;
    }
}
