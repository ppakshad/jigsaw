public class com.Leadbolt.AdEncryption extends java.lang.Object
{
    private static final java.lang.String KEY;

    public void <init>()
    {
        com.Leadbolt.AdEncryption r0;

        r0 := @this: com.Leadbolt.AdEncryption;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String base64encode(byte[])
    {
        java.lang.String r0, r2;
        int i0, i1, $i2, $i4;
        byte[] $r1;
        java.lang.StringBuilder $r3;
        byte $b3;
        char $c5;

        $r1 := @parameter0: byte[];

        r0 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";

        r2 = "";

        i1 = lengthof $r1;

        i1 = i1 % 3;

        i1 = 3 - i1;

        i1 = i1 % 3;

        $i2 = lengthof $r1;

        $i2 = $i2 + i1;

        $r1 = staticinvoke <com.Leadbolt.AdEncryption: byte[] zeroPad(int,byte[])>($i2, $r1);

        $i2 = 0;

     label1:
        i0 = lengthof $r1;

        if $i2 < i0 goto label2;

        $r3 = new java.lang.StringBuilder;

        $i2 = virtualinvoke r2.<java.lang.String: int length()>();

        $i2 = $i2 - i1;

        r0 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(0, $i2);

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r0 = "==";

        r0 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return r0;

     label2:
        $b3 = $r1[$i2];

        i0 = $b3 & 255;

        i0 = i0 << 16;

        $i4 = $i2 + 1;

        $b3 = $r1[$i4];

        $i4 = $b3 & 255;

        $i4 = $i4 << 8;

        i0 = i0 + $i4;

        $i4 = $i2 + 2;

        $b3 = $r1[$i4];

        $i4 = $b3 & 255;

        i0 = i0 + $i4;

        $r3 = new java.lang.StringBuilder;

        r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r2);

        $i4 = i0 >> 18;

        $i4 = $i4 & 63;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i4 = i0 >> 12;

        $i4 = $i4 & 63;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        $i4 = i0 >> 6;

        $i4 = $i4 & 63;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i4);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        i0 = i0 & 63;

        $c5 = virtualinvoke r0.<java.lang.String: char charAt(int)>(i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c5);

        r2 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        $i2 = $i2 + 3;

        goto label1;
    }

    private static java.lang.String byteArrayToHexString(byte[]) throws java.lang.Exception
    {
        byte[] $r0;
        java.lang.String r1;
        int i0, $i1;
        java.lang.StringBuilder $r2;
        byte $b2;

        $r0 := @parameter0: byte[];

        r1 = "";

        i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if i0 < $i1 goto label2;

        return r1;

     label2:
        $r2 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $b2 = $r0[i0];

        $i1 = $b2 & 255;

        $i1 = $i1 + 256;

        r1 = staticinvoke <java.lang.Integer: java.lang.String toString(int,int)>($i1, 16);

        r1 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>(1);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1);

        r1 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i0 + 1;

        goto label1;
    }

    public static java.lang.String encrypt(java.lang.String)
    {
        java.lang.String r0, $r2;
        java.lang.StringBuilder r1;
        int $i0, i1, i3, i4;
        byte[] $r3, $r4, r5, $r6;
        byte b2;
        java.lang.Exception r7;

        r0 := @parameter0: java.lang.String;

        r1 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0);

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(19);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        r0 = $r2;

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        i1 = $i0 % 16;

        if i1 == 0 goto label01;

        r1 = new java.lang.StringBuilder;

        r0 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2);

        specialinvoke r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0);

        i1 = $i0 % 16;

        i1 = 16 - i1;

        r0 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String repeat(char,int)>(0, i1);

        r1 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);

        r0 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

     label01:
        $r2 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String getRndIv()>();

        $r3 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r2 = "ciF6e+7Fd^21sd|0";

        $r4 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <com.Leadbolt.AdEncryption: byte[] xor(byte[],byte[])>($r4, $r3);

        i1 = lengthof $r4;

        if i1 <= 512 goto label21;

        r5 = newarray (byte)[512];

        i1 = 0;

     label02:
        if i1 < 512 goto label04;

        $r4 = r5;

        i1 = 0;

     label03:
        if i1 < $i0 goto label05;

        r0 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String base64encode(byte[])>($r3);

        r0 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String replaceChars(java.lang.String,java.lang.String,java.lang.String)>(r0, "+/=", "-_~");

        return r0;

     label04:
        b2 = $r4[i1];

        r5[i1] = b2;

        i1 = i1 + 1;

        goto label02;

     label05:
        $r2 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String sha1(byte[])>($r4);

        r5 = staticinvoke <com.Leadbolt.AdEncryption: byte[] pack(java.lang.String)>($r2);

        i3 = i1 + 16;

     label06:
        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i1, i3);

     label07:
        $r6 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        r5 = staticinvoke <com.Leadbolt.AdEncryption: byte[] xor(byte[],byte[])>($r6, r5);

        i3 = lengthof $r3;

        i4 = lengthof r5;

        i3 = i3 + i4;

        $r6 = newarray (byte)[i3];

        i3 = 0;

     label08:
        i4 = lengthof $r3;

        if i3 < i4 goto label15;

        i3 = 0;

     label09:
        i4 = lengthof r5;

        if i3 < i4 goto label16;

        $r3 = $r6;

        i3 = lengthof r5;

        i4 = lengthof $r4;

        i3 = i3 + i4;

        $r6 = newarray (byte)[i3];

        i3 = 0;

     label10:
        i4 = lengthof r5;

        if i3 < i4 goto label17;

        i3 = 0;

     label11:
        i4 = lengthof $r4;

        if i3 < i4 goto label18;

        i3 = lengthof $r6;

        if i3 <= 512 goto label20;

        $r4 = newarray (byte)[512];

        i3 = 0;

     label12:
        if i3 < 512 goto label19;

     label13:
        $r2 = "ciF6e+7Fd^21sd|0";

        r5 = virtualinvoke $r2.<java.lang.String: byte[] getBytes()>();

        $r4 = staticinvoke <com.Leadbolt.AdEncryption: byte[] xor(byte[],byte[])>(r5, $r4);

        i1 = i1 + 16;

        goto label03;

     label14:
        r7 := @caughtexception;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i1);

        goto label07;

     label15:
        b2 = $r3[i3];

        $r6[i3] = b2;

        i3 = i3 + 1;

        goto label08;

     label16:
        i4 = lengthof $r3;

        i4 = i4 + i3;

        b2 = r5[i3];

        $r6[i4] = b2;

        i3 = i3 + 1;

        goto label09;

     label17:
        b2 = r5[i3];

        $r6[i3] = b2;

        i3 = i3 + 1;

        goto label10;

     label18:
        i4 = lengthof r5;

        i4 = i4 + i3;

        b2 = $r4[i3];

        $r6[i4] = b2;

        i3 = i3 + 1;

        goto label11;

     label19:
        b2 = $r6[i3];

        $r4[i3] = b2;

        i3 = i3 + 1;

        goto label12;

     label20:
        $r4 = $r6;

        goto label13;

     label21:
        i1 = 0;

        goto label03;

        catch java.lang.Exception from label06 to label07 with label14;
    }

    private static java.lang.String getRndIv()
    {
        java.lang.String r0, r1, $r2;
        int i0, i1, $i2;
        double $d0;
        java.lang.StringBuilder $r3;

        r0 = "0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

        r1 = "";

        i0 = 16;

     label1:
        i1 = i0 + -1;

        if i0 > 0 goto label2;

        return r1;

     label2:
        $d0 = staticinvoke <java.lang.Math: double random()>();

        $d0 = $d0 * 62.0;

        i0 = (int) $d0;

        $i2 = i0 + 1;

        $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, $i2);

        $r3 = new java.lang.StringBuilder;

        r1 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1);

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>(r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        i0 = i1;

        goto label1;
    }

    private static byte[] pack(java.lang.String)
    {
        java.lang.String $r0, $r3;
        byte b0, $b5;
        byte[] r1, r2;
        int $i1, i2, $i3, $i4;
        double $d0, $d1;
        java.lang.Exception r4, r6;
        java.lang.StringBuilder $r5;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        r2 = newarray (byte)[1];

        i2 = 0;

     label01:
        $d0 = (double) i2;

        $i3 = $i1 / 2;

        $d1 = (double) $i3;

        $d1 = staticinvoke <java.lang.Math: double ceil(double)>($d1);

        b0 = $d0 cmpg $d1;

        if b0 < 0 goto label02;

        return r2;

     label02:
        $i3 = i2 * 2;

        $i4 = i2 * 2;

        $i4 = $i4 + 2;

     label03:
        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

     label04:
        $i3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String,int)>($r3, 16);

        b0 = (byte) $i3;

     label05:
        r2[i2] = b0;

     label06:
        i2 = i2 + 1;

        goto label01;

     label07:
        r4 := @caughtexception;

        $r5 = new java.lang.StringBuilder;

        $i3 = i2 * 2;

        $i4 = i2 * 2;

        $i4 = $i4 + 1;

        $r3 = virtualinvoke $r0.<java.lang.String: java.lang.String substring(int,int)>($i3, $i4);

        $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3);

        specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label04;

     label08:
        r6 := @caughtexception;

        $i3 = lengthof r2;

        $i3 = $i3 + 1;

        r1 = newarray (byte)[$i3];

        $i3 = 0;

     label09:
        $i4 = lengthof r2;

        if $i3 < $i4 goto label10;

        $i3 = lengthof r1;

        $i3 = $i3 - 1;

        r1[$i3] = b0;

        r2 = r1;

        goto label06;

     label10:
        $b5 = r2[$i3];

        r1[$i3] = $b5;

        $i3 = $i3 + 1;

        goto label09;

        catch java.lang.Exception from label03 to label04 with label07;
        catch java.lang.Exception from label05 to label06 with label08;
    }

    private static java.lang.String repeat(char, int)
    {
        char $c0;
        int $i1, i2;
        java.lang.StringBuilder r0;
        java.lang.String $r1;

        $c0 := @parameter0: char;

        $i1 := @parameter1: int;

        r0 = new java.lang.StringBuilder;

        specialinvoke r0.<java.lang.StringBuilder: void <init>()>();

        i2 = 0;

     label1:
        if i2 < $i1 goto label2;

        $r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label2:
        virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c0);

        i2 = i2 + 1;

        goto label1;
    }

    private static java.lang.String replaceChars(java.lang.String, java.lang.String, java.lang.String)
    {
        java.lang.String $r0, $r1, $r3;
        java.lang.StringBuffer r2;
        int $i0, $i1, i2, $i4;
        boolean z0;
        char $c3;

        $r0 := @parameter0: java.lang.String;

        $r1 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        if $r0 == null goto label1;

        $i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i0 == 0 goto label1;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label2;

     label1:
        return $r0;

     label2:
        if $r3 != null goto label3;

        $r3 = "";

     label3:
        z0 = 0;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        r2 = new java.lang.StringBuffer;

        specialinvoke r2.<java.lang.StringBuffer: void <init>(int)>($i1);

        i2 = 0;

     label4:
        if i2 < $i1 goto label5;

        if z0 == 0 goto label8;

        $r0 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.String toString()>();

        return $r0;

     label5:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        $i4 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>($c3);

        if $i4 < 0 goto label7;

        z0 = 1;

        if $i4 >= $i0 goto label6;

        $c3 = virtualinvoke $r3.<java.lang.String: char charAt(int)>($i4);

        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

     label6:
        i2 = i2 + 1;

        goto label4;

     label7:
        virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>($c3);

        goto label6;

     label8:
        return $r0;
    }

    private static java.lang.String sha1(byte[])
    {
        byte[] $r0;
        java.security.MessageDigest r1, $r2;
        java.lang.String $r3;
        java.lang.Exception $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: byte[];

        r1 = null;

     label1:
        $r2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-1");

     label2:
        r1 = $r2;

     label3:
        $r0 = virtualinvoke r1.<java.security.MessageDigest: byte[] digest(byte[])>($r0);

        $r3 = staticinvoke <com.Leadbolt.AdEncryption: java.lang.String byteArrayToHexString(byte[])>($r0);

     label4:
        return $r3;

     label5:
        $r4 := @caughtexception;

        return "";

     label6:
        $r5 := @caughtexception;

        goto label3;

        catch java.security.NoSuchAlgorithmException from label1 to label2 with label6;
        catch java.lang.Exception from label3 to label4 with label5;
    }

    private static byte[] xor(byte[], byte[])
    {
        byte[] $r0, $r1, r2;
        int $i0, $i1;
        byte $b2, $b3;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 = lengthof $r0;

        r2 = newarray (byte)[$i0];

        $i0 = 0;

     label1:
        $i1 = lengthof $r0;

        if $i0 < $i1 goto label2;

        return r2;

     label2:
        $b2 = $r0[$i0];

        $i1 = lengthof $r1;

        $i1 = $i0 % $i1;

        $b3 = $r1[$i1];

        $i1 = $b2 ^ $b3;

        $b2 = (byte) $i1;

        r2[$i0] = $b2;

        $i0 = $i0 + 1;

        goto label1;
    }

    private static byte[] zeroPad(int, byte[])
    {
        int $i0;
        byte[] $r0, r1;

        $i0 := @parameter0: int;

        $r0 := @parameter1: byte[];

        r1 = newarray (byte)[$i0];

        $i0 = lengthof $r0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, r1, 0, $i0);

        return r1;
    }

    public static void <clinit>()
    {
        <com.Leadbolt.AdEncryption: java.lang.String KEY> = "ciF6e+7Fd^21sd|0";

        return;
    }
}
