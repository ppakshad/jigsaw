public final class org.codehaus.jackson.map.introspect.AnnotationMap extends java.lang.Object implements org.codehaus.jackson.map.util.Annotations
{
    protected java.util.HashMap _annotations;

    public void <init>()
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    protected final void _add(java.lang.'annotation'.Annotation)
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        java.lang.'annotation'.Annotation $r1;
        java.lang.Class $r2;
        java.util.HashMap $r3;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r3 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations> = $r3;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r2 = interfaceinvoke $r1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r1);

        return;
    }

    public void add(java.lang.'annotation'.Annotation)
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        java.lang.'annotation'.Annotation $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotationMap: void _add(java.lang.'annotation'.Annotation)>($r1);

        return;
    }

    public void addIfNotPresent(java.lang.'annotation'.Annotation)
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        java.lang.'annotation'.Annotation $r1;
        java.util.HashMap $r2;
        java.lang.Class $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 := @parameter0: java.lang.'annotation'.Annotation;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r2 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r3 = interfaceinvoke $r1.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r3);

        if $z0 != 0 goto label2;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.map.introspect.AnnotationMap: void _add(java.lang.'annotation'.Annotation)>($r1);

     label2:
        return;
    }

    public java.lang.'annotation'.Annotation get(java.lang.Class)
    {
        java.lang.Class r0;
        java.lang.Object $r1;
        org.codehaus.jackson.map.introspect.AnnotationMap r2;
        java.util.HashMap $r3;
        java.lang.'annotation'.Annotation r4;

        r2 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        r0 := @parameter0: java.lang.Class;

        $r3 = r2.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r3 = r2.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r1 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r0);

        r4 = (java.lang.'annotation'.Annotation) $r1;

        return r4;
    }

    public int size()
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        int $i0;
        java.util.HashMap $r1;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r1 != null goto label1;

        return 0;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $i0 = virtualinvoke $r1.<java.util.HashMap: int size()>();

        return $i0;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.introspect.AnnotationMap r0;
        java.lang.String $r1;
        java.util.HashMap $r2;

        r0 := @this: org.codehaus.jackson.map.introspect.AnnotationMap;

        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        if $r2 != null goto label1;

        return "[null]";

     label1:
        $r2 = r0.<org.codehaus.jackson.map.introspect.AnnotationMap: java.util.HashMap _annotations>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.String toString()>();

        return $r1;
    }
}
