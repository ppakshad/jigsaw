class org.codehaus.jackson.util.TokenBuffer$1 extends java.lang.Object
{
    static final int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType;
    static final int[] $SwitchMap$org$codehaus$jackson$JsonToken;

    static void <clinit>()
    {
        org.codehaus.jackson.JsonParser$NumberType[] $r0;
        int $i0;
        int[] $r1;
        org.codehaus.jackson.JsonParser$NumberType $r2;
        org.codehaus.jackson.JsonToken[] $r3;
        org.codehaus.jackson.JsonToken $r4;
        java.lang.NoSuchFieldError $r5, $r6, $r7, $r8, $r9, $r10, $r11, $r12, $r13, $r14, $r15, $r16, $r17, $r18, $r19, $r20, $r21;

        $r0 = staticinvoke <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType[] values()>();

        $i0 = lengthof $r0;

        $r1 = newarray (int)[$i0];

        <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType> = $r1;

     label01:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType INT>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

     label02:
        $r1[$i0] = 1;

     label03:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_INTEGER>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

     label04:
        $r1[$i0] = 2;

     label05:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType BIG_DECIMAL>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

     label06:
        $r1[$i0] = 3;

     label07:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType FLOAT>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

     label08:
        $r1[$i0] = 4;

     label09:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonParser$NumberType>;

        $r2 = <org.codehaus.jackson.JsonParser$NumberType: org.codehaus.jackson.JsonParser$NumberType LONG>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonParser$NumberType: int ordinal()>();

     label10:
        $r1[$i0] = 5;

     label11:
        $r3 = staticinvoke <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken[] values()>();

        $i0 = lengthof $r3;

        $r1 = newarray (int)[$i0];

        <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken> = $r1;

     label12:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label13:
        $r1[$i0] = 1;

     label14:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label15:
        $r1[$i0] = 2;

     label16:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_ARRAY>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label17:
        $r1[$i0] = 3;

     label18:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label19:
        $r1[$i0] = 4;

     label20:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label21:
        $r1[$i0] = 5;

     label22:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label23:
        $r1[$i0] = 6;

     label24:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label25:
        $r1[$i0] = 7;

     label26:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label27:
        $r1[$i0] = 8;

     label28:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_TRUE>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label29:
        $r1[$i0] = 9;

     label30:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_FALSE>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label31:
        $r1[$i0] = 10;

     label32:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label33:
        $r1[$i0] = 11;

     label34:
        $r1 = <org.codehaus.jackson.util.TokenBuffer$1: int[] $SwitchMap$org$codehaus$jackson$JsonToken>;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_EMBEDDED_OBJECT>;

        $i0 = virtualinvoke $r4.<org.codehaus.jackson.JsonToken: int ordinal()>();

     label35:
        $r1[$i0] = 12;

        return;

     label36:
        $r5 := @caughtexception;

        return;

     label37:
        $r6 := @caughtexception;

        goto label34;

     label38:
        $r7 := @caughtexception;

        goto label32;

     label39:
        $r8 := @caughtexception;

        goto label30;

     label40:
        $r9 := @caughtexception;

        goto label28;

     label41:
        $r10 := @caughtexception;

        goto label26;

     label42:
        $r11 := @caughtexception;

        goto label24;

     label43:
        $r12 := @caughtexception;

        goto label22;

     label44:
        $r13 := @caughtexception;

        goto label20;

     label45:
        $r14 := @caughtexception;

        goto label18;

     label46:
        $r15 := @caughtexception;

        goto label16;

     label47:
        $r16 := @caughtexception;

        goto label14;

     label48:
        $r17 := @caughtexception;

        goto label11;

     label49:
        $r18 := @caughtexception;

        goto label09;

     label50:
        $r19 := @caughtexception;

        goto label07;

     label51:
        $r20 := @caughtexception;

        goto label05;

     label52:
        $r21 := @caughtexception;

        goto label03;

        catch java.lang.NoSuchFieldError from label01 to label02 with label52;
        catch java.lang.NoSuchFieldError from label03 to label04 with label51;
        catch java.lang.NoSuchFieldError from label05 to label06 with label50;
        catch java.lang.NoSuchFieldError from label07 to label08 with label49;
        catch java.lang.NoSuchFieldError from label09 to label10 with label48;
        catch java.lang.NoSuchFieldError from label12 to label13 with label47;
        catch java.lang.NoSuchFieldError from label14 to label15 with label46;
        catch java.lang.NoSuchFieldError from label16 to label17 with label45;
        catch java.lang.NoSuchFieldError from label18 to label19 with label44;
        catch java.lang.NoSuchFieldError from label20 to label21 with label43;
        catch java.lang.NoSuchFieldError from label22 to label23 with label42;
        catch java.lang.NoSuchFieldError from label24 to label25 with label41;
        catch java.lang.NoSuchFieldError from label26 to label27 with label40;
        catch java.lang.NoSuchFieldError from label28 to label29 with label39;
        catch java.lang.NoSuchFieldError from label30 to label31 with label38;
        catch java.lang.NoSuchFieldError from label32 to label33 with label37;
        catch java.lang.NoSuchFieldError from label34 to label35 with label36;
    }
}
