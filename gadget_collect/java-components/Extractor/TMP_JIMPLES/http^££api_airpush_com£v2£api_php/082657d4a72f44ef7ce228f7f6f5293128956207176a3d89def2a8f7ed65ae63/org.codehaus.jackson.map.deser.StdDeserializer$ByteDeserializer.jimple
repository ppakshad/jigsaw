public final class org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer extends org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer
{

    public void <init>(java.lang.Class, java.lang.Byte)
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer r0;
        java.lang.Class r1;
        java.lang.Byte $r2;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.Byte;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,java.lang.Object)>(r1, $r2);

        return;
    }

    public java.lang.Byte deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        int $i0;
        java.lang.Class $r3;
        org.codehaus.jackson.map.JsonMappingException $r4;
        byte $b1;
        java.lang.Byte $r5;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $i0 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: int _parseIntPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        if $i0 < -128 goto label1;

        if $i0 <= 127 goto label2;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: java.lang.Class _valueClass>;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String)>($r3, "overflow, value can not be represented as 8-bit value");

        throw $r4;

     label2:
        $b1 = (byte) $i0;

        $r5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b1);

        return $r5;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.lang.Byte $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$ByteDeserializer: java.lang.Byte deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }
}
