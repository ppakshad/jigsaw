public final class org.codehaus.jackson.impl.WriterBasedGenerator extends org.codehaus.jackson.impl.JsonGeneratorBase
{
    protected static final char[] HEX_CHARS;
    protected static final int SHORT_WRITE;
    protected char[] _entityBuffer;
    protected final org.codehaus.jackson.io.IOContext _ioContext;
    protected char[] _outputBuffer;
    protected int _outputEnd;
    protected int _outputHead;
    protected int _outputTail;
    protected final java.io.Writer _writer;

    static void <clinit>()
    {
        char[] $r0;

        <org.codehaus.jackson.impl.WriterBasedGenerator: int SHORT_WRITE> = 32;

        $r0 = staticinvoke <org.codehaus.jackson.util.CharTypes: char[] copyHexChars()>();

        <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS> = $r0;

        return;
    }

    public void <init>(org.codehaus.jackson.io.IOContext, int, org.codehaus.jackson.ObjectCodec, java.io.Writer)
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.io.IOContext $r1;
        int $i0;
        org.codehaus.jackson.ObjectCodec $r2;
        java.io.Writer $r3;
        char[] $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        $i0 := @parameter1: int;

        $r2 := @parameter2: org.codehaus.jackson.ObjectCodec;

        $r3 := @parameter3: java.io.Writer;

        specialinvoke r0.<org.codehaus.jackson.impl.JsonGeneratorBase: void <init>(int,org.codehaus.jackson.ObjectCodec)>($i0, $r2);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext> = $r1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer> = $r3;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.io.IOContext: char[] allocConcatBuffer()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer> = $r4;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = lengthof $r4;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd> = $i0;

        return;
    }

    private void _appendSingleEscape(int, char[], int)
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2;
        char[] $r1, $r2;
        char $c3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 := @parameter0: int;

        $r1 := @parameter1: char[];

        $i1 := @parameter2: int;

        if $i0 >= 0 goto label1;

        $i0 = $i0 + 1;

        $i0 = neg $i0;

        $r1[$i1] = 92;

        $i1 = $i1 + 1;

        $r1[$i1] = 117;

        $i1 = $i1 + 1;

        $r1[$i1] = 48;

        $i1 = $i1 + 1;

        $r1[$i1] = 48;

        $i1 = $i1 + 1;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i2 = $i0 >> 4;

        $c3 = $r2[$i2];

        $r1[$i1] = $c3;

        $i1 = $i1 + 1;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i0 = $i0 & 15;

        $c3 = $r2[$i0];

        $r1[$i1] = $c3;

        return;

     label1:
        $r1[$i1] = 92;

        $i1 = $i1 + 1;

        $c3 = (char) $i0;

        $r1[$i1] = $c3;

        return;
    }

    private void _writeLongString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int i0, $i1, i2, $i3;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i2 = 0;

     label1:
        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i3 = i2 + i0;

        if $i3 <= $i1 goto label3;

        i0 = $i1 - i2;

     label2:
        $i3 = i2 + i0;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(i2, $i3, $r2, 0);

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSegment(int)>(i0);

        i2 = i2 + i0;

        if i2 < $i1 goto label1;

        return;

     label3:
        goto label2;
    }

    private final void _writeNull() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 4;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        r1[$i0] = 110;

        $i0 = $i0 + 1;

        r1[$i0] = 117;

        $i0 = $i0 + 1;

        r1[$i0] = 108;

        $i0 = $i0 + 1;

        r1[$i0] = 108;

        $i0 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;
    }

    private final void _writeQuotedInt(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 := @parameter0: int;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i1 + 13;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i2;

        $r1[$i1] = 34;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>($i0, $r1, $i1);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r1[$i0] = 34;

        return;
    }

    private final void _writeQuotedLong(long) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        long $l0;
        int $i1, $i2;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $l0 := @parameter0: long;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i1 + 23;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i2;

        $r1[$i1] = 34;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>($l0, $r1, $i1);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i1 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i2;

        $r1[$i1] = 34;

        return;
    }

    private final void _writeQuotedRaw(java.lang.Object) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        int $i0, $i1;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        $r2 = virtualinvoke $r1.<java.lang.Object: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        return;
    }

    private final void _writeSegment(int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, i2, i3, i4, i5;
        char c1;
        char[] $r1;
        int[] $r2;
        java.io.Writer $r3;
        byte b6;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 := @parameter0: int;

        $r2 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        i3 = lengthof $r2;

        i5 = 0;

     label1:
        if i5 >= $i0 goto label9;

        i2 = i5;

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        c1 = $r1[i5];

        if c1 >= i3 goto label4;

        i4 = $r2[c1];

        if i4 == 0 goto label4;

     label3:
        i4 = i5 - i2;

        if i4 <= 0 goto label5;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r1, i2, i4);

        if i5 < $i0 goto label5;

        return;

     label4:
        i5 = i5 + 1;

        if i5 < $i0 goto label2;

        goto label3;

     label5:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        c1 = $r1[i5];

        i2 = $r2[c1];

        i5 = i5 + 1;

        if i2 >= 0 goto label7;

        b6 = 6;

     label6:
        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if b6 <= i4 goto label8;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSingleEscape(int)>(i2);

        goto label1;

     label7:
        b6 = 2;

        goto label6;

     label8:
        i5 = i5 - b6;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>(i2, $r1, i5);

        goto label1;

     label9:
        return;
    }

    private void _writeSingleEscape(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1;
        char[] r1, $r2;
        char $c2;
        java.io.Writer $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 := @parameter0: int;

        r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _entityBuffer>;

        if r1 != null goto label1;

        r1 = newarray (char)[6];

        r1[0] = 92;

        r1[2] = 48;

        r1[3] = 48;

     label1:
        if $i0 >= 0 goto label2;

        $i0 = $i0 + 1;

        $i0 = neg $i0;

        r1[1] = 117;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i1 = $i0 >> 4;

        $c2 = $r2[$i1];

        r1[4] = $c2;

        $r2 = <org.codehaus.jackson.impl.WriterBasedGenerator: char[] HEX_CHARS>;

        $i0 = $i0 & 15;

        $c2 = $r2[$i0];

        r1[5] = $c2;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r1, 0, 6);

        return;

     label2:
        $c2 = (char) $i0;

        r1[1] = $c2;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>(r1, 0, 2);

        return;
    }

    private void _writeString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        char c0;
        int i1, i2, i3, i4;
        char[] $r2;
        int[] $r3;
        java.io.Writer $r4;
        byte b5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i1 <= i3 goto label01;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeLongString(java.lang.String)>($r1);

        return;

     label01:
        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i3 = i3 + i1;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i3 <= i2 goto label02;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label02:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, $r2, i3);

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i3 + i1;

        $r3 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        i3 = lengthof $r3;

     label03:
        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if i2 >= i1 goto label10;

     label04:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        c0 = $r2[i2];

        if c0 >= i3 goto label07;

        i2 = $r3[c0];

        if i2 == 0 goto label07;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        i2 = i2 - i4;

        if i2 <= 0 goto label05;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r2, i4, i2);

     label05:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        c0 = $r2[i2];

        i2 = $r3[c0];

        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i4 = i4 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i4;

        if i2 >= 0 goto label08;

        b5 = 6;

     label06:
        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if b5 <= i4 goto label09;

        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = i4;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeSingleEscape(int)>(i2);

        goto label03;

     label07:
        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i2 = i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i2;

        if i2 < i1 goto label04;

        return;

     label08:
        b5 = 2;

        goto label06;

     label09:
        i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i4 = i4 - b5;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = i4;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>(i2, $r2, i4);

        goto label03;

     label10:
        return;
    }

    private void _writeString(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] $r1, $r3;
        char c0;
        int i1, i2, i3, $i4, $i5, $i6, $i7;
        int[] $r2;
        java.io.Writer $r4;
        byte b8;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: char[];

        $i4 := @parameter1: int;

        i2 := @parameter2: int;

        $i5 = i2 + $i4;

        $r2 = staticinvoke <org.codehaus.jackson.util.CharTypes: int[] getOutputEscapes()>();

        i2 = lengthof $r2;

     label01:
        if $i4 >= $i5 goto label12;

        i3 = $i4;

     label02:
        c0 = $r1[$i4];

        if c0 >= i2 goto label06;

        i1 = $r2[c0];

        if i1 == 0 goto label06;

     label03:
        i1 = $i4 - i3;

        if i1 >= 32 goto label07;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i6 = $i6 + i1;

        $i7 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i6 <= $i7 goto label04;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label04:
        if i1 <= 0 goto label05;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, i3, $r3, $i6, i1);

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i3 + i1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i1;

     label05:
        if $i4 < $i5 goto label08;

        return;

     label06:
        $i4 = $i4 + 1;

        if $i4 < $i5 goto label02;

        goto label03;

     label07:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r1, i3, i1);

        goto label05;

     label08:
        c0 = $r1[$i4];

        i1 = $r2[c0];

        $i4 = $i4 + 1;

        if i1 >= 0 goto label11;

        b8 = 6;

     label09:
        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i3 = i3 + b8;

        $i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i3 <= $i6 goto label10;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label10:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _appendSingleEscape(int,char[],int)>(i1, $r3, i3);

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i1 + b8;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i1;

        goto label01;

     label11:
        b8 = 2;

        goto label09;

     label12:
        return;
    }

    private void writeRawLong(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int i0, i1, $i2, $i3;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = $i2 - i1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, $r2, $i2);

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i2 + i1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i2 = i1;

        i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        i1 = i0 - i1;

     label1:
        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i1 <= i0 goto label2;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i3 = $i2 + i0;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>($i2, $i3, $r2, 0);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i0;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i2 = $i2 + i0;

        i1 = i1 - i0;

        goto label1;

     label2:
        i0 = $i2 + i1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>($i2, i0, $r2, 0);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i1;

        return;
    }

    protected final void _flushBuffer() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int i0, i1;
        java.io.Writer $r1;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        i0 = i0 - i1;

        if i0 <= 0 goto label1;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead>;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputHead> = 0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = 0;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        virtualinvoke $r1.<java.io.Writer: void write(char[],int,int)>($r2, i1, i0);

     label1:
        return;
    }

    protected void _releaseBuffers()
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] r1;
        org.codehaus.jackson.io.IOContext $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if r1 == null goto label1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer> = null;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext>;

        virtualinvoke $r2.<org.codehaus.jackson.io.IOContext: void releaseConcatBuffer(char[])>(r1);

     label1:
        return;
    }

    protected final void _verifyPrettyValueWrite(java.lang.String, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int $i0;
        org.codehaus.jackson.PrettyPrinter $r2;
        org.codehaus.jackson.impl.JsonWriteContext $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        lookupswitch($i0)
        {
            case 0: goto label5;
            case 1: goto label2;
            case 2: goto label3;
            case 3: goto label4;
            default: goto label1;
        };

     label1:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _cantHappen()>();

        return;

     label2:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeArrayValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label3:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeObjectFieldValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label4:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeRootValueSeparator(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label5:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.impl.JsonWriteContext: boolean inArray()>();

        if $z0 == 0 goto label6;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void beforeArrayValues(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label6:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.impl.JsonWriteContext: boolean inObject()>();

        if $z0 == 0 goto label7;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>(r0);

     label7:
        return;
    }

    protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1, $r4;
        org.codehaus.jackson.impl.JsonWriteContext $r2;
        int $i0, $i2;
        java.lang.StringBuilder $r3;
        org.codehaus.jackson.PrettyPrinter $r5;
        char c1;
        char[] $r6;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.impl.JsonWriteContext: int writeValue()>();

        if $i0 != 5 goto label1;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", expecting field name");

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>($r4);

     label1:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r5 != null goto label8;

        lookupswitch($i0)
        {
            case 1: goto label3;
            case 2: goto label6;
            case 3: goto label7;
            default: goto label2;
        };

     label2:
        return;

     label3:
        c1 = 44;

     label4:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i2 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        $r6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $r6[$i0] = c1;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;

     label6:
        c1 = 58;

        goto label4;

     label7:
        c1 = 32;

        goto label4;

     label8:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>($r1, $i0);

        return;
    }

    protected void _writeBinary(org.codehaus.jackson.Base64Variant, byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.Base64Variant $r1;
        byte[] $r2;
        int $i0, i1, i2, i3, $i4, $i5, i6;
        byte $b7;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.Base64Variant;

        $r2 := @parameter1: byte[];

        i3 := @parameter2: int;

        $i0 := @parameter3: int;

        i1 = $i0 - 3;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        i2 = i2 - 6;

        $i4 = virtualinvoke $r1.<org.codehaus.jackson.Base64Variant: int getMaxLineLength()>();

        $i4 = $i4 >> 2;

     label1:
        if i3 > i1 goto label4;

        $i5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if $i5 <= i2 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        i6 = i3 + 1;

        $b7 = $r2[i3];

        i3 = $b7 << 8;

        $i5 = i6 + 1;

        $b7 = $r2[i6];

        i6 = $b7 & 255;

        i3 = i3 | i6;

        i6 = i3 << 8;

        i3 = $i5 + 1;

        $b7 = $r2[$i5];

        $i5 = $b7 & 255;

        $i5 = i6 | $i5;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i6 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = virtualinvoke $r1.<org.codehaus.jackson.Base64Variant: int encodeBase64Chunk(int,char[],int)>($i5, $r3, i6);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        $i4 = $i4 + -1;

        if $i4 > 0 goto label3;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        $r3[$i4] = 92;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i5 = $i4 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i5;

        $r3[$i4] = 110;

        $i4 = virtualinvoke $r1.<org.codehaus.jackson.Base64Variant: int getMaxLineLength()>();

        $i4 = $i4 >> 2;

     label3:
        goto label1;

     label4:
        $i0 = $i0 - i3;

        if $i0 <= 0 goto label7;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        if i1 <= i2 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        i2 = i3 + 1;

        $b7 = $r2[i3];

        i3 = $b7 << 16;

        if $i0 != 2 goto label6;

        $b7 = $r2[i2];

        i2 = $b7 & 255;

        i2 = i2 << 8;

        i3 = i3 | i2;

     label6:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i3 = virtualinvoke $r1.<org.codehaus.jackson.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(i3, $i0, $r3, i2);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i3;

     label7:
        return;
    }

    protected void _writeFieldName(java.lang.String, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        boolean $z0;
        org.codehaus.jackson.PrettyPrinter $r2;
        int $i0, $i1;
        char[] $r3;
        org.codehaus.jackson.JsonGenerator$Feature $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writePPFieldName(java.lang.String,boolean)>($r1, $z0);

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 + 1;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        if $z0 == 0 goto label3;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 44;

     label3:
        $r4 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r4);

        if $z0 != 0 goto label4;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>($r1);

        return;

     label4:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>($r1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        return;
    }

    public void _writeFieldName(org.codehaus.jackson.SerializableString, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.SerializableString $r1;
        boolean $z0;
        int i0, $i1, $i2;
        org.codehaus.jackson.PrettyPrinter $r2;
        char[] $r3, $r5;
        org.codehaus.jackson.JsonGenerator$Feature $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.SerializableString;

        $z0 := @parameter1: boolean;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writePPFieldName(org.codehaus.jackson.SerializableString,boolean)>($r1, $z0);

        return;

     label1:
        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i0 = i0 + 1;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        if $z0 == 0 goto label3;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[i0] = 44;

     label3:
        $r3 = interfaceinvoke $r1.<org.codehaus.jackson.SerializableString: char[] asQuotedChars()>();

        $r4 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r4);

        if $z0 != 0 goto label4;

        i0 = lengthof $r3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>($r3, 0, i0);

        return;

     label4:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r5[i0] = 34;

        i0 = lengthof $r3;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i1 + i0;

        $i1 = $i1 + 1;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label6;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>($r3, 0, i0);

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i0 < $i1 goto label5;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label5:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[i0] = 34;

        return;

     label6:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r5, $i1, i0);

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i0 = $i1 + i0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i0;

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[i0] = 34;

        return;
    }

    protected final void _writePPFieldName(java.lang.String, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        boolean $z0;
        org.codehaus.jackson.PrettyPrinter $r2;
        org.codehaus.jackson.JsonGenerator$Feature $r3;
        int $i0, $i1;
        char[] $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label4;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)>(r0);

     label1:
        $r3 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r3);

        if $z0 == 0 goto label5;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r4[$i0] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>($r1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r4[$i0] = 34;

        return;

     label4:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label1;

     label5:
        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>($r1);

        return;
    }

    protected final void _writePPFieldName(org.codehaus.jackson.SerializableString, boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.SerializableString $r1;
        boolean $z0;
        org.codehaus.jackson.PrettyPrinter $r2;
        char[] $r3, $r5;
        org.codehaus.jackson.JsonGenerator$Feature $r4;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.SerializableString;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label4;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeObjectEntrySeparator(org.codehaus.jackson.JsonGenerator)>(r0);

     label1:
        $r3 = interfaceinvoke $r1.<org.codehaus.jackson.SerializableString: char[] asQuotedChars()>();

        $r4 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_FIELD_NAMES>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r4);

        if $z0 == 0 goto label5;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r5[$i0] = 34;

        $i0 = lengthof $r3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>($r3, 0, $i0);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        return;

     label4:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void beforeObjectEntries(org.codehaus.jackson.JsonGenerator)>(r0);

        goto label1;

     label5:
        $i0 = lengthof $r3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(char[],int,int)>($r3, 0, $i0);

        return;
    }

    public void close() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] $r1;
        org.codehaus.jackson.JsonGenerator$Feature $r2;
        boolean $z0;
        org.codehaus.jackson.impl.JsonWriteContext $r3;
        org.codehaus.jackson.io.IOContext $r4;
        java.io.Writer $r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        specialinvoke r0.<org.codehaus.jackson.impl.JsonGeneratorBase: void close()>();

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if $r1 == null goto label3;

        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z0 == 0 goto label3;

     label1:
        $r3 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext getOutputContext()>();

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.JsonStreamContext: boolean inArray()>();

        if $z0 == 0 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndArray()>();

        goto label1;

     label2:
        $z0 = virtualinvoke $r3.<org.codehaus.jackson.JsonStreamContext: boolean inObject()>();

        if $z0 == 0 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeEndObject()>();

        goto label1;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.io.IOContext _ioContext>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.io.IOContext: boolean isResourceManaged()>();

        if $z0 != 0 goto label4;

        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature AUTO_CLOSE_TARGET>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z0 == 0 goto label6;

     label4:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r5.<java.io.Writer: void close()>();

     label5:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _releaseBuffers()>();

        return;

     label6:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r5.<java.io.Writer: void flush()>();

        goto label5;
    }

    public final void flush() throws java.io.IOException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        boolean $z0;
        java.io.Writer $r1;
        org.codehaus.jackson.JsonGenerator$Feature $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        if $r1 == null goto label1;

        $r2 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r2);

        if $z0 == 0 goto label1;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r1.<java.io.Writer: void flush()>();

     label1:
        return;
    }

    public void writeBinary(org.codehaus.jackson.Base64Variant, byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.Base64Variant $r1;
        byte[] $r2;
        int $i0, $i1, $i2, $i3;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.Base64Variant;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write binary value");

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i3 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r3[$i2] = 34;

        $i1 = $i0 + $i1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)>($r1, $r2, $i0, $i1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 34;

        return;
    }

    public void writeBoolean(boolean) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        boolean $z0;
        char[] r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $z0 := @parameter0: boolean;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write boolean value");

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 5;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        if $z0 == 0 goto label3;

        r1[$i0] = 116;

        $i0 = $i0 + 1;

        r1[$i0] = 114;

        $i0 = $i0 + 1;

        r1[$i0] = 117;

        $i0 = $i0 + 1;

        r1[$i0] = 101;

     label2:
        $i0 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;

     label3:
        r1[$i0] = 102;

        $i0 = $i0 + 1;

        r1[$i0] = 97;

        $i0 = $i0 + 1;

        r1[$i0] = 108;

        $i0 = $i0 + 1;

        r1[$i0] = 115;

        $i0 = $i0 + 1;

        r1[$i0] = 101;

        goto label2;
    }

    public final void writeEndArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.impl.JsonWriteContext $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.codehaus.jackson.PrettyPrinter $r4;
        int $i0, $i1;
        char[] $r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: boolean inArray()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not an ARRAY but ");

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String getTypeDesc()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>($r3);

     label1:
        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label3;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r4.<org.codehaus.jackson.PrettyPrinter: void writeEndArray(org.codehaus.jackson.JsonGenerator,int)>(r0, $i0);

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext getParent()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext> = $r1;

        return;

     label3:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label4;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label4:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r5[$i0] = 93;

        goto label2;
    }

    public final void writeEndObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.impl.JsonWriteContext $r1;
        boolean $z0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        org.codehaus.jackson.PrettyPrinter $r4;
        int $i0, $i1;
        char[] $r5;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: boolean inObject()>();

        if $z0 != 0 goto label1;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Current context not an object but ");

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: java.lang.String getTypeDesc()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>($r3);

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext getParent()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext> = $r1;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r4 == null goto label2;

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $i0 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: int getEntryCount()>();

        interfaceinvoke $r4.<org.codehaus.jackson.PrettyPrinter: void writeEndObject(org.codehaus.jackson.JsonGenerator,int)>(r0, $i0);

        return;

     label2:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r5 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r5[$i0] = 125;

        return;
    }

    public final void writeFieldName(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int $i0;
        org.codehaus.jackson.impl.JsonWriteContext $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.impl.JsonWriteContext: int writeFieldName(java.lang.String)>($r1);

        if $i0 != 4 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label1:
        if $i0 != 1 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeFieldName(java.lang.String,boolean)>($r1, $z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }

    public final void writeFieldName(org.codehaus.jackson.SerializableString) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.SerializableString $r1;
        org.codehaus.jackson.impl.JsonWriteContext $r2;
        java.lang.String $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.SerializableString;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r3 = interfaceinvoke $r1.<org.codehaus.jackson.SerializableString: java.lang.String getValue()>();

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.impl.JsonWriteContext: int writeFieldName(java.lang.String)>($r3);

        if $i0 != 4 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label1:
        if $i0 != 1 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeFieldName(org.codehaus.jackson.SerializableString,boolean)>($r1, $z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }

    public final void writeFieldName(org.codehaus.jackson.io.SerializedString) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.io.SerializedString $r1;
        org.codehaus.jackson.impl.JsonWriteContext $r2;
        java.lang.String $r3;
        int $i0;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.io.SerializedString;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.impl.JsonWriteContext: int writeFieldName(java.lang.String)>($r3);

        if $i0 != 4 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");

     label1:
        if $i0 != 1 goto label3;

        $z0 = 1;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeFieldName(org.codehaus.jackson.SerializableString,boolean)>($r1, $z0);

        return;

     label3:
        $z0 = 0;

        goto label2;
    }

    public void writeNull() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write null value");

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;
    }

    public void writeNumber(double) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        double $d0;
        boolean $z0;
        org.codehaus.jackson.JsonGenerator$Feature $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $d0 := @parameter0: double;

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>($d0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Double: boolean isInfinite(double)>($d0);

        if $z0 == 0 goto label3;

     label1:
        $r1 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r1);

        if $z0 == 0 goto label3;

     label2:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>($r2);

        return;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(float) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        float $f0;
        boolean $z0;
        org.codehaus.jackson.JsonGenerator$Feature $r1;
        java.lang.String $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $f0 := @parameter0: float;

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 != 0 goto label2;

        $z0 = staticinvoke <java.lang.Float: boolean isNaN(float)>($f0);

        if $z0 != 0 goto label1;

        $z0 = staticinvoke <java.lang.Float: boolean isInfinite(float)>($f0);

        if $z0 == 0 goto label3;

     label1:
        $r1 = <org.codehaus.jackson.JsonGenerator$Feature: org.codehaus.jackson.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;

        $z0 = virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)>($r1);

        if $z0 == 0 goto label3;

     label2:
        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>($r2);

        return;

     label3:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $r2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        int $i0, $i1, $i2;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $i0 := @parameter0: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i1 + 11;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedInt(int)>($i0);

        return;

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputInt(int,char[],int)>($i0, $r1, $i1);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;
    }

    public void writeNumber(long) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        long $l0;
        int $i1, $i2;
        boolean $z0;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $l0 := @parameter0: long;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedLong(long)>($l0);

        return;

     label1:
        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i1 + 21;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = staticinvoke <org.codehaus.jackson.io.NumberOutput: int outputLong(long,char[],int)>($l0, $r1, $i1);

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        return;
    }

    public void writeNumber(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>($r1);

        return;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r1);

        return;
    }

    public void writeNumber(java.math.BigDecimal) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.math.BigDecimal $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.math.BigDecimal;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        if $r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>($r1);

        return;

     label2:
        $r2 = virtualinvoke $r1.<java.math.BigDecimal: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeNumber(java.math.BigInteger) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.math.BigInteger $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.math.BigInteger;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write number");

        if $r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;

     label1:
        $z0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: boolean _cfgNumbersAsStrings>;

        if $z0 == 0 goto label2;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeQuotedRaw(java.lang.Object)>($r1);

        return;

     label2:
        $r2 = virtualinvoke $r1.<java.math.BigInteger: java.lang.String toString()>();

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRaw(java.lang.String)>($r2);

        return;
    }

    public void writeRaw(char) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char $c0;
        int $i1, $i2;
        char[] $r1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $c0 := @parameter0: char;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i1 < $i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r1[$i2] = $c0;

        return;
    }

    public void writeRaw(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int $i0, $i1, $i2;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 - $i2;

        if $i0 != 0 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 - $i2;

     label1:
        if $i0 < $i1 goto label2;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, $r2, $i0);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + $i1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        return;

     label2:
        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawLong(java.lang.String)>($r1);

        return;
    }

    public void writeRaw(java.lang.String, int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int $i0, $i1, $i2, $i3;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i2 - $i3;

        if $i2 >= $i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i2 = $i2 - $i3;

     label1:
        if $i2 < $i1 goto label2;

        $i3 = $i0 + $i1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        virtualinvoke $r1.<java.lang.String: void getChars(int,int,char[],int)>($i0, $i3, $r2, $i2);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 + $i1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;

     label2:
        $i1 = $i0 + $i1;

        $r1 = virtualinvoke $r1.<java.lang.String: java.lang.String substring(int,int)>($i0, $i1);

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeRawLong(java.lang.String)>($r1);

        return;
    }

    public void writeRaw(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] $r1, $r2;
        int $i0, $i1, i2, $i3;
        java.io.Writer $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 >= 32 goto label2;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i2 = i2 - $i3;

        if $i1 <= i2 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i0, $r2, i2, $i1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i0 = $i0 + $i1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i0;

        return;

     label2:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r3.<java.io.Writer: void write(char[],int,int)>($r1, $i0, $i1);

        return;
    }

    public void writeRawUTF8String(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportUnsupportedOperation()>();

        return;
    }

    public final void writeStartArray() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.impl.JsonWriteContext $r1;
        org.codehaus.jackson.PrettyPrinter $r2;
        int $i0, $i1;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("start an array");

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext createChildArrayContext()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext> = $r1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeStartArray(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 91;

        return;
    }

    public final void writeStartObject() throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.impl.JsonWriteContext $r1;
        org.codehaus.jackson.PrettyPrinter $r2;
        int $i0, $i1;
        char[] $r3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("start an object");

        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.impl.JsonWriteContext: org.codehaus.jackson.impl.JsonWriteContext createChildObjectContext()>();

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.impl.JsonWriteContext _writeContext> = $r1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        if $r2 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter>;

        interfaceinvoke $r2.<org.codehaus.jackson.PrettyPrinter: void writeStartObject(org.codehaus.jackson.JsonGenerator)>(r0);

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r3[$i0] = 123;

        return;
    }

    public void writeString(java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1;
        int $i0, $i1;
        char[] $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write text value");

        if $r1 != null goto label1;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeNull()>();

        return;

     label1:
        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r2[$i0] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(java.lang.String)>($r1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label3;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label3:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r2[$i0] = 34;

        return;
    }

    public final void writeString(org.codehaus.jackson.SerializableString) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        org.codehaus.jackson.SerializableString $r1;
        int i0, i1, $i2;
        char[] $r2, $r3;
        java.io.Writer $r4;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: org.codehaus.jackson.SerializableString;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write text value");

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i0 < i1 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i1;

        $r2[i0] = 34;

        $r2 = interfaceinvoke $r1.<org.codehaus.jackson.SerializableString: char[] asQuotedChars()>();

        i0 = lengthof $r2;

        if i0 >= 32 goto label5;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i1 - $i2;

        if i0 <= i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, i1, i0);

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i0 = i1 + i0;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i0;

     label3:
        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if i0 < i1 goto label4;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label4:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        i1 = i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = i1;

        $r2[i0] = 34;

        return;

     label5:
        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

        $r4 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: java.io.Writer _writer>;

        virtualinvoke $r4.<java.io.Writer: void write(char[],int,int)>($r2, 0, i0);

        goto label3;
    }

    public void writeString(char[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        char[] $r1, $r2;
        int $i0, $i1, $i2, $i3;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: char[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _verifyValueWrite(java.lang.String)>("write text value");

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i2 < $i3 goto label1;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label1:
        $r2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i3 = $i2 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i3;

        $r2[$i2] = 34;

        specialinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _writeString(char[],int,int)>($r1, $i0, $i1);

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputEnd>;

        if $i0 < $i1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _flushBuffer()>();

     label2:
        $r1 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: char[] _outputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail>;

        $i1 = $i0 + 1;

        r0.<org.codehaus.jackson.impl.WriterBasedGenerator: int _outputTail> = $i1;

        $r1[$i0] = 34;

        return;
    }

    public final void writeStringField(java.lang.String, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        java.lang.String $r1, $r2;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeFieldName(java.lang.String)>($r1);

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void writeString(java.lang.String)>($r2);

        return;
    }

    public void writeUTF8String(byte[], int, int) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.impl.WriterBasedGenerator r0;
        byte[] $r1;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.WriterBasedGenerator;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        virtualinvoke r0.<org.codehaus.jackson.impl.WriterBasedGenerator: void _reportUnsupportedOperation()>();

        return;
    }
}
