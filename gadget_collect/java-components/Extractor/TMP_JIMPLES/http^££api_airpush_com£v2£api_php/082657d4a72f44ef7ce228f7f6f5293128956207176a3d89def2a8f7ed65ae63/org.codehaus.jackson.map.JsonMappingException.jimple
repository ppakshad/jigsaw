public class org.codehaus.jackson.map.JsonMappingException extends org.codehaus.jackson.JsonProcessingException
{
    static final int MAX_REFS_TO_LIST;
    private static final long serialVersionUID;
    protected java.util.LinkedList _path;

    public void <init>(java.lang.String)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String)>($r1);

        return;
    }

    public void <init>(java.lang.String, java.lang.Throwable)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,java.lang.Throwable)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, org.codehaus.jackson.JsonLocation)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.String $r1;
        org.codehaus.jackson.JsonLocation $r2;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.codehaus.jackson.JsonLocation;

        specialinvoke r0.<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation)>($r1, $r2);

        return;
    }

    public void <init>(java.lang.String, org.codehaus.jackson.JsonLocation, java.lang.Throwable)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.String $r1;
        org.codehaus.jackson.JsonLocation $r2;
        java.lang.Throwable $r3;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: org.codehaus.jackson.JsonLocation;

        $r3 := @parameter2: java.lang.Throwable;

        specialinvoke r0.<org.codehaus.jackson.JsonProcessingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r1, $r2, $r3);

        return;
    }

    public static org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser, java.lang.String)
    {
        org.codehaus.jackson.JsonParser $r0;
        java.lang.String $r1;
        org.codehaus.jackson.map.JsonMappingException $r2;
        org.codehaus.jackson.JsonLocation $r3;

        $r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: java.lang.String;

        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        $r3 = virtualinvoke $r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonLocation getTokenLocation()>();

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation)>($r1, $r3);

        return $r2;
    }

    public static org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser, java.lang.String, java.lang.Throwable)
    {
        org.codehaus.jackson.JsonParser $r0;
        java.lang.String $r1;
        java.lang.Throwable $r2;
        org.codehaus.jackson.map.JsonMappingException $r3;
        org.codehaus.jackson.JsonLocation $r4;

        $r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: java.lang.Throwable;

        $r3 = new org.codehaus.jackson.map.JsonMappingException;

        $r4 = virtualinvoke $r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonLocation getTokenLocation()>();

        specialinvoke $r3.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>($r1, $r4, $r2);

        return $r3;
    }

    public static org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable, java.lang.Object, int)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        int $i0;
        org.codehaus.jackson.map.JsonMappingException $r2;
        org.codehaus.jackson.map.JsonMappingException$Reference $r3;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Object;

        $i0 := @parameter2: int;

        $r3 = new org.codehaus.jackson.map.JsonMappingException$Reference;

        specialinvoke $r3.<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,int)>($r1, $i0);

        $r2 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference)>($r0, $r3);

        return $r2;
    }

    public static org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable, java.lang.Object, java.lang.String)
    {
        java.lang.Throwable $r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.codehaus.jackson.map.JsonMappingException $r3;
        org.codehaus.jackson.map.JsonMappingException$Reference $r4;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: java.lang.String;

        $r4 = new org.codehaus.jackson.map.JsonMappingException$Reference;

        specialinvoke $r4.<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r2);

        $r3 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,org.codehaus.jackson.map.JsonMappingException$Reference)>($r0, $r4);

        return $r3;
    }

    public static org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable, org.codehaus.jackson.map.JsonMappingException$Reference)
    {
        java.lang.Throwable $r0;
        org.codehaus.jackson.map.JsonMappingException$Reference $r1;
        boolean $z0;
        org.codehaus.jackson.map.JsonMappingException $r2;
        java.lang.String $r3, r4;
        int $i0;
        java.lang.StringBuilder $r5;
        java.lang.Class $r6;

        $r0 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: org.codehaus.jackson.map.JsonMappingException$Reference;

        $z0 = $r0 instanceof org.codehaus.jackson.map.JsonMappingException;

        if $z0 == 0 goto label2;

        $r2 = (org.codehaus.jackson.map.JsonMappingException) $r0;

     label1:
        virtualinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference)>($r1);

        return $r2;

     label2:
        $r3 = virtualinvoke $r0.<java.lang.Throwable: java.lang.String getMessage()>();

        r4 = $r3;

        if $r3 == null goto label3;

        $i0 = virtualinvoke $r3.<java.lang.String: int length()>();

        if $i0 != 0 goto label4;

     label3:
        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(was ");

        $r6 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

     label4:
        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String,org.codehaus.jackson.JsonLocation,java.lang.Throwable)>(r4, null, $r0);

        goto label1;
    }

    protected void _appendPathDesc(java.lang.StringBuilder)
    {
        java.lang.StringBuilder $r0;
        org.codehaus.jackson.map.JsonMappingException r1;
        java.util.LinkedList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        org.codehaus.jackson.map.JsonMappingException$Reference r5;
        java.lang.String $r6;

        r1 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r0 := @parameter0: java.lang.StringBuilder;

        $r2 = r1.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        $r3 = virtualinvoke $r2.<java.util.LinkedList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        r5 = (org.codehaus.jackson.map.JsonMappingException$Reference) $r4;

        $r6 = virtualinvoke r5.<org.codehaus.jackson.map.JsonMappingException$Reference: java.lang.String toString()>();

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label1;

        virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("->");

        goto label1;

     label2:
        return;
    }

    public java.lang.String getMessage()
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.String $r1;
        java.util.LinkedList $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 = specialinvoke r0.<org.codehaus.jackson.JsonProcessingException: java.lang.String getMessage()>();

        $r2 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        if $r2 != null goto label1;

        return $r1;

     label1:
        if $r1 != null goto label3;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

     label2:
        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (through reference chain: ");

        virtualinvoke r0.<org.codehaus.jackson.map.JsonMappingException: void _appendPathDesc(java.lang.StringBuilder)>($r3);

        virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r1);

        goto label2;
    }

    public java.util.List getPath()
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.util.LinkedList $r1;
        java.util.List $r2;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        if $r1 != null goto label1;

        $r2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();

        return $r2;

     label1:
        $r1 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        $r2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>($r1);

        return $r2;
    }

    public void prependPath(java.lang.Object, int)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.Object $r1;
        int $i0;
        org.codehaus.jackson.map.JsonMappingException$Reference r2;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.Object;

        $i0 := @parameter1: int;

        r2 = new org.codehaus.jackson.map.JsonMappingException$Reference;

        specialinvoke r2.<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,int)>($r1, $i0);

        virtualinvoke r0.<org.codehaus.jackson.map.JsonMappingException: void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference)>(r2);

        return;
    }

    public void prependPath(java.lang.Object, java.lang.String)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.Object $r1;
        java.lang.String $r2;
        org.codehaus.jackson.map.JsonMappingException$Reference r3;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.String;

        r3 = new org.codehaus.jackson.map.JsonMappingException$Reference;

        specialinvoke r3.<org.codehaus.jackson.map.JsonMappingException$Reference: void <init>(java.lang.Object,java.lang.String)>($r1, $r2);

        virtualinvoke r0.<org.codehaus.jackson.map.JsonMappingException: void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference)>(r3);

        return;
    }

    public void prependPath(org.codehaus.jackson.map.JsonMappingException$Reference)
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        org.codehaus.jackson.map.JsonMappingException$Reference $r1;
        int $i0;
        java.util.LinkedList $r2;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 := @parameter0: org.codehaus.jackson.map.JsonMappingException$Reference;

        $r2 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        if $r2 != null goto label1;

        $r2 = new java.util.LinkedList;

        specialinvoke $r2.<java.util.LinkedList: void <init>()>();

        r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path> = $r2;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        $i0 = virtualinvoke $r2.<java.util.LinkedList: int size()>();

        if $i0 >= 1000 goto label2;

        $r2 = r0.<org.codehaus.jackson.map.JsonMappingException: java.util.LinkedList _path>;

        virtualinvoke $r2.<java.util.LinkedList: void addFirst(java.lang.Object)>($r1);

     label2:
        return;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.JsonMappingException r0;
        java.lang.StringBuilder $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.map.JsonMappingException;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.JsonMappingException: java.lang.String getMessage()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.map.JsonMappingException: long serialVersionUID> = 1L;

        <org.codehaus.jackson.map.JsonMappingException: int MAX_REFS_TO_LIST> = 1000;

        return;
    }
}
