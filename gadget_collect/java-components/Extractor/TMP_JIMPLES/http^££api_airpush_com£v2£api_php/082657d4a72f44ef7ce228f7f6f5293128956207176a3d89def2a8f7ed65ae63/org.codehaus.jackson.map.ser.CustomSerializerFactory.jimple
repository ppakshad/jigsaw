public class org.codehaus.jackson.map.ser.CustomSerializerFactory extends org.codehaus.jackson.map.ser.BeanSerializerFactory
{
    protected java.util.HashMap _directClassMappings;
    protected org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride;
    protected java.util.HashMap _interfaceMappings;
    protected java.util.HashMap _transitiveClassMappings;

    public void <init>()
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>(null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.SerializerFactory$Config)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.map.SerializerFactory$Config $r1;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory$Config;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>($r1);

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings> = null;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings> = null;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings> = null;

        return;
    }

    protected org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class, org.codehaus.jackson.map.type.ClassKey)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.type.ClassKey $r2;
        int i0, i1;
        java.lang.Class[] $r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.JsonSerializer r6;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.type.ClassKey;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.Class[] getInterfaces()>();

        i0 = lengthof $r3;

        i1 = 0;

     label1:
        if i1 >= i0 goto label4;

        r1 = $r3[i1];

        virtualinvoke $r2.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r6 = (org.codehaus.jackson.map.JsonSerializer) $r5;

        if r6 == null goto label2;

        return r6;

     label2:
        r6 = virtualinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>(r1, $r2);

        if r6 == null goto label3;

        return r6;

     label3:
        i1 = i1 + 1;

        goto label1;

     label4:
        return null;
    }

    public void addGenericMapping(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.JsonSerializer r2;
        org.codehaus.jackson.map.type.ClassKey r3;
        boolean $z0;
        java.util.HashMap $r4;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        r3 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label2;

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        if $r4 != null goto label1;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings> = $r4;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

        return;

     label2:
        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        if $r4 != null goto label3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings> = $r4;

     label3:
        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        virtualinvoke $r4.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

        return;
    }

    public void addSpecificMapping(java.lang.Class, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.JsonSerializer r2;
        org.codehaus.jackson.map.type.ClassKey r3;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        java.lang.String $r6;
        int $i0;
        java.util.HashMap $r7;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        r3 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $z0 = virtualinvoke r1.<java.lang.Class: boolean isInterface()>();

        if $z0 == 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not add specific mapping for an interface (");

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label1:
        $i0 = virtualinvoke r1.<java.lang.Class: int getModifiers()>();

        $z0 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>($i0);

        if $z0 == 0 goto label2;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not add specific mapping for an abstract class (");

        $r6 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");

        $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6);

        throw $r4;

     label2:
        $r7 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        if $r7 != null goto label3;

        $r7 = new java.util.HashMap;

        specialinvoke $r7.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings> = $r7;

     label3:
        $r7 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        virtualinvoke $r7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2);

        return;
    }

    public org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.map.SerializationConfig $r1;
        org.codehaus.jackson.type.JavaType $r2;
        org.codehaus.jackson.map.BeanProperty $r3;
        java.lang.Class $r4;
        org.codehaus.jackson.map.JsonSerializer $r5;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.type.JavaType;

        $r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)>($r4, $r1);

        if $r5 == null goto label1;

        return $r5;

     label1:
        $r5 = specialinvoke r0.<org.codehaus.jackson.map.ser.BeanSerializerFactory: org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r3);

        return $r5;
    }

    protected org.codehaus.jackson.map.JsonSerializer findCustomSerializer(java.lang.Class, org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        java.lang.Class r1, r7;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.type.ClassKey r3;
        java.util.HashMap $r4;
        java.lang.Object $r5;
        org.codehaus.jackson.map.JsonSerializer r6;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        r3 = new org.codehaus.jackson.map.type.ClassKey;

        specialinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void <init>(java.lang.Class)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        if $r4 == null goto label1;

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _directClassMappings>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (org.codehaus.jackson.map.JsonSerializer) $r5;

        if r6 == null goto label1;

        return r6;

     label1:
        $z0 = virtualinvoke r1.<java.lang.Class: boolean isEnum()>();

        if $z0 == 0 goto label2;

        r6 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride>;

        if r6 == null goto label2;

        r6 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride>;

        return r6;

     label2:
        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        if $r4 == null goto label5;

        r7 = r1;

     label3:
        if r7 == null goto label5;

        virtualinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r7);

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _transitiveClassMappings>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (org.codehaus.jackson.map.JsonSerializer) $r5;

        if r6 == null goto label4;

        return r6;

     label4:
        r7 = virtualinvoke r7.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label3;

     label5:
        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        if $r4 == null goto label8;

        virtualinvoke r3.<org.codehaus.jackson.map.type.ClassKey: void reset(java.lang.Class)>(r1);

        $r4 = r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: java.util.HashMap _interfaceMappings>;

        $r5 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(r3);

        r6 = (org.codehaus.jackson.map.JsonSerializer) $r5;

        if r6 == null goto label6;

        return r6;

     label6:
        if r1 == null goto label8;

        r6 = virtualinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _findInterfaceMapping(java.lang.Class,org.codehaus.jackson.map.type.ClassKey)>(r1, r3);

        if r6 == null goto label7;

        return r6;

     label7:
        r1 = virtualinvoke r1.<java.lang.Class: java.lang.Class getSuperclass()>();

        goto label6;

     label8:
        return null;
    }

    public void setEnumSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.map.JsonSerializer r1;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        r1 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: org.codehaus.jackson.map.JsonSerializer _enumSerializerOverride> = r1;

        return;
    }

    public org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)
    {
        org.codehaus.jackson.map.ser.CustomSerializerFactory r0;
        org.codehaus.jackson.map.SerializerFactory$Config $r1;
        java.lang.Class $r2;
        java.lang.IllegalStateException $r3;
        java.lang.StringBuilder $r4;
        java.lang.String $r5;

        r0 := @this: org.codehaus.jackson.map.ser.CustomSerializerFactory;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerFactory$Config;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Lorg/codehaus/jackson/map/ser/CustomSerializerFactory;" goto label1;

        $r3 = new java.lang.IllegalStateException;

        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Subtype of CustomSerializerFactory (");

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r5 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") has not properly overridden method \'withAdditionalSerializers\': can not instantiate subtype with ");

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("additional serializer definitions");

        $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5);

        throw $r3;

     label1:
        r0 = new org.codehaus.jackson.map.ser.CustomSerializerFactory;

        specialinvoke r0.<org.codehaus.jackson.map.ser.CustomSerializerFactory: void <init>(org.codehaus.jackson.map.SerializerFactory$Config)>($r1);

        return r0;
    }
}
