public abstract class org.codehaus.jackson.node.ValueNode extends org.codehaus.jackson.node.BaseJsonNode
{

    protected void <init>()
    {
        org.codehaus.jackson.node.ValueNode r0;

        r0 := @this: org.codehaus.jackson.node.ValueNode;

        specialinvoke r0.<org.codehaus.jackson.node.BaseJsonNode: void <init>()>();

        return;
    }

    public abstract org.codehaus.jackson.JsonToken asToken();

    public boolean isValueNode()
    {
        org.codehaus.jackson.node.ValueNode r0;

        r0 := @this: org.codehaus.jackson.node.ValueNode;

        return 1;
    }

    public org.codehaus.jackson.JsonNode path(int)
    {
        org.codehaus.jackson.node.ValueNode r0;
        int $i0;
        org.codehaus.jackson.node.MissingNode $r1;

        r0 := @this: org.codehaus.jackson.node.ValueNode;

        $i0 := @parameter0: int;

        $r1 = staticinvoke <org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.node.MissingNode getInstance()>();

        return $r1;
    }

    public org.codehaus.jackson.JsonNode path(java.lang.String)
    {
        org.codehaus.jackson.node.ValueNode r0;
        java.lang.String $r1;
        org.codehaus.jackson.node.MissingNode $r2;

        r0 := @this: org.codehaus.jackson.node.ValueNode;

        $r1 := @parameter0: java.lang.String;

        $r2 = staticinvoke <org.codehaus.jackson.node.MissingNode: org.codehaus.jackson.node.MissingNode getInstance()>();

        return $r2;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.node.ValueNode r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.node.ValueNode;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.node.ValueNode: java.lang.String getValueAsText()>();

        return $r1;
    }
}
