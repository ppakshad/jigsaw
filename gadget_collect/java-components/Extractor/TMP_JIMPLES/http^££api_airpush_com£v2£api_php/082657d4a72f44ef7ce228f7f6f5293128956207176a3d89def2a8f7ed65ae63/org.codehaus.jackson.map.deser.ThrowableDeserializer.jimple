public class org.codehaus.jackson.map.deser.ThrowableDeserializer extends org.codehaus.jackson.map.deser.BeanDeserializer
{
    protected static final java.lang.String PROP_NAME_MESSAGE;

    public void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)
    {
        org.codehaus.jackson.map.deser.ThrowableDeserializer r0;
        org.codehaus.jackson.map.deser.BeanDeserializer $r1;

        r0 := @this: org.codehaus.jackson.map.deser.ThrowableDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.BeanDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.BeanDeserializer: void <init>(org.codehaus.jackson.map.deser.BeanDeserializer)>($r1);

        return;
    }

    public java.lang.Object deserializeFromObject(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ThrowableDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        int i0, i1, i2, $i3;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r3;
        java.lang.Object $r4, $r16;
        org.codehaus.jackson.map.deser.Creator$Delegating $r5;
        org.codehaus.jackson.type.JavaType $r6;
        boolean $z0;
        java.lang.StringBuilder $r7;
        java.lang.String $r8, $r17;
        org.codehaus.jackson.map.JsonMappingException $r9;
        org.codehaus.jackson.map.deser.Creator$StringBased $r10;
        java.lang.Object[] r11;
        org.codehaus.jackson.JsonToken $r12, $r13;
        org.codehaus.jackson.map.deser.impl.BeanPropertyMap $r14;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r15;
        java.util.HashSet $r18;
        org.codehaus.jackson.map.deser.SettableAnyProperty $r19;

        r0 := @this: org.codehaus.jackson.map.deser.ThrowableDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        if $r3 == null goto label01;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: java.lang.Object _deserializeUsingPropertyBased(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;

     label01:
        $r5 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$Delegating _delegatingCreator>;

        if $r5 == null goto label02;

        $r5 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$Delegating _delegatingCreator>;

        $r4 = virtualinvoke $r5.<org.codehaus.jackson.map.deser.Creator$Delegating: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;

     label02:
        $r6 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $z0 = virtualinvoke $r6.<org.codehaus.jackson.type.JavaType: boolean isAbstract()>();

        if $z0 == 0 goto label03;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not instantiate abstract type ");

        $r6 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (need to add/enable type information?)");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        $r9 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException 'from'(org.codehaus.jackson.JsonParser,java.lang.String)>($r1, $r8);

        throw $r9;

     label03:
        $r10 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        if $r10 != null goto label04;

        $r9 = new org.codehaus.jackson.map.JsonMappingException;

        $r7 = new java.lang.StringBuilder;

        specialinvoke $r7.<java.lang.StringBuilder: void <init>()>();

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Can not deserialize Throwable of type ");

        $r6 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.type.JavaType _beanType>;

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        $r7 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" without having either single-String-arg constructor; or explicit @JsonCreator");

        $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r9.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>($r8);

        throw $r9;

     label04:
        r11 = null;

        i1 = 0;

        $r4 = null;

     label05:
        $r12 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r13 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_OBJECT>;

        if $r12 == $r13 goto label15;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r14 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        $r15 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: org.codehaus.jackson.map.deser.SettableBeanProperty find(java.lang.String)>($r8);

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        if $r15 == null goto label09;

        if $r4 == null goto label07;

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object)>($r1, $r2, $r4);

     label06:
        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label05;

     label07:
        if r11 != null goto label08;

        $r14 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.impl.BeanPropertyMap _beanProperties>;

        i0 = virtualinvoke $r14.<org.codehaus.jackson.map.deser.impl.BeanPropertyMap: int size()>();

        i0 = i0 + i0;

        r11 = newarray (java.lang.Object)[i0];

     label08:
        i0 = i1 + 1;

        r11[i1] = $r15;

        i1 = i0 + 1;

        $r16 = virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        r11[i0] = $r16;

        goto label06;

     label09:
        $r17 = "message";

        $z0 = virtualinvoke $r17.<java.lang.String: boolean equals(java.lang.Object)>($r8);

        if $z0 == 0 goto label12;

        $r10 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        $r8 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r4 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.Creator$StringBased: java.lang.Object construct(java.lang.String)>($r8);

        if r11 == null goto label18;

        i0 = 0;

        i2 = i1;

     label10:
        if i0 >= i2 goto label11;

        $r16 = r11[i0];

        $r15 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r16;

        $i3 = i0 + 1;

        $r16 = r11[$i3];

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>($r4, $r16);

        i0 = i0 + 2;

        goto label10;

     label11:
        r11 = null;

        goto label06;

     label12:
        $r18 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: java.util.HashSet _ignorableProps>;

        if $r18 == null goto label13;

        $r18 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: java.util.HashSet _ignorableProps>;

        $z0 = virtualinvoke $r18.<java.util.HashSet: boolean contains(java.lang.Object)>($r8);

        if $z0 == 0 goto label13;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

        goto label06;

     label13:
        $r19 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        if $r19 == null goto label14;

        $r19 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.SettableAnyProperty _anySetter>;

        virtualinvoke $r19.<org.codehaus.jackson.map.deser.SettableAnyProperty: void deserializeAndSet(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r8);

        goto label06;

     label14:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: void handleUnknownProperty(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.lang.Object,java.lang.String)>($r1, $r2, $r4, $r8);

        goto label06;

     label15:
        if $r4 != null goto label19;

        $r10 = r0.<org.codehaus.jackson.map.deser.ThrowableDeserializer: org.codehaus.jackson.map.deser.Creator$StringBased _stringCreator>;

        $r4 = virtualinvoke $r10.<org.codehaus.jackson.map.deser.Creator$StringBased: java.lang.Object construct(java.lang.String)>(null);

        if r11 == null goto label17;

        i0 = 0;

     label16:
        if i0 >= i1 goto label17;

        $r16 = r11[i0];

        $r15 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r16;

        i2 = i0 + 1;

        $r16 = r11[i2];

        virtualinvoke $r15.<org.codehaus.jackson.map.deser.SettableBeanProperty: void set(java.lang.Object,java.lang.Object)>($r4, $r16);

        i0 = i0 + 2;

        goto label16;

     label17:
        return $r4;

     label18:
        goto label06;

     label19:
        return $r4;
    }

    public static void <clinit>()
    {
        <org.codehaus.jackson.map.deser.ThrowableDeserializer: java.lang.String PROP_NAME_MESSAGE> = "message";

        return;
    }
}
