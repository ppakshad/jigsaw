final class com.ideaworks3d.marmalade.CameraCapture$1 extends java.lang.Object implements com.ideaworks3d.marmalade.LoaderActivity$CursorCompleteListener
{
    final java.io.File[] val$holder;

    void <init>(java.io.File[])
    {
        com.ideaworks3d.marmalade.CameraCapture$1 r0;
        java.io.File[] $r1;

        r0 := @this: com.ideaworks3d.marmalade.CameraCapture$1;

        $r1 := @parameter0: java.io.File[];

        r0.<com.ideaworks3d.marmalade.CameraCapture$1: java.io.File[] val$holder> = $r1;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public void cursorLoadComplete(android.database.Cursor)
    {
        com.ideaworks3d.marmalade.CameraCapture$1 r0;
        android.database.Cursor $r1;
        java.io.File $r2;
        int $i0;
        boolean $z0;
        java.io.File[] $r3;
        java.lang.String $r4;
        java.lang.RuntimeException $r5;
        java.lang.StringBuilder $r6;
        java.lang.Throwable $r7;

        r0 := @this: com.ideaworks3d.marmalade.CameraCapture$1;

        $r1 := @parameter0: android.database.Cursor;

     label01:
        $i0 = interfaceinvoke $r1.<android.database.Cursor: int getColumnIndexOrThrow(java.lang.String)>("_data");

        $z0 = interfaceinvoke $r1.<android.database.Cursor: boolean moveToFirst()>();

     label02:
        if $z0 == 0 goto label07;

     label03:
        $r3 = r0.<com.ideaworks3d.marmalade.CameraCapture$1: java.io.File[] val$holder>;

     label04:
        $r2 = new java.io.File;

     label05:
        $r4 = interfaceinvoke $r1.<android.database.Cursor: java.lang.String getString(int)>($i0);

        specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>($r4);

     label06:
        $r3[0] = $r2;

     label07:
        if $r1 == null goto label08;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label08:
        staticinvoke <com.ideaworks3d.marmalade.LoaderAPI: void trace(java.lang.String)>("Finished waiting for file cursor");

        staticinvoke <com.ideaworks3d.marmalade.CameraCapture: boolean access$002(boolean)>(0);

        return;

     label09:
        $r5 := @caughtexception;

     label10:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception in convertUriToFile: ");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");

        $r4 = virtualinvoke $r5.<java.lang.RuntimeException: java.lang.String getMessage()>();

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r4 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

        staticinvoke <com.ideaworks3d.marmalade.LoaderAPI: void trace(java.lang.String)>($r4);

     label11:
        if $r1 == null goto label12;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label12:
        staticinvoke <com.ideaworks3d.marmalade.LoaderAPI: void trace(java.lang.String)>("Finished waiting for file cursor");

        staticinvoke <com.ideaworks3d.marmalade.CameraCapture: boolean access$002(boolean)>(0);

        return;

     label13:
        $r7 := @caughtexception;

        if $r1 == null goto label14;

        interfaceinvoke $r1.<android.database.Cursor: void close()>();

     label14:
        staticinvoke <com.ideaworks3d.marmalade.LoaderAPI: void trace(java.lang.String)>("Finished waiting for file cursor");

        staticinvoke <com.ideaworks3d.marmalade.CameraCapture: boolean access$002(boolean)>(0);

        throw $r7;

        catch java.lang.RuntimeException from label01 to label02 with label09;
        catch java.lang.RuntimeException from label03 to label04 with label09;
        catch java.lang.RuntimeException from label05 to label07 with label09;
        catch java.lang.Throwable from label01 to label02 with label13;
        catch java.lang.Throwable from label03 to label06 with label13;
        catch java.lang.Throwable from label10 to label11 with label13;
    }
}
