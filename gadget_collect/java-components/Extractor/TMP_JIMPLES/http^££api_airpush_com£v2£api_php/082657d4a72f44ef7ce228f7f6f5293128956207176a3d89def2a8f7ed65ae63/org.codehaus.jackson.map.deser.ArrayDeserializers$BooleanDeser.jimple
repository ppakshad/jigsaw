final class org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser extends org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser r0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$ArrayDeser: void <init>(java.lang.Class)>(class "[Z");

        return;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        boolean[] $r3;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: boolean[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public boolean[] deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonParser $r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        int i0, i1;
        org.codehaus.jackson.JsonToken $r2, $r10;
        org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser r3;
        boolean $z0;
        java.lang.Class $r4;
        org.codehaus.jackson.map.JsonMappingException $r5;
        org.codehaus.jackson.map.util.ArrayBuilders $r6;
        org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder $r7;
        java.lang.Object $r8;
        boolean[] r9;

        r3 := @this: org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser;

        $r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r0.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label1;

        $r4 = r3.<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: java.lang.Class _valueClass>;

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r4);

        throw $r5;

     label1:
        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.util.ArrayBuilders getArrayBuilders()>();

        $r7 = virtualinvoke $r6.<org.codehaus.jackson.map.util.ArrayBuilders: org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder getBooleanBuilder()>();

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: java.lang.Object resetAndStart()>();

        r9 = (boolean[]) $r8;

        i1 = 0;

     label2:
        $r10 = virtualinvoke $r0.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r2 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r10 == $r2 goto label4;

        $z0 = virtualinvoke r3.<org.codehaus.jackson.map.deser.ArrayDeserializers$BooleanDeser: boolean _parseBooleanPrimitive(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r0, $r1);

        i0 = lengthof r9;

        if i1 < i0 goto label3;

        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(r9, i1);

        r9 = (boolean[]) $r8;

        i1 = 0;

     label3:
        r9[i1] = $z0;

        i1 = i1 + 1;

        goto label2;

     label4:
        $r8 = virtualinvoke $r7.<org.codehaus.jackson.map.util.ArrayBuilders$BooleanBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(r9, i1);

        r9 = (boolean[]) $r8;

        return r9;
    }
}
