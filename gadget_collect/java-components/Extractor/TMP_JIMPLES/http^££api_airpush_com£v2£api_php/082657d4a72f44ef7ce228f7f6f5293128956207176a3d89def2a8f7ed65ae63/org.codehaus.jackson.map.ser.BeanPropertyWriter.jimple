public class org.codehaus.jackson.map.ser.BeanPropertyWriter extends java.lang.Object implements org.codehaus.jackson.map.BeanProperty
{
    protected final java.lang.reflect.Method _accessorMethod;
    protected final org.codehaus.jackson.type.JavaType _cfgSerializationType;
    protected final org.codehaus.jackson.map.util.Annotations _contextAnnotations;
    protected final org.codehaus.jackson.type.JavaType _declaredType;
    protected org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers;
    protected final java.lang.reflect.Field _field;
    protected java.lang.Class[] _includeInViews;
    protected java.util.HashMap _internalSettings;
    protected final org.codehaus.jackson.map.introspect.AnnotatedMember _member;
    protected final org.codehaus.jackson.io.SerializedString _name;
    protected org.codehaus.jackson.type.JavaType _nonTrivialBaseType;
    protected final org.codehaus.jackson.map.JsonSerializer _serializer;
    protected final boolean _suppressNulls;
    protected final java.lang.Object _suppressableValue;
    protected org.codehaus.jackson.map.TypeSerializer _typeSerializer;

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.map.util.Annotations, java.lang.String, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.type.JavaType, java.lang.reflect.Method, java.lang.reflect.Field, boolean, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.map.util.Annotations $r2;
        java.lang.String $r3;
        org.codehaus.jackson.type.JavaType $r4, $r7;
        org.codehaus.jackson.map.JsonSerializer r5;
        org.codehaus.jackson.map.TypeSerializer $r6;
        java.lang.reflect.Method $r8;
        java.lang.reflect.Field $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.codehaus.jackson.io.SerializedString $r11;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r2 := @parameter1: org.codehaus.jackson.map.util.Annotations;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: org.codehaus.jackson.type.JavaType;

        r5 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        $r6 := @parameter5: org.codehaus.jackson.map.TypeSerializer;

        $r7 := @parameter6: org.codehaus.jackson.type.JavaType;

        $r8 := @parameter7: java.lang.reflect.Method;

        $r9 := @parameter8: java.lang.reflect.Field;

        $z0 := @parameter9: boolean;

        $r10 := @parameter10: java.lang.Object;

        $r11 = new org.codehaus.jackson.io.SerializedString;

        specialinvoke $r11.<org.codehaus.jackson.io.SerializedString: void <init>(java.lang.String)>($r3);

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.util.Annotations,org.codehaus.jackson.io.SerializedString,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.type.JavaType,java.lang.reflect.Method,java.lang.reflect.Field,boolean,java.lang.Object)>($r1, $r2, $r11, $r4, r5, $r6, $r7, $r8, $r9, $z0, $r10);

        return;
    }

    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedMember, org.codehaus.jackson.map.util.Annotations, org.codehaus.jackson.io.SerializedString, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.JsonSerializer, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.type.JavaType, java.lang.reflect.Method, java.lang.reflect.Field, boolean, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r1;
        org.codehaus.jackson.map.util.Annotations $r2;
        org.codehaus.jackson.io.SerializedString $r3;
        org.codehaus.jackson.type.JavaType $r4, $r7;
        org.codehaus.jackson.map.JsonSerializer r5;
        org.codehaus.jackson.map.TypeSerializer $r6;
        java.lang.reflect.Method $r8;
        java.lang.reflect.Field $r9;
        boolean $z0;
        java.lang.Object $r10;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r11;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMember;

        $r2 := @parameter1: org.codehaus.jackson.map.util.Annotations;

        $r3 := @parameter2: org.codehaus.jackson.io.SerializedString;

        $r4 := @parameter3: org.codehaus.jackson.type.JavaType;

        r5 := @parameter4: org.codehaus.jackson.map.JsonSerializer;

        $r6 := @parameter5: org.codehaus.jackson.map.TypeSerializer;

        $r7 := @parameter6: org.codehaus.jackson.type.JavaType;

        $r8 := @parameter7: java.lang.reflect.Method;

        $r9 := @parameter8: java.lang.reflect.Field;

        $z0 := @parameter9: boolean;

        $r10 := @parameter10: java.lang.Object;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member> = $r1;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations> = $r2;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name> = $r3;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType> = $r4;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer> = r5;

        if r5 != null goto label2;

        $r11 = staticinvoke <org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap emptyMap()>();

     label1:
        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r11;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer> = $r6;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType> = $r7;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod> = $r8;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field> = $r9;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls> = $z0;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue> = $r10;

        return;

     label2:
        $r11 = null;

        goto label1;
    }

    protected void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, $r1;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r2 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        specialinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>($r1, $r2);

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter, org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, $r1;
        org.codehaus.jackson.map.JsonSerializer r2;
        java.util.HashMap $r3, $r13;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r4;
        org.codehaus.jackson.map.util.Annotations $r5;
        org.codehaus.jackson.io.SerializedString $r6;
        org.codehaus.jackson.type.JavaType $r7;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r8;
        org.codehaus.jackson.map.TypeSerializer $r9;
        java.lang.reflect.Method $r10;
        java.lang.reflect.Field $r11;
        boolean $z0;
        java.lang.Object $r12;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r2 := @parameter1: org.codehaus.jackson.map.JsonSerializer;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer> = r2;

        $r4 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member> = $r4;

        $r5 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations> = $r5;

        $r6 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name> = $r6;

        $r7 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType> = $r7;

        $r8 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r8;

        $r9 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer> = $r9;

        $r7 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType> = $r7;

        $r10 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod> = $r10;

        $r11 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field> = $r11;

        $z0 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls> = $z0;

        $r12 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue> = $r12;

        $r3 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r3 == null goto label1;

        $r13 = new java.util.HashMap;

        $r3 = $r1.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        specialinvoke $r13.<java.util.HashMap: void <init>(java.util.Map)>($r3);

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = $r13;

     label1:
        return;
    }

    protected final org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap, java.lang.Class, org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap $r1, $r6;
        java.lang.Class r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult $r5;
        org.codehaus.jackson.map.JsonSerializer r7;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ser.impl.PropertySerializerMap;

        r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType>;

        if $r4 == null goto label3;

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType>;

        $r4 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType forcedNarrowBy(java.lang.Class)>(r2);

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>($r4, $r3, r0);

     label1:
        $r6 = $r5.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.ser.impl.PropertySerializerMap map>;

        if $r1 == $r6 goto label2;

        $r1 = $r5.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.ser.impl.PropertySerializerMap map>;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers> = $r1;

     label2:
        r7 = $r5.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult: org.codehaus.jackson.map.JsonSerializer serializer>;

        return r7;

     label3:
        $r5 = virtualinvoke $r1.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSerializer(java.lang.Class,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.BeanProperty)>(r2, $r3, r0);

        goto label1;
    }

    protected void _reportSelfReference(java.lang.Object) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1;
        org.codehaus.jackson.map.JsonMappingException $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 = new org.codehaus.jackson.map.JsonMappingException;

        specialinvoke $r2.<org.codehaus.jackson.map.JsonMappingException: void <init>(java.lang.String)>("Direct self-reference leading to cycle");

        throw $r2;
    }

    public final java.lang.Object get(java.lang.Object) throws java.lang.Exception
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1;
        java.lang.reflect.Method $r2;
        java.lang.Object[] $r3;
        java.lang.reflect.Field $r4;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r2 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r3 = newarray (java.lang.Object)[0];

        $r1 = virtualinvoke $r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>($r1, $r3);

        return $r1;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r1 = virtualinvoke $r4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }

    public java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMember $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        $r2 = virtualinvoke $r3.<org.codehaus.jackson.map.introspect.AnnotatedMember: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(r1);

        return $r2;
    }

    public java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class r1;
        java.lang.'annotation'.Annotation $r2;
        org.codehaus.jackson.map.util.Annotations $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class;

        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.util.Annotations _contextAnnotations>;

        $r2 = interfaceinvoke $r3.<org.codehaus.jackson.map.util.Annotations: java.lang.'annotation'.Annotation get(java.lang.Class)>(r1);

        return $r2;
    }

    public java.lang.reflect.Type getGenericPropertyType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.reflect.Method $r1;
        java.lang.reflect.Type $r2;
        java.lang.reflect.Field $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r1 == null goto label1;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();

        return $r2;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.reflect.Type getGenericType()>();

        return $r2;
    }

    public java.lang.Object getInternalSetting(java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        return $r1;
    }

    public org.codehaus.jackson.map.introspect.AnnotatedMember getMember()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.introspect.AnnotatedMember r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.introspect.AnnotatedMember _member>;

        return r1;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.String $r1;
        org.codehaus.jackson.io.SerializedString $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.io.SerializedString: java.lang.String getValue()>();

        return $r1;
    }

    public java.lang.Class getPropertyType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.reflect.Method $r1;
        java.lang.Class $r2;
        java.lang.reflect.Field $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r1 == null goto label1;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r2 = virtualinvoke $r1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();

        return $r2;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r2 = virtualinvoke $r3.<java.lang.reflect.Field: java.lang.Class getType()>();

        return $r2;
    }

    public java.lang.Class getRawSerializationType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class $r1;
        org.codehaus.jackson.type.JavaType $r2;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        return $r1;
    }

    public org.codehaus.jackson.type.JavaType getSerializationType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _cfgSerializationType>;

        return r1;
    }

    public org.codehaus.jackson.io.SerializedString getSerializedName()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.io.SerializedString r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        return r1;
    }

    protected org.codehaus.jackson.map.JsonSerializer getSerializer()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.JsonSerializer r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        return r1;
    }

    public org.codehaus.jackson.type.JavaType getType()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _declaredType>;

        return r1;
    }

    public java.lang.Class[] getViews()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class[] r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews>;

        return r1;
    }

    public boolean hasSerializer()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.map.JsonSerializer $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.lang.Object removeInternalSetting(java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1;
        java.util.HashMap $r2;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r2 == null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $r1 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>($r1);

        $r2 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $i0 = virtualinvoke $r2.<java.util.HashMap: int size()>();

        if $i0 != 0 goto label2;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = null;

        return $r1;

     label1:
        return null;

     label2:
        return $r1;
    }

    public void serializeAsField(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.lang.Exception
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1, $r5;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.ser.impl.PropertySerializerMap r4;
        boolean $z0;
        org.codehaus.jackson.io.SerializedString $r6;
        org.codehaus.jackson.map.JsonSerializer r7, $r9;
        java.lang.Class $r8;
        org.codehaus.jackson.map.TypeSerializer $r10;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object get(java.lang.Object)>($r1);

        if $r5 != null goto label1;

        $z0 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: boolean _suppressNulls>;

        if $z0 != 0 goto label6;

        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>($r6);

        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r2);

        return;

     label1:
        if $r5 != $r1 goto label2;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void _reportSelfReference(java.lang.Object)>($r1);

     label2:
        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        if $r1 == null goto label3;

        $r1 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Object _suppressableValue>;

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r5);

        if $z0 != 0 goto label6;

     label3:
        r7 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if r7 != null goto label4;

        $r8 = virtualinvoke $r5.<java.lang.Object: java.lang.Class getClass()>();

        r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.ser.impl.PropertySerializerMap _dynamicSerializers>;

        $r9 = virtualinvoke r4.<org.codehaus.jackson.map.ser.impl.PropertySerializerMap: org.codehaus.jackson.map.JsonSerializer serializerFor(java.lang.Class)>($r8);

        r7 = $r9;

        if $r9 != null goto label4;

        r7 = virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.JsonSerializer _findAndAddDynamic(org.codehaus.jackson.map.ser.impl.PropertySerializerMap,java.lang.Class,org.codehaus.jackson.map.SerializerProvider)>(r4, $r8, $r3);

     label4:
        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.io.SerializedString _name>;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeFieldName(org.codehaus.jackson.io.SerializedString)>($r6);

        $r10 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        if $r10 != null goto label5;

        virtualinvoke r7.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r5, $r2, $r3);

        return;

     label5:
        $r10 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.map.TypeSerializer _typeSerializer>;

        virtualinvoke r7.<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r5, $r2, $r3, $r10);

     label6:
        return;
    }

    public java.lang.Object setInternalSetting(java.lang.Object, java.lang.Object)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Object $r1, $r2;
        java.util.HashMap $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: java.lang.Object;

        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        if $r3 != null goto label1;

        $r3 = new java.util.HashMap;

        specialinvoke $r3.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings> = $r3;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.util.HashMap _internalSettings>;

        $r1 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r2);

        return $r1;
    }

    public void setNonTrivialBaseType(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: org.codehaus.jackson.type.JavaType _nonTrivialBaseType> = $r1;

        return;
    }

    public void setViews(java.lang.Class[])
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.Class[] r1;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: java.lang.Class[];

        r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.Class[] _includeInViews> = r1;

        return;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.String $r3;
        java.lang.reflect.Method $r4;
        java.lang.Class $r5;
        java.lang.reflect.Field $r6;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>(int)>(40);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property \'");

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' (");

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        if $r4 == null goto label2;

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("via method ");

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r5 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r4 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Method _accessorMethod>;

        $r3 = virtualinvoke $r4.<java.lang.reflect.Method: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

     label1:
        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);

        $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("field \"");

        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r5 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>();

        $r3 = virtualinvoke $r5.<java.lang.Class: java.lang.String getName()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("#");

        $r6 = r0.<org.codehaus.jackson.map.ser.BeanPropertyWriter: java.lang.reflect.Field _field>;

        $r3 = virtualinvoke $r6.<java.lang.reflect.Field: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        goto label1;
    }

    public org.codehaus.jackson.map.ser.BeanPropertyWriter withSerializer(org.codehaus.jackson.map.JsonSerializer)
    {
        org.codehaus.jackson.map.ser.BeanPropertyWriter r0, $r4;
        org.codehaus.jackson.map.JsonSerializer r1;
        java.lang.Class $r2;
        java.lang.IllegalStateException $r3;

        r0 := @this: org.codehaus.jackson.map.ser.BeanPropertyWriter;

        r1 := @parameter0: org.codehaus.jackson.map.JsonSerializer;

        $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == class "Lorg/codehaus/jackson/map/ser/BeanPropertyWriter;" goto label1;

        $r3 = new java.lang.IllegalStateException;

        specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("BeanPropertyWriter sub-class does not override \'withSerializer()\'; needs to!");

        throw $r3;

     label1:
        $r4 = new org.codehaus.jackson.map.ser.BeanPropertyWriter;

        specialinvoke $r4.<org.codehaus.jackson.map.ser.BeanPropertyWriter: void <init>(org.codehaus.jackson.map.ser.BeanPropertyWriter,org.codehaus.jackson.map.JsonSerializer)>(r0, r1);

        return $r4;
    }
}
