public abstract class org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase extends org.codehaus.jackson.map.TypeDeserializer
{
    protected final org.codehaus.jackson.type.JavaType _baseType;
    protected final java.util.HashMap _deserializers;
    protected final org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver;
    protected final org.codehaus.jackson.map.BeanProperty _property;

    protected void <init>(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r2;
        org.codehaus.jackson.map.BeanProperty $r3;
        java.util.HashMap $r4;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 := @parameter1: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        $r3 := @parameter2: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.TypeDeserializer: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType> = $r1;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver> = $r2;

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.BeanProperty _property> = $r3;

        $r4 = new java.util.HashMap;

        specialinvoke $r4.<java.util.HashMap: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers> = $r4;

        return;
    }

    protected final org.codehaus.jackson.map.JsonDeserializer _findDeserializer(org.codehaus.jackson.map.DeserializationContext, java.lang.String) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        java.lang.String $r2;
        java.util.HashMap $r3, $r5;
        org.codehaus.jackson.map.BeanProperty $r4;
        java.lang.Object $r6;
        org.codehaus.jackson.map.JsonDeserializer r7, $r18;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r8;
        org.codehaus.jackson.type.JavaType $r9, r10, $r13;
        org.codehaus.jackson.map.JsonMappingException $r11;
        java.lang.Throwable $r12;
        java.lang.Class $r14, $r15;
        org.codehaus.jackson.map.DeserializerProvider $r16;
        org.codehaus.jackson.map.DeserializationConfig $r17;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter1: java.lang.String;

        $r3 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        entermonitor $r3;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        $r6 = virtualinvoke $r5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        r7 = (org.codehaus.jackson.map.JsonDeserializer) $r6;

        if r7 != null goto label6;

        $r8 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r9 = interfaceinvoke $r8.<org.codehaus.jackson.map.jsontype.TypeIdResolver: org.codehaus.jackson.type.JavaType typeFromId(java.lang.String)>($r2);

        r10 = $r9;

        if $r9 != null goto label4;

        $r9 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r11 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException unknownTypeException(org.codehaus.jackson.type.JavaType,java.lang.String)>($r9, $r2);

        throw $r11;

     label2:
        $r12 := @caughtexception;

        exitmonitor $r3;

     label3:
        throw $r12;

     label4:
        $r13 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        if $r13 == null goto label5;

        $r13 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r14 = virtualinvoke $r13.<java.lang.Object: java.lang.Class getClass()>();

        $r15 = virtualinvoke $r9.<java.lang.Object: java.lang.Class getClass()>();

        if $r14 != $r15 goto label5;

        r10 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r14 = virtualinvoke $r9.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        r10 = virtualinvoke r10.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType narrowBy(java.lang.Class)>($r14);

     label5:
        $r16 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()>();

        $r17 = virtualinvoke $r1.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.DeserializationConfig getConfig()>();

        $r4 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.BeanProperty _property>;

        $r18 = virtualinvoke $r16.<org.codehaus.jackson.map.DeserializerProvider: org.codehaus.jackson.map.JsonDeserializer findValueDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r17, r10, $r4);

        r7 = $r18;

        $r5 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: java.util.HashMap _deserializers>;

        virtualinvoke $r5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r18);

     label6:
        exitmonitor $r3;

     label7:
        return r7;

        catch java.lang.Throwable from label1 to label3 with label2;
        catch java.lang.Throwable from label4 to label7 with label2;
    }

    public java.lang.String baseTypeName()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        return $r3;
    }

    public java.lang.String getPropertyName()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        return null;
    }

    public org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r1 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        return r1;
    }

    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion();

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase r0;
        java.lang.StringBuilder r1, $r2;
        java.lang.Class $r3;
        java.lang.String $r4;
        org.codehaus.jackson.type.JavaType $r5;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r6;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase;

        r1 = new java.lang.StringBuilder;

        specialinvoke r1.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; base-type:");

        $r5 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.type.JavaType _baseType>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5);

        $r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("; id-resolver: ");

        $r6 = r0.<org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6);

        virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);

        $r4 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r4;
    }
}
