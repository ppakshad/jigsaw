public class org.codehaus.jackson.map.deser.ArrayDeserializer extends org.codehaus.jackson.map.deser.ContainerDeserializer
{
    protected final org.codehaus.jackson.type.JavaType _arrayType;
    protected final java.lang.Class _elementClass;
    protected final org.codehaus.jackson.map.JsonDeserializer _elementDeserializer;
    final org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer;
    protected final boolean _untyped;

    public void <init>(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.JsonDeserializer)
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.map.type.ArrayType $r1;
        org.codehaus.jackson.map.JsonDeserializer r2;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        r2 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: void <init>(org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer)>($r1, r2, null);

        return;
    }

    public void <init>(org.codehaus.jackson.map.type.ArrayType, org.codehaus.jackson.map.JsonDeserializer, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.map.type.ArrayType $r1;
        org.codehaus.jackson.map.JsonDeserializer r2;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        org.codehaus.jackson.type.JavaType $r4;
        java.lang.Class $r5;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.type.ArrayType;

        r2 := @parameter1: org.codehaus.jackson.map.JsonDeserializer;

        $r3 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ContainerDeserializer: void <init>(java.lang.Class)>(class "[Ljava/lang/Object;");

        r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.type.JavaType _arrayType> = $r1;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.map.type.ArrayType: org.codehaus.jackson.type.JavaType getContentType()>();

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Class _elementClass> = $r5;

        $r5 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Class _elementClass>;

        if $r5 != class "Ljava/lang/Object;" goto label2;

        $z0 = 1;

     label1:
        r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: boolean _untyped> = $z0;

        r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.JsonDeserializer _elementDeserializer> = r2;

        r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer> = $r3;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.lang.Object[] $r3;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.lang.Object[] deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        int i0, i1;
        org.codehaus.jackson.map.TypeDeserializer r3;
        boolean $z0;
        org.codehaus.jackson.JsonToken $r4, $r5;
        java.lang.Class $r6;
        java.lang.Byte[] $r7;
        org.codehaus.jackson.type.JavaType $r8;
        org.codehaus.jackson.map.JsonMappingException $r9;
        org.codehaus.jackson.map.util.ObjectBuffer $r10;
        java.lang.Object[] $r11;
        java.lang.Object r12;
        org.codehaus.jackson.map.JsonDeserializer $r13;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label02;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r4 != $r5 goto label01;

        $r6 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Class _elementClass>;

        if $r6 != class "Ljava/lang/Byte;" goto label01;

        $r7 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r7;

     label01:
        $r8 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.type.JavaType _arrayType>;

        $r6 = virtualinvoke $r8.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r6);

        throw $r9;

     label02:
        $r10 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.util.ObjectBuffer leaseObjectBuffer()>();

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();

        i1 = 0;

        r3 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.TypeDeserializer _elementTypeDeserializer>;

     label03:
        $r4 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r4 == $r5 goto label08;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r4 != $r5 goto label06;

        r12 = null;

     label04:
        i0 = lengthof $r11;

        if i1 < i0 goto label05;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>($r11);

        i1 = 0;

     label05:
        $r11[i1] = r12;

        i1 = i1 + 1;

        goto label03;

     label06:
        if r3 != null goto label07;

        $r13 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.JsonDeserializer _elementDeserializer>;

        r12 = virtualinvoke $r13.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        goto label04;

     label07:
        $r13 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.JsonDeserializer _elementDeserializer>;

        r12 = virtualinvoke $r13.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r1, $r2, r3);

        goto label04;

     label08:
        $z0 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: boolean _untyped>;

        if $z0 == 0 goto label10;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int)>($r11, i1);

     label09:
        virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: void returnObjectBuffer(org.codehaus.jackson.map.util.ObjectBuffer)>($r10);

        return $r11;

     label10:
        $r6 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Class _elementClass>;

        $r11 = virtualinvoke $r10.<org.codehaus.jackson.map.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int,java.lang.Class)>($r11, i1, $r6);

        goto label09;
    }

    protected java.lang.Byte[] deserializeFromBase64(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        int i0, i1;
        java.lang.Byte[] r3;
        org.codehaus.jackson.Base64Variant $r4;
        byte[] $r5;
        byte $b2;
        java.lang.Byte $r6;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.Base64Variant getBase64Variant()>();

        $r5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)>($r4);

        i0 = lengthof $r5;

        r3 = newarray (java.lang.Byte)[i0];

        i1 = 0;

        i0 = lengthof $r5;

     label1:
        if i1 >= i0 goto label2;

        $b2 = $r5[i1];

        $r6 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>($b2);

        r3[i1] = $r6;

        i1 = i1 + 1;

        goto label1;

     label2:
        return r3;
    }

    public volatile java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        java.lang.Object[] $r4;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r1, $r2, $r3);

        return $r4;
    }

    public java.lang.Object[] deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.JsonParser $r0;
        org.codehaus.jackson.map.DeserializationContext $r1;
        org.codehaus.jackson.map.TypeDeserializer $r2;
        java.lang.Object $r3;
        org.codehaus.jackson.map.deser.ArrayDeserializer r4;
        java.lang.Object[] r5;

        r4 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r0 := @parameter0: org.codehaus.jackson.JsonParser;

        $r1 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r0, $r1);

        r5 = (java.lang.Object[]) $r3;

        return r5;
    }

    public org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.map.JsonDeserializer r1;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        r1 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.map.JsonDeserializer _elementDeserializer>;

        return r1;
    }

    public org.codehaus.jackson.type.JavaType getContentType()
    {
        org.codehaus.jackson.map.deser.ArrayDeserializer r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.deser.ArrayDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.ArrayDeserializer: org.codehaus.jackson.type.JavaType _arrayType>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getContentType()>();

        return $r1;
    }
}
