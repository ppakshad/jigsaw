public class org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer extends org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer
{

    public void <init>(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.TypeSerializer, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer r0;
        org.codehaus.jackson.type.JavaType $r1;
        boolean $z0;
        org.codehaus.jackson.map.TypeSerializer $r2;
        org.codehaus.jackson.map.BeanProperty $r3;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r2 := @parameter2: org.codehaus.jackson.map.TypeSerializer;

        $r3 := @parameter3: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$AsArraySerializer: void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/lang/Iterable;", $r1, $z0, $r2, $r3);

        return;
    }

    public org.codehaus.jackson.map.ser.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer r0, $r2;
        org.codehaus.jackson.map.TypeSerializer $r1;
        org.codehaus.jackson.type.JavaType $r3;
        boolean $z0;
        org.codehaus.jackson.map.BeanProperty $r4;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.TypeSerializer;

        $r2 = new org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        $r3 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: org.codehaus.jackson.type.JavaType _elementType>;

        $z0 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: boolean _staticTyping>;

        $r4 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: org.codehaus.jackson.map.BeanProperty _property>;

        specialinvoke $r2.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void <init>(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)>($r3, $z0, $r1, $r4);

        return $r2;
    }

    public void serializeContents(java.lang.Iterable, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer r0;
        java.lang.Iterable r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.TypeSerializer r4;
        java.util.Iterator $r5;
        boolean $z0;
        org.codehaus.jackson.map.JsonSerializer r6, r10;
        java.lang.Class r7, $r9;
        java.lang.Object $r8;
        org.codehaus.jackson.map.BeanProperty $r11;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        r1 := @parameter0: java.lang.Iterable;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r5 = interfaceinvoke r1.<java.lang.Iterable: java.util.Iterator iterator()>();

        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label7;

        r4 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: org.codehaus.jackson.map.TypeSerializer _valueTypeSerializer>;

        r6 = null;

        r7 = null;

     label1:
        $r8 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        if $r8 != null goto label3;

        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r2);

     label2:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 != 0 goto label1;

        return;

     label3:
        $r9 = virtualinvoke $r8.<java.lang.Object: java.lang.Class getClass()>();

        if $r9 != r7 goto label5;

        r10 = r6;

     label4:
        if r4 != null goto label6;

        virtualinvoke r10.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r8, $r2, $r3);

        goto label2;

     label5:
        $r11 = r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: org.codehaus.jackson.map.BeanProperty _property>;

        r6 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>($r9, $r11);

        r10 = r6;

        r7 = $r9;

        goto label4;

     label6:
        virtualinvoke r10.<org.codehaus.jackson.map.JsonSerializer: void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r8, $r2, $r3, r4);

        goto label2;

     label7:
        return;
    }

    public volatile void serializeContents(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r3;
        java.lang.Iterable $r4;

        r0 := @this: org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.lang.Iterable) $r3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.ContainerSerializers$IterableSerializer: void serializeContents(java.lang.Iterable,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, $r1, $r2);

        return;
    }
}
