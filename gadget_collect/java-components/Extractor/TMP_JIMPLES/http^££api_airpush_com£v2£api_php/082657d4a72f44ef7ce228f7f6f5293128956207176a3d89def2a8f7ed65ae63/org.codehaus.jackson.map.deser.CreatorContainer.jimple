public class org.codehaus.jackson.map.deser.CreatorContainer extends java.lang.Object
{
    final java.lang.Class _beanClass;
    final boolean _canFixAccess;
    protected java.lang.reflect.Constructor _defaultConstructor;
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor;
    org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory;
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor;
    org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory;
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor;
    org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory;
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor;
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties;
    org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory;
    org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties;
    org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor;
    org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory;

    public void <init>(java.lang.Class, boolean)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.Class r1;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties> = null;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties> = null;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess> = $z0;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.Class _beanClass> = r1;

        return;
    }

    public void addDelegatingConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r2, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor> = $r1;

        return;
    }

    public void addDelegatingFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r1, $r2, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory> = $r1;

        return;
    }

    public void addIntConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r2, "int");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor> = $r1;

        return;
    }

    public void addIntFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r1, $r2, "int");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory> = $r1;

        return;
    }

    public void addLongConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r2, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor> = $r1;

        return;
    }

    public void addLongFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r1, $r2, "long");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory> = $r1;

        return;
    }

    public void addPropertyConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor, org.codehaus.jackson.map.deser.SettableBeanProperty[])
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty[];

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r3, "property-based");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor> = $r1;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties> = $r2;

        return;
    }

    public void addPropertyFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.map.deser.SettableBeanProperty[])
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r3;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 := @parameter1: org.codehaus.jackson.map.deser.SettableBeanProperty[];

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r1, $r3, "property-based");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory> = $r1;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties> = $r2;

        return;
    }

    public void addStringConstructor(org.codehaus.jackson.map.introspect.AnnotatedConstructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedConstructor,java.lang.String)>($r1, $r2, "String");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor> = $r1;

        return;
    }

    public void addStringFactory(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedMethod,java.lang.String)>($r1, $r2, "String");

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory> = $r1;

        return;
    }

    public org.codehaus.jackson.map.deser.Creator$Delegating delegatingCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r2;
        org.codehaus.jackson.map.deser.Creator$Delegating $r3;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        if $r1 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        if $r2 != null goto label1;

        return null;

     label1:
        $r3 = new org.codehaus.jackson.map.deser.Creator$Delegating;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _delegatingConstructor>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _delegatingFactory>;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.Creator$Delegating: void <init>(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2);

        return $r3;
    }

    public java.lang.reflect.Constructor getDefaultConstructor()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.reflect.Constructor r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.reflect.Constructor _defaultConstructor>;

        return r1;
    }

    public org.codehaus.jackson.map.deser.Creator$NumberBased numberCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r2, $r4;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3, $r5;
        org.codehaus.jackson.map.deser.Creator$NumberBased $r6;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        if $r2 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        if $r3 != null goto label1;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        if $r2 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r6 = new org.codehaus.jackson.map.deser.Creator$NumberBased;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.Class _beanClass>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _intConstructor>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _intFactory>;

        $r4 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _longConstructor>;

        $r5 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _longFactory>;

        specialinvoke $r6.<org.codehaus.jackson.map.deser.Creator$NumberBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r3, $r4, $r5);

        return $r6;
    }

    public org.codehaus.jackson.map.deser.Creator$PropertyBased propertyBasedCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1;
        org.codehaus.jackson.map.deser.SettableBeanProperty[] $r2, $r4;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r5;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        if $r1 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r5 = new org.codehaus.jackson.map.deser.Creator$PropertyBased;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _propertyBasedConstructor>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedConstructorProperties>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _propertyBasedFactory>;

        $r4 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.SettableBeanProperty[] _propertyBasedFactoryProperties>;

        specialinvoke $r5.<org.codehaus.jackson.map.deser.Creator$PropertyBased: void <init>(org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.deser.SettableBeanProperty[],org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.map.deser.SettableBeanProperty[])>($r1, $r2, $r3, $r4);

        return $r5;
    }

    public void setDefaultConstructor(java.lang.reflect.Constructor)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.reflect.Constructor r1;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        r1 := @parameter0: java.lang.reflect.Constructor;

        r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.reflect.Constructor _defaultConstructor> = r1;

        return;
    }

    public org.codehaus.jackson.map.deser.Creator$StringBased stringCreator()
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        java.lang.Class $r1;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r2;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r3;
        org.codehaus.jackson.map.deser.Creator$StringBased $r4;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        if $r2 != null goto label1;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = new org.codehaus.jackson.map.deser.Creator$StringBased;

        $r1 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: java.lang.Class _beanClass>;

        $r2 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedConstructor _strConstructor>;

        $r3 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.introspect.AnnotatedMethod _strFactory>;

        specialinvoke $r4.<org.codehaus.jackson.map.deser.Creator$StringBased: void <init>(java.lang.Class,org.codehaus.jackson.map.introspect.AnnotatedConstructor,org.codehaus.jackson.map.introspect.AnnotatedMethod)>($r1, $r2, $r3);

        return $r4;
    }

    protected org.codehaus.jackson.map.introspect.AnnotatedConstructor verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedConstructor, org.codehaus.jackson.map.introspect.AnnotatedConstructor, java.lang.String)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedConstructor $r1, $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.lang.reflect.Constructor $r6;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedConstructor;

        $r3 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" constructors: already had ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encountered ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label1:
        $z0 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess>;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedConstructor: java.lang.reflect.Constructor getAnnotated()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

     label2:
        return $r1;
    }

    protected org.codehaus.jackson.map.introspect.AnnotatedMethod verifyNonDup(org.codehaus.jackson.map.introspect.AnnotatedMethod, org.codehaus.jackson.map.introspect.AnnotatedMethod, java.lang.String)
    {
        org.codehaus.jackson.map.deser.CreatorContainer r0;
        org.codehaus.jackson.map.introspect.AnnotatedMethod $r1, $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r4;
        java.lang.StringBuilder $r5;
        boolean $z0;
        java.lang.reflect.Method $r6;

        r0 := @this: org.codehaus.jackson.map.deser.CreatorContainer;

        $r1 := @parameter0: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r2 := @parameter1: org.codehaus.jackson.map.introspect.AnnotatedMethod;

        $r3 := @parameter2: java.lang.String;

        if $r2 == null goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        $r5 = new java.lang.StringBuilder;

        specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Conflicting ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" factory methods: already had ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", encountered ");

        $r5 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r1);

        $r3 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r4;

     label1:
        $z0 = r0.<org.codehaus.jackson.map.deser.CreatorContainer: boolean _canFixAccess>;

        if $z0 == 0 goto label2;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.map.introspect.AnnotatedMethod: java.lang.reflect.Method getAnnotated()>();

        staticinvoke <org.codehaus.jackson.map.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member)>($r6);

     label2:
        return $r1;
    }
}
