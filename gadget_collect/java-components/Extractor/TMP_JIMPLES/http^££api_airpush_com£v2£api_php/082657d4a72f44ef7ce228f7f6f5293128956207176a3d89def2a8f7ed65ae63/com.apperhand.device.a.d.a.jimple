public class com.apperhand.device.a.d.a extends java.lang.Object
{
    static final boolean a;

    static void <clinit>()
    {
        boolean $z0;
        java.lang.Class $r0;

        $r0 = class "Lcom/apperhand/device/a/d/a;";

        $z0 = virtualinvoke $r0.<java.lang.Class: boolean desiredAssertionStatus()>();

        if $z0 != 0 goto label2;

        $z0 = 1;

     label1:
        <com.apperhand.device.a.d.a: boolean a> = $z0;

        return;

     label2:
        $z0 = 0;

        goto label1;
    }

    private void <init>()
    {
        com.apperhand.device.a.d.a r0;

        r0 := @this: com.apperhand.device.a.d.a;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static java.lang.String a(byte[], int)
    {
        byte[] $r0, $r3;
        int $i0, $i1, $i2;
        java.lang.String $r1;
        com.apperhand.device.a.d.a$c $r2;
        boolean $z0;
        byte $b3;
        java.lang.AssertionError $r4;
        java.lang.Throwable $r5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 = new java.lang.String;

        $i1 = lengthof $r0;

        $r2 = new com.apperhand.device.a.d.a$c;

     label01:
        specialinvoke $r2.<com.apperhand.device.a.d.a$c: void <init>(int,byte[])>($i0, null);

     label02:
        $i0 = $i1 / 3;

        $i0 = $i0 * 4;

        $z0 = $r2.<com.apperhand.device.a.d.a$c: boolean d>;

        if $z0 == 0 goto label11;

        $i2 = $i1 % 3;

        if $i2 <= 0 goto label03;

        $i0 = $i0 + 4;

     label03:
        $z0 = $r2.<com.apperhand.device.a.d.a$c: boolean e>;

        if $z0 == 0 goto label05;

        if $i1 <= 0 goto label05;

        $i2 = $i1 - 1;

        $i2 = $i2 / 57;

        $i2 = $i2 + 1;

        $z0 = $r2.<com.apperhand.device.a.d.a$c: boolean f>;

        if $z0 == 0 goto label15;

        $b3 = 2;

     label04:
        $i2 = $i2 * $b3;

        $i0 = $i0 + $i2;

     label05:
        $r3 = newarray (byte)[$i0];

        $r2.<com.apperhand.device.a.d.a$c: byte[] a> = $r3;

     label06:
        virtualinvoke $r2.<com.apperhand.device.a.d.a$c: boolean a(byte[],int,int,boolean)>($r0, 0, $i1, 1);

     label07:
        $z0 = <com.apperhand.device.a.d.a: boolean a>;

        if $z0 != 0 goto label16;

        $i1 = $r2.<com.apperhand.device.a.d.a$c: int b>;

        if $i1 == $i0 goto label16;

        $r4 = new java.lang.AssertionError;

     label08:
        specialinvoke $r4.<java.lang.AssertionError: void <init>()>();

     label09:
        throw $r4;

     label10:
        $r5 := @caughtexception;

        $r4 = new java.lang.AssertionError;

        specialinvoke $r4.<java.lang.AssertionError: void <init>(java.lang.Object)>($r5);

        throw $r4;

     label11:
        $i2 = $i1 % 3;

        lookupswitch($i2)
        {
            case 0: goto label03;
            case 1: goto label13;
            case 2: goto label14;
            default: goto label12;
        };

     label12:
        goto label03;

     label13:
        $i0 = $i0 + 2;

        goto label03;

     label14:
        $i0 = $i0 + 3;

        goto label03;

     label15:
        $b3 = 1;

        goto label04;

     label16:
        $r0 = $r2.<com.apperhand.device.a.d.a$c: byte[] a>;

     label17:
        specialinvoke $r1.<java.lang.String: void <init>(byte[],java.lang.String)>($r0, "US-ASCII");

     label18:
        return $r1;

        catch java.io.UnsupportedEncodingException from label01 to label02 with label10;
        catch java.io.UnsupportedEncodingException from label06 to label07 with label10;
        catch java.io.UnsupportedEncodingException from label08 to label09 with label10;
        catch java.io.UnsupportedEncodingException from label17 to label18 with label10;
    }

    public static byte[] a(java.lang.String, int)
    {
        java.lang.String $r0;
        int $i0, $i1, $i2;
        byte[] $r1, $r3;
        com.apperhand.device.a.d.a$b $r2;
        boolean $z0;
        java.lang.IllegalArgumentException $r4;

        $r0 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $i1 = lengthof $r1;

        $r2 = new com.apperhand.device.a.d.a$b;

        $i2 = $i1 * 3;

        $i2 = $i2 / 4;

        $r3 = newarray (byte)[$i2];

        specialinvoke $r2.<com.apperhand.device.a.d.a$b: void <init>(int,byte[])>($i0, $r3);

        $z0 = virtualinvoke $r2.<com.apperhand.device.a.d.a$b: boolean a(byte[],int,int,boolean)>($r1, 0, $i1, 1);

        if $z0 != 0 goto label1;

        $r4 = new java.lang.IllegalArgumentException;

        specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bad base-64");

        throw $r4;

     label1:
        $i0 = $r2.<com.apperhand.device.a.d.a$b: int b>;

        $r1 = $r2.<com.apperhand.device.a.d.a$b: byte[] a>;

        $i1 = lengthof $r1;

        if $i0 != $i1 goto label2;

        $r1 = $r2.<com.apperhand.device.a.d.a$b: byte[] a>;

        return $r1;

     label2:
        $i0 = $r2.<com.apperhand.device.a.d.a$b: int b>;

        $r1 = newarray (byte)[$i0];

        $r3 = $r2.<com.apperhand.device.a.d.a$b: byte[] a>;

        $i0 = $r2.<com.apperhand.device.a.d.a$b: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1, 0, $i0);

        return $r1;
    }
}
