public class com.airpush.android.Base64 extends java.lang.Object
{
    private static final char[] map1;
    private static final byte[] map2;
    private static final java.lang.String systemLineSeparator;

    static void <clinit>()
    {
        byte $b0;
        java.lang.String $r0;
        char[] $r1;
        char c1;
        int i2, i3;
        byte[] $r2;

        $r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");

        <com.airpush.android.Base64: java.lang.String systemLineSeparator> = $r0;

        $r1 = newarray (char)[64];

        <com.airpush.android.Base64: char[] map1> = $r1;

        c1 = 65;

        i2 = 0;

     label01:
        if c1 <= 90 goto label06;

        c1 = 97;

     label02:
        if c1 <= 122 goto label07;

        c1 = 48;

     label03:
        if c1 <= 57 goto label08;

        $r1 = <com.airpush.android.Base64: char[] map1>;

        i3 = i2 + 1;

        $r1[i2] = 43;

        $r1 = <com.airpush.android.Base64: char[] map1>;

        $r1[i3] = 47;

        $r2 = newarray (byte)[128];

        <com.airpush.android.Base64: byte[] map2> = $r2;

        i2 = 0;

     label04:
        $r2 = <com.airpush.android.Base64: byte[] map2>;

        i3 = lengthof $r2;

        if i2 < i3 goto label09;

        i2 = 0;

     label05:
        if i2 < 64 goto label10;

        return;

     label06:
        $r1 = <com.airpush.android.Base64: char[] map1>;

        i3 = i2 + 1;

        $r1[i2] = c1;

        i2 = c1 + 1;

        c1 = (char) i2;

        i2 = i3;

        goto label01;

     label07:
        $r1 = <com.airpush.android.Base64: char[] map1>;

        i3 = i2 + 1;

        $r1[i2] = c1;

        i2 = c1 + 1;

        c1 = (char) i2;

        i2 = i3;

        goto label02;

     label08:
        $r1 = <com.airpush.android.Base64: char[] map1>;

        i3 = i2 + 1;

        $r1[i2] = c1;

        i2 = c1 + 1;

        c1 = (char) i2;

        i2 = i3;

        goto label03;

     label09:
        $r2 = <com.airpush.android.Base64: byte[] map2>;

        $r2[i2] = -1;

        i2 = i2 + 1;

        goto label04;

     label10:
        $r2 = <com.airpush.android.Base64: byte[] map2>;

        $r1 = <com.airpush.android.Base64: char[] map1>;

        c1 = $r1[i2];

        $b0 = (byte) i2;

        $r2[c1] = $b0;

        i2 = i2 + 1;

        goto label05;
    }

    private void <init>()
    {
        com.airpush.android.Base64 r0;

        r0 := @this: com.airpush.android.Base64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static byte[] decode(java.lang.String)
    {
        java.lang.String $r0;
        char[] $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = virtualinvoke $r0.<java.lang.String: char[] toCharArray()>();

        $r2 = staticinvoke <com.airpush.android.Base64: byte[] decode(char[])>($r1);

        return $r2;
    }

    public static byte[] decode(char[])
    {
        char[] $r0;
        int $i0;
        byte[] $r1;

        $r0 := @parameter0: char[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.airpush.android.Base64: byte[] decode(char[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static byte[] decode(char[], int, int)
    {
        int i0, i1, i2, i4, i5, $i13, $i14, i15;
        byte[] r0, $r3;
        char[] r1;
        java.lang.IllegalArgumentException r2;
        char c3, c6, c7, c8;
        byte b9, b10, b11, b12;

        r1 := @parameter0: char[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 % 4;

        if i1 == 0 goto label02;

        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Length of Base64 encoded input string is not a multiple of 4.");

        throw r2;

     label01:
        i0 = i0 + -1;

     label02:
        if i0 <= 0 goto label03;

        i1 = i2 + i0;

        i1 = i1 - 1;

        c3 = r1[i1];

        if c3 == 61 goto label01;

     label03:
        i1 = i0 * 3;

        i1 = i1 / 4;

        r0 = newarray (byte)[i1];

        i0 = i2 + i0;

        i4 = 0;

        i5 = i2;

     label04:
        if i5 < i0 goto label05;

        return r0;

     label05:
        i2 = i5 + 1;

        c3 = r1[i5];

        i5 = i2 + 1;

        c6 = r1[i2];

        if i5 >= i0 goto label09;

        c7 = r1[i5];

        i2 = i5 + 1;

     label06:
        if i2 >= i0 goto label10;

        c8 = r1[i2];

        i2 = i2 + 1;

     label07:
        if c3 > 127 goto label08;

        if c6 > 127 goto label08;

        if c7 > 127 goto label08;

        if c8 <= 127 goto label11;

     label08:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal character in Base64 encoded data.");

        throw r2;

     label09:
        i2 = i5;

        c7 = 65;

        goto label06;

     label10:
        c8 = 65;

        goto label07;

     label11:
        $r3 = <com.airpush.android.Base64: byte[] map2>;

        b9 = $r3[c3];

        $r3 = <com.airpush.android.Base64: byte[] map2>;

        b10 = $r3[c6];

        $r3 = <com.airpush.android.Base64: byte[] map2>;

        b11 = $r3[c7];

        $r3 = <com.airpush.android.Base64: byte[] map2>;

        b12 = $r3[c8];

        if b9 < 0 goto label12;

        if b10 < 0 goto label12;

        if b11 < 0 goto label12;

        if b12 >= 0 goto label13;

     label12:
        r2 = new java.lang.IllegalArgumentException;

        specialinvoke r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Illegal character in Base64 encoded data.");

        throw r2;

     label13:
        i5 = b9 << 2;

        $i13 = b10 >>> 4;

        i5 = i5 | $i13;

        $i13 = b10 & 15;

        $i13 = $i13 << 4;

        $i14 = b11 >>> 2;

        $i13 = $i13 | $i14;

        $i14 = b11 & 3;

        $i14 = $i14 << 6;

        $i14 = $i14 | b12;

        i15 = i4 + 1;

        b9 = (byte) i5;

        r0[i4] = b9;

        if i15 >= i1 goto label16;

        b9 = (byte) $i13;

        r0[i15] = b9;

        i4 = i15 + 1;

     label14:
        if i4 >= i1 goto label15;

        b9 = (byte) $i14;

        r0[i4] = b9;

        i4 = i4 + 1;

        i5 = i2;

        goto label04;

     label15:
        i5 = i2;

        goto label04;

     label16:
        i4 = i15;

        goto label14;
    }

    public static byte[] decodeLines(java.lang.String)
    {
        java.lang.String $r0;
        char[] r1;
        int i0, $i1, i2;
        byte[] $r2;
        char $c3;

        $r0 := @parameter0: java.lang.String;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        r1 = newarray (char)[$i1];

        $i1 = 0;

        i2 = 0;

     label1:
        i0 = virtualinvoke $r0.<java.lang.String: int length()>();

        if i2 < i0 goto label2;

        $r2 = staticinvoke <com.airpush.android.Base64: byte[] decode(char[],int,int)>(r1, 0, $i1);

        return $r2;

     label2:
        $c3 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(i2);

        if $c3 == 32 goto label3;

        if $c3 == 13 goto label3;

        if $c3 == 10 goto label3;

        if $c3 == 9 goto label3;

        r1[$i1] = $c3;

        $i1 = $i1 + 1;

     label3:
        i2 = i2 + 1;

        goto label1;
    }

    public static java.lang.String decodeString(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = staticinvoke <com.airpush.android.Base64: byte[] decode(java.lang.String)>($r0);

        specialinvoke $r1.<java.lang.String: void <init>(byte[])>($r2);

        return $r1;
    }

    public static char[] encode(byte[])
    {
        byte[] $r0;
        int $i0;
        char[] $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = staticinvoke <com.airpush.android.Base64: char[] encode(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static char[] encode(byte[], int)
    {
        byte[] $r0;
        int $i0;
        char[] $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $r1 = staticinvoke <com.airpush.android.Base64: char[] encode(byte[],int,int)>($r0, 0, $i0);

        return $r1;
    }

    public static char[] encode(byte[], int, int)
    {
        byte[] $r0;
        int i0, i1, i2, i3, i4, i6, i7, i8, i9;
        char[] r1, $r2;
        byte b5;
        char c10;

        $r0 := @parameter0: byte[];

        i2 := @parameter1: int;

        i0 := @parameter2: int;

        i1 = i0 * 4;

        i1 = i1 + 2;

        i1 = i1 / 3;

        i3 = i0 + 2;

        i3 = i3 / 3;

        i3 = i3 * 4;

        r1 = newarray (char)[i3];

        i0 = i2 + i0;

        i3 = 0;

        i4 = i2;

     label01:
        if i4 < i0 goto label02;

        return r1;

     label02:
        i2 = i4 + 1;

        b5 = $r0[i4];

        i6 = b5 & 255;

        if i2 >= i0 goto label07;

        b5 = $r0[i2];

        i7 = b5 & 255;

        i2 = i2 + 1;

     label03:
        if i2 >= i0 goto label08;

        b5 = $r0[i2];

        i2 = i2 + 1;

        i8 = b5 & 255;

     label04:
        i4 = i6 >>> 2;

        i6 = i6 & 3;

        i6 = i6 << 4;

        i9 = i7 >>> 4;

        i6 = i6 | i9;

        i7 = i7 & 15;

        i7 = i7 << 2;

        i9 = i8 >>> 6;

        i7 = i7 | i9;

        i8 = i8 & 63;

        i9 = i3 + 1;

        $r2 = <com.airpush.android.Base64: char[] map1>;

        c10 = $r2[i4];

        r1[i3] = c10;

        i3 = i9 + 1;

        $r2 = <com.airpush.android.Base64: char[] map1>;

        c10 = $r2[i6];

        r1[i9] = c10;

        if i3 >= i1 goto label09;

        $r2 = <com.airpush.android.Base64: char[] map1>;

        c10 = $r2[i7];

     label05:
        r1[i3] = c10;

        i3 = i3 + 1;

        if i3 >= i1 goto label10;

        $r2 = <com.airpush.android.Base64: char[] map1>;

        c10 = $r2[i8];

     label06:
        r1[i3] = c10;

        i3 = i3 + 1;

        i4 = i2;

        goto label01;

     label07:
        i7 = 0;

        goto label03;

     label08:
        i8 = 0;

        goto label04;

     label09:
        c10 = 61;

        goto label05;

     label10:
        c10 = 61;

        goto label06;
    }

    public static java.lang.String encodeLines(byte[])
    {
        byte[] $r0;
        int $i0;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 = lengthof $r0;

        $r1 = <com.airpush.android.Base64: java.lang.String systemLineSeparator>;

        $r1 = staticinvoke <com.airpush.android.Base64: java.lang.String encodeLines(byte[],int,int,int,java.lang.String)>($r0, 0, $i0, 76, $r1);

        return $r1;
    }

    public static java.lang.String encodeLines(byte[], int, int, int, java.lang.String)
    {
        byte[] $r0;
        int $i0, $i1, $i2, i3, $i4, $i5;
        java.lang.String $r1;
        java.lang.StringBuilder r2;
        java.lang.IllegalArgumentException $r3;
        char[] $r4;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: java.lang.String;

        $i2 = $i2 * 3;

        $i2 = $i2 / 4;

        if $i2 > 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>()>();

        throw $r3;

     label1:
        i3 = $i1 + $i2;

        i3 = i3 - 1;

        i3 = i3 / $i2;

        $i4 = $i1 + 2;

        $i4 = $i4 / 3;

        $i4 = $i4 * 4;

        $i5 = virtualinvoke $r1.<java.lang.String: int length()>();

        i3 = $i5 * i3;

        i3 = $i4 + i3;

        r2 = new java.lang.StringBuilder;

        specialinvoke r2.<java.lang.StringBuilder: void <init>(int)>(i3);

        i3 = 0;

     label2:
        if i3 < $i1 goto label3;

        $r1 = virtualinvoke r2.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r1;

     label3:
        $i4 = $i1 - i3;

        $i4 = staticinvoke <java.lang.Math: int min(int,int)>($i4, $i2);

        $i5 = $i0 + i3;

        $r4 = staticinvoke <com.airpush.android.Base64: char[] encode(byte[],int,int)>($r0, $i5, $i4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r4);

        virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        i3 = i3 + $i4;

        goto label2;
    }

    public static java.lang.String encodeString(java.lang.String)
    {
        java.lang.String $r0, $r1;
        byte[] $r2;
        char[] $r3;

        $r0 := @parameter0: java.lang.String;

        $r1 = new java.lang.String;

        $r2 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        $r3 = staticinvoke <com.airpush.android.Base64: char[] encode(byte[])>($r2);

        specialinvoke $r1.<java.lang.String: void <init>(char[])>($r3);

        return $r1;
    }
}
