public class org.codehaus.jackson.map.deser.MapDeserializer extends org.codehaus.jackson.map.deser.ContainerDeserializer implements org.codehaus.jackson.map.ResolvableDeserializer
{
    protected final java.lang.reflect.Constructor _defaultCtor;
    protected java.util.HashSet _ignorableProperties;
    protected final org.codehaus.jackson.map.KeyDeserializer _keyDeserializer;
    protected final org.codehaus.jackson.type.JavaType _mapType;
    protected org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator;
    protected final org.codehaus.jackson.map.JsonDeserializer _valueDeserializer;
    protected final org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer;

    public void <init>(org.codehaus.jackson.type.JavaType, java.lang.reflect.Constructor, org.codehaus.jackson.map.KeyDeserializer, org.codehaus.jackson.map.JsonDeserializer, org.codehaus.jackson.map.TypeDeserializer)
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.type.JavaType $r1;
        java.lang.reflect.Constructor r2;
        org.codehaus.jackson.map.KeyDeserializer $r3;
        org.codehaus.jackson.map.JsonDeserializer r4;
        org.codehaus.jackson.map.TypeDeserializer $r5;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        r2 := @parameter1: java.lang.reflect.Constructor;

        $r3 := @parameter2: org.codehaus.jackson.map.KeyDeserializer;

        r4 := @parameter3: org.codehaus.jackson.map.JsonDeserializer;

        $r5 := @parameter4: org.codehaus.jackson.map.TypeDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.ContainerDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/Map;");

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType> = $r1;

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.reflect.Constructor _defaultCtor> = r2;

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer> = $r3;

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer> = r4;

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer> = $r5;

        return;
    }

    public java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.DeserializationContext $r0;
        org.codehaus.jackson.map.deser.MapDeserializer r1;
        org.codehaus.jackson.JsonParser r2;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r3;
        org.codehaus.jackson.map.deser.PropertyValueBuffer $r4;
        org.codehaus.jackson.JsonToken $r5, r6, $r7;
        org.codehaus.jackson.map.JsonDeserializer $r8;
        org.codehaus.jackson.map.TypeDeserializer $r9;
        java.lang.String $r10;
        java.util.HashSet $r11;
        boolean $z0;
        org.codehaus.jackson.map.deser.SettableBeanProperty $r12;
        java.lang.Object $r13, r19;
        int $i0;
        java.util.Map r14;
        java.lang.Exception $r15, $r20;
        org.codehaus.jackson.type.JavaType $r16;
        java.lang.Class $r17;
        org.codehaus.jackson.map.KeyDeserializer $r18;

        r1 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        r2 := @parameter0: org.codehaus.jackson.JsonParser;

        $r0 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.Creator$PropertyBased: org.codehaus.jackson.map.deser.PropertyValueBuffer startBuilding(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, $r0);

        $r5 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r6 = $r5;

        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r5 != $r7 goto label01;

        r6 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label01:
        $r8 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        $r9 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

     label02:
        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r6 != $r5 goto label14;

        $r10 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        r6 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r11 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r11 == null goto label04;

        $r11 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r11.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label04;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

     label03:
        r6 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label02;

     label04:
        $r12 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.Creator$PropertyBased: org.codehaus.jackson.map.deser.SettableBeanProperty findCreatorProperty(java.lang.String)>($r10);

        if $r12 == null goto label08;

        $r13 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, $r0);

        $i0 = virtualinvoke $r12.<org.codehaus.jackson.map.deser.SettableBeanProperty: int getCreatorIndex()>();

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.deser.PropertyValueBuffer: boolean assignParameter(int,java.lang.Object)>($i0, $r13);

        if $z0 == 0 goto label03;

        virtualinvoke r2.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label05:
        $r13 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.Creator$PropertyBased: java.lang.Object build(org.codehaus.jackson.map.deser.PropertyValueBuffer)>($r4);

        r14 = (java.util.Map) $r13;

     label06:
        virtualinvoke r1.<org.codehaus.jackson.map.deser.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>(r2, $r0, r14);

        return r14;

     label07:
        $r15 := @caughtexception;

        $r16 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r1.<org.codehaus.jackson.map.deser.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r15, $r17);

        return null;

     label08:
        $r10 = virtualinvoke r2.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        $r18 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        if $r18 != null goto label11;

        $r13 = $r10;

     label09:
        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if r6 != $r5 goto label12;

        r19 = null;

     label10:
        virtualinvoke $r4.<org.codehaus.jackson.map.deser.PropertyValueBuffer: void bufferMapProperty(java.lang.Object,java.lang.Object)>($r13, r19);

        goto label03;

     label11:
        $r18 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        $r13 = virtualinvoke $r18.<org.codehaus.jackson.map.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r10, $r0);

        goto label09;

     label12:
        if $r9 != null goto label13;

        r19 = virtualinvoke $r8.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>(r2, $r0);

        goto label10;

     label13:
        r19 = virtualinvoke $r8.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>(r2, $r0, $r9);

        goto label10;

     label14:
        $r13 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.Creator$PropertyBased: java.lang.Object build(org.codehaus.jackson.map.deser.PropertyValueBuffer)>($r4);

        r14 = (java.util.Map) $r13;

     label15:
        return r14;

     label16:
        $r20 := @caughtexception;

        $r16 = r1.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r17 = virtualinvoke $r16.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        virtualinvoke r1.<org.codehaus.jackson.map.deser.MapDeserializer: void wrapAndThrow(java.lang.Throwable,java.lang.Object)>($r20, $r17);

        return null;

        catch java.lang.Exception from label05 to label06 with label07;
        catch java.lang.Exception from label14 to label15 with label16;
    }

    protected final void _readAndBind(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Map) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Map r3;
        org.codehaus.jackson.map.KeyDeserializer r4;
        org.codehaus.jackson.map.TypeDeserializer r5;
        org.codehaus.jackson.map.JsonDeserializer r6;
        org.codehaus.jackson.JsonToken $r7, r8, $r9;
        java.lang.String $r10;
        java.lang.Object r11, r13;
        java.util.HashSet $r12;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r3 := @parameter2: java.util.Map;

        $r7 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        r8 = $r7;

        $r9 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r7 != $r9 goto label01;

        r8 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

     label01:
        r4 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.KeyDeserializer _keyDeserializer>;

        r6 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        r5 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.TypeDeserializer _valueTypeDeserializer>;

     label02:
        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if r8 != $r7 goto label10;

        $r10 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getCurrentName()>();

        if r4 != null goto label05;

        r11 = $r10;

     label03:
        r8 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r12 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.HashSet _ignorableProperties>;

        if $r12 == null goto label06;

        $r12 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.HashSet _ignorableProperties>;

        $z0 = virtualinvoke $r12.<java.util.HashSet: boolean contains(java.lang.Object)>($r10);

        if $z0 == 0 goto label06;

        virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonParser skipChildren()>();

     label04:
        r8 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        goto label02;

     label05:
        r11 = virtualinvoke r4.<org.codehaus.jackson.map.KeyDeserializer: java.lang.Object deserializeKey(java.lang.String,org.codehaus.jackson.map.DeserializationContext)>($r10, $r2);

        goto label03;

     label06:
        $r7 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if r8 != $r7 goto label08;

        r13 = null;

     label07:
        interfaceinvoke r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r11, r13);

        goto label04;

     label08:
        if r5 != null goto label09;

        r13 = virtualinvoke r6.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        goto label07;

     label09:
        r13 = virtualinvoke r6.<org.codehaus.jackson.map.JsonDeserializer: java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)>($r1, $r2, r5);

        goto label07;

     label10:
        return;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Map $r3;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Map $r3;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r4 := @parameter2: java.lang.Object;

        $r3 = (java.util.Map) $r4;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>($r1, $r2, $r3);

        return $r3;
    }

    public java.util.Map deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.JsonToken $r3, $r4;
        java.lang.Class $r5;
        org.codehaus.jackson.map.JsonMappingException $r6;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r7;
        java.util.Map $r8;
        java.lang.reflect.Constructor $r9;
        java.lang.Object[] $r10;
        java.lang.Object $r11;
        java.lang.Exception $r12;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r3 == $r4 goto label1;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r3 == $r4 goto label1;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Class getMapClass()>();

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r5);

        throw $r6;

     label1:
        $r7 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        if $r7 == null goto label2;

        $r8 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.Map _deserializeUsingCreator(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r8;

     label2:
        $r9 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.reflect.Constructor _defaultCtor>;

        if $r9 != null goto label3;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Class getMapClass()>();

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.String)>($r5, "No default constructor found");

        throw $r6;

     label3:
        $r9 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.reflect.Constructor _defaultCtor>;

        $r10 = newarray (java.lang.Object)[0];

        $r11 = virtualinvoke $r9.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>($r10);

        $r8 = (java.util.Map) $r11;

     label4:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>($r1, $r2, $r8);

        return $r8;

     label5:
        $r12 := @caughtexception;

        $r5 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Class getMapClass()>();

        $r6 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Exception)>($r5, $r12);

        throw $r6;

        catch java.lang.Exception from label3 to label4 with label5;
    }

    public java.util.Map deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, java.util.Map) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Map r3;
        org.codehaus.jackson.JsonToken $r4, $r5;
        java.lang.Class $r6;
        org.codehaus.jackson.map.JsonMappingException $r7;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        r3 := @parameter2: java.util.Map;

        $r4 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken START_OBJECT>;

        if $r4 == $r5 goto label1;

        $r5 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken FIELD_NAME>;

        if $r4 == $r5 goto label1;

        $r6 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.lang.Class getMapClass()>();

        $r7 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r6);

        throw $r7;

     label1:
        virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: void _readAndBind(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,java.util.Map)>($r1, $r2, r3);

        return r3;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromObject(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;
    }

    public org.codehaus.jackson.map.JsonDeserializer getContentDeserializer()
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.map.JsonDeserializer r1;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        r1 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer _valueDeserializer>;

        return r1;
    }

    public org.codehaus.jackson.type.JavaType getContentType()
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.type.JavaType $r1;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r1 = virtualinvoke $r1.<org.codehaus.jackson.type.JavaType: org.codehaus.jackson.type.JavaType getContentType()>();

        return $r1;
    }

    public final java.lang.Class getMapClass()
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        java.lang.Class $r1;
        org.codehaus.jackson.type.JavaType $r2;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.type.JavaType: java.lang.Class getRawClass()>();

        return $r1;
    }

    public org.codehaus.jackson.type.JavaType getValueType()
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.type.JavaType r1;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        r1 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.type.JavaType _mapType>;

        return r1;
    }

    public void resolve(org.codehaus.jackson.map.DeserializationConfig, org.codehaus.jackson.map.DeserializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.map.DeserializationConfig $r1;
        org.codehaus.jackson.map.DeserializerProvider $r2;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r3;
        java.util.Collection $r4;
        java.util.Iterator $r5;
        boolean $z0;
        java.lang.Object $r6;
        org.codehaus.jackson.map.deser.SettableBeanProperty r7;
        org.codehaus.jackson.type.JavaType $r8;
        org.codehaus.jackson.map.JsonDeserializer $r9;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.DeserializationConfig;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializerProvider;

        $r3 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        if $r3 == null goto label2;

        $r3 = r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.deser.Creator$PropertyBased: java.util.Collection properties()>();

        $r5 = interfaceinvoke $r4.<java.util.Collection: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r5.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r6 = interfaceinvoke $r5.<java.util.Iterator: java.lang.Object next()>();

        r7 = (org.codehaus.jackson.map.deser.SettableBeanProperty) $r6;

        $r8 = virtualinvoke r7.<org.codehaus.jackson.map.deser.SettableBeanProperty: org.codehaus.jackson.type.JavaType getType()>();

        $r9 = virtualinvoke r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.JsonDeserializer findDeserializer(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.DeserializerProvider,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r1, $r2, $r8, r7);

        virtualinvoke r7.<org.codehaus.jackson.map.deser.SettableBeanProperty: void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)>($r9);

        goto label1;

     label2:
        return;
    }

    public void setCreators(org.codehaus.jackson.map.deser.CreatorContainer)
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        org.codehaus.jackson.map.deser.CreatorContainer $r1;
        org.codehaus.jackson.map.deser.Creator$PropertyBased $r2;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.CreatorContainer;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.CreatorContainer: org.codehaus.jackson.map.deser.Creator$PropertyBased propertyBasedCreator()>();

        r0.<org.codehaus.jackson.map.deser.MapDeserializer: org.codehaus.jackson.map.deser.Creator$PropertyBased _propertyBasedCreator> = $r2;

        return;
    }

    public void setIgnorableProperties(java.lang.String[])
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        java.lang.String[] $r1;
        java.util.HashSet $r2;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        $r1 := @parameter0: java.lang.String[];

        if $r1 == null goto label1;

        $i0 = lengthof $r1;

        if $i0 != 0 goto label3;

     label1:
        $r2 = null;

     label2:
        r0.<org.codehaus.jackson.map.deser.MapDeserializer: java.util.HashSet _ignorableProperties> = $r2;

        return;

     label3:
        $r2 = staticinvoke <org.codehaus.jackson.map.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>($r1);

        goto label2;
    }

    protected void wrapAndThrow(java.lang.Throwable, java.lang.Object) throws java.io.IOException
    {
        org.codehaus.jackson.map.deser.MapDeserializer r0;
        java.lang.Object $r1;
        java.lang.Throwable r2, $r3;
        boolean $z0;
        java.lang.Error r4;
        java.io.IOException r5;
        org.codehaus.jackson.map.JsonMappingException $r6;

        r0 := @this: org.codehaus.jackson.map.deser.MapDeserializer;

        r2 := @parameter0: java.lang.Throwable;

        $r1 := @parameter1: java.lang.Object;

     label1:
        $z0 = r2 instanceof java.lang.reflect.InvocationTargetException;

        if $z0 == 0 goto label2;

        $r3 = virtualinvoke r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        if $r3 == null goto label2;

        r2 = virtualinvoke r2.<java.lang.Throwable: java.lang.Throwable getCause()>();

        goto label1;

     label2:
        $z0 = r2 instanceof java.lang.Error;

        if $z0 == 0 goto label3;

        r4 = (java.lang.Error) r2;

        throw r4;

     label3:
        $z0 = r2 instanceof java.io.IOException;

        if $z0 == 0 goto label4;

        $z0 = r2 instanceof org.codehaus.jackson.map.JsonMappingException;

        if $z0 != 0 goto label4;

        r5 = (java.io.IOException) r2;

        throw r5;

     label4:
        $r6 = staticinvoke <org.codehaus.jackson.map.JsonMappingException: org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>(r2, $r1, null);

        throw $r6;
    }
}
