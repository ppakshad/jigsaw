public final class org.codehaus.jackson.impl.ByteSourceBootstrapper extends java.lang.Object
{
    boolean _bigEndian;
    private final boolean _bufferRecyclable;
    int _bytesPerChar;
    final org.codehaus.jackson.io.IOContext _context;
    final java.io.InputStream _in;
    final byte[] _inputBuffer;
    private int _inputEnd;
    protected int _inputProcessed;
    private int _inputPtr;

    public void <init>(org.codehaus.jackson.io.IOContext, java.io.InputStream)
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        org.codehaus.jackson.io.IOContext $r1;
        java.io.InputStream $r2;
        byte[] $r3;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        $r2 := @parameter1: java.io.InputStream;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context> = $r1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in> = $r2;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.io.IOContext: byte[] allocReadIOBuffer()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer> = $r3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputProcessed> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable> = 1;

        return;
    }

    public void <init>(org.codehaus.jackson.io.IOContext, byte[], int, int)
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        org.codehaus.jackson.io.IOContext $r1;
        byte[] $r2;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $r1 := @parameter0: org.codehaus.jackson.io.IOContext;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context> = $r1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in> = null;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer> = $r2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        $i1 = $i0 + $i1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = $i1;

        $i0 = neg $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputProcessed> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable> = 0;

        return;
    }

    private boolean checkUTF16(int)
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $i0 := @parameter0: int;

        $i1 = 65280 & $i0;

        if $i1 != 0 goto label2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

     label1:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        return 1;

     label2:
        $i0 = $i0 & 255;

        if $i0 != 0 goto label3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        goto label1;

     label3:
        return 0;
    }

    private boolean checkUTF32(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int $i0, $i1;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $i0 := @parameter0: int;

        $i1 = $i0 >> 8;

        if $i1 != 0 goto label2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

     label1:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        return 1;

     label2:
        $i1 = 16777215 & $i0;

        if $i1 != 0 goto label3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        goto label1;

     label3:
        $i1 = -16711681 & $i0;

        if $i1 != 0 goto label4;

        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label1;

     label4:
        $i0 = -65281 & $i0;

        if $i0 != 0 goto label5;

        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

        goto label1;

     label5:
        return 0;
    }

    private boolean handleBOM(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int $i0, i1;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case -16842752: goto label5;
            case -131072: goto label3;
            case 65279: goto label2;
            case 65534: goto label4;
            default: goto label1;
        };

     label1:
        i1 = $i0 >>> 16;

        if i1 != 65279 goto label6;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i0 = $i0 + 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label2:
        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i0 = $i0 + 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        return 1;

     label3:
        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i0 = $i0 + 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 4;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label4:
        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("2143");

     label5:
        specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: void reportWeirdUCS4(java.lang.String)>("3412");

        goto label1;

     label6:
        if i1 != 65534 goto label7;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i0 = $i0 + 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 2;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 0;

        return 1;

     label7:
        $i0 = $i0 >>> 8;

        if $i0 != 15711167 goto label8;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i0 = $i0 + 3;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr> = $i0;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar> = 1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian> = 1;

        return 1;

     label8:
        return 0;
    }

    private void reportWeirdUCS4(java.lang.String) throws java.io.IOException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        java.lang.String $r1;
        java.io.CharConversionException $r2;
        java.lang.StringBuilder $r3;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $r1 := @parameter0: java.lang.String;

        $r2 = new java.io.CharConversionException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported UCS-4 endianness (");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") detected");

        $r1 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.io.CharConversionException: void <init>(java.lang.String)>($r1);

        throw $r2;
    }

    public org.codehaus.jackson.JsonParser constructParser(int, org.codehaus.jackson.ObjectCodec, org.codehaus.jackson.sym.BytesToNameCanonicalizer, org.codehaus.jackson.sym.CharsToNameCanonicalizer) throws java.io.IOException, org.codehaus.jackson.JsonParseException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int $i0, $i1, $i2;
        org.codehaus.jackson.ObjectCodec $r1;
        org.codehaus.jackson.sym.BytesToNameCanonicalizer $r2;
        org.codehaus.jackson.sym.CharsToNameCanonicalizer $r3;
        org.codehaus.jackson.JsonEncoding $r4, $r6;
        org.codehaus.jackson.JsonParser$Feature $r5;
        boolean $z0, $z1;
        org.codehaus.jackson.impl.Utf8StreamParser $r7;
        org.codehaus.jackson.io.IOContext $r8;
        java.io.InputStream $r9;
        byte[] $r10;
        org.codehaus.jackson.impl.ReaderBasedParser $r11;
        java.io.Reader $r12;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $i0 := @parameter0: int;

        $r1 := @parameter1: org.codehaus.jackson.ObjectCodec;

        $r2 := @parameter2: org.codehaus.jackson.sym.BytesToNameCanonicalizer;

        $r3 := @parameter3: org.codehaus.jackson.sym.CharsToNameCanonicalizer;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.JsonEncoding detectEncoding()>();

        $r5 = <org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature CANONICALIZE_FIELD_NAMES>;

        $z0 = virtualinvoke $r5.<org.codehaus.jackson.JsonParser$Feature: boolean enabledIn(int)>($i0);

        $r5 = <org.codehaus.jackson.JsonParser$Feature: org.codehaus.jackson.JsonParser$Feature INTERN_FIELD_NAMES>;

        $z1 = virtualinvoke $r5.<org.codehaus.jackson.JsonParser$Feature: boolean enabledIn(int)>($i0);

        $r6 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        if $r4 != $r6 goto label1;

        if $z0 == 0 goto label1;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.sym.BytesToNameCanonicalizer: org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean)>($z0, $z1);

        $r7 = new org.codehaus.jackson.impl.Utf8StreamParser;

        $r8 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r9 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r10 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $z0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bufferRecyclable>;

        specialinvoke $r7.<org.codehaus.jackson.impl.Utf8StreamParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.InputStream,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.BytesToNameCanonicalizer,byte[],int,int,boolean)>($r8, $i0, $r9, $r1, $r2, $r10, $i1, $i2, $z0);

        return $r7;

     label1:
        $r11 = new org.codehaus.jackson.impl.ReaderBasedParser;

        $r8 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r12 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.Reader constructReader()>();

        $r3 = virtualinvoke $r3.<org.codehaus.jackson.sym.CharsToNameCanonicalizer: org.codehaus.jackson.sym.CharsToNameCanonicalizer makeChild(boolean,boolean)>($z0, $z1);

        specialinvoke $r11.<org.codehaus.jackson.impl.ReaderBasedParser: void <init>(org.codehaus.jackson.io.IOContext,int,java.io.Reader,org.codehaus.jackson.ObjectCodec,org.codehaus.jackson.sym.CharsToNameCanonicalizer)>($r8, $i0, $r12, $r1, $r3);

        return $r11;
    }

    public java.io.Reader constructReader() throws java.io.IOException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        org.codehaus.jackson.io.IOContext $r1, $r6;
        org.codehaus.jackson.JsonEncoding $r2;
        int[] $r3;
        int $i0, $i1;
        java.io.InputStream r4;
        byte[] $r5;
        boolean $z0;
        java.lang.Object r7;
        java.lang.String $r8;
        java.lang.RuntimeException $r9;
        org.codehaus.jackson.io.UTF32Reader $r10;
        java.io.ByteArrayInputStream $r11;
        java.io.InputStreamReader $r12;
        org.codehaus.jackson.io.MergedStream $r13;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.JsonEncoding getEncoding()>();

        $r3 = <org.codehaus.jackson.impl.ByteSourceBootstrapper$1: int[] $SwitchMap$org$codehaus$jackson$JsonEncoding>;

        $i0 = virtualinvoke $r2.<org.codehaus.jackson.JsonEncoding: int ordinal()>();

        $i0 = $r3[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label2;
            case 3: goto label3;
            case 4: goto label3;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        $r9 = new java.lang.RuntimeException;

        specialinvoke $r9.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r9;

     label2:
        $r10 = new org.codehaus.jackson.io.UTF32Reader;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        r4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $r6 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r2 = virtualinvoke $r6.<org.codehaus.jackson.io.IOContext: org.codehaus.jackson.JsonEncoding getEncoding()>();

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.JsonEncoding: boolean isBigEndian()>();

        specialinvoke $r10.<org.codehaus.jackson.io.UTF32Reader: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int,boolean)>($r1, r4, $r5, $i0, $i1, $z0);

        return $r10;

     label3:
        r4 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        if r4 != null goto label5;

        $r11 = new java.io.ByteArrayInputStream;

        r7 = $r11;

        $r5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        specialinvoke $r11.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>($r5, $i0, $i1);

     label4:
        $r12 = new java.io.InputStreamReader;

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.JsonEncoding: java.lang.String getJavaName()>();

        r4 = (java.io.InputStream) r7;

        specialinvoke $r12.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(r4, $r8);

        return $r12;

     label5:
        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        if $i0 >= $i1 goto label6;

        $r13 = new org.codehaus.jackson.io.MergedStream;

        r7 = $r13;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        $r5 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        specialinvoke $r13.<org.codehaus.jackson.io.MergedStream: void <init>(org.codehaus.jackson.io.IOContext,java.io.InputStream,byte[],int,int)>($r1, r4, $r5, $i0, $i1);

        goto label4;

     label6:
        r7 = r4;

        goto label4;
    }

    public org.codehaus.jackson.JsonEncoding detectEncoding() throws java.io.IOException, org.codehaus.jackson.JsonParseException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int i0, $i2;
        boolean z0, $z1;
        byte[] $r1;
        byte $b1;
        org.codehaus.jackson.JsonEncoding r2;
        org.codehaus.jackson.io.IOContext $r3;
        java.lang.RuntimeException $r4;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        z0 = 0;

        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean ensureLoaded(int)>(4);

        if $z1 == 0 goto label05;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $b1 = $r1[i0];

        i0 = $b1 << 24;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = $i2 + 1;

        $b1 = $r1[$i2];

        $i2 = $b1 & 255;

        $i2 = $i2 << 16;

        i0 = i0 | $i2;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = $i2 + 2;

        $b1 = $r1[$i2];

        $i2 = $b1 & 255;

        $i2 = $i2 << 8;

        i0 = i0 | $i2;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = $i2 + 3;

        $b1 = $r1[$i2];

        $i2 = $b1 & 255;

        i0 = i0 | $i2;

        $z1 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean handleBOM(int)>(i0);

        if $z1 == 0 goto label03;

        z0 = 1;

     label01:
        if z0 != 0 goto label06;

        r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

     label02:
        $r3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: org.codehaus.jackson.io.IOContext _context>;

        virtualinvoke $r3.<org.codehaus.jackson.io.IOContext: void setEncoding(org.codehaus.jackson.JsonEncoding)>(r2);

        return r2;

     label03:
        $z1 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF32(int)>(i0);

        if $z1 == 0 goto label04;

        z0 = 1;

        goto label01;

     label04:
        i0 = i0 >>> 16;

        $z1 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF16(int)>(i0);

        if $z1 == 0 goto label01;

        z0 = 1;

        goto label01;

     label05:
        $z1 = virtualinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean ensureLoaded(int)>(2);

        if $z1 == 0 goto label01;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $b1 = $r1[i0];

        i0 = $b1 & 255;

        i0 = i0 << 8;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i2 = $i2 + 1;

        $b1 = $r1[$i2];

        $i2 = $b1 & 255;

        i0 = i0 | $i2;

        $z1 = specialinvoke r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean checkUTF16(int)>(i0);

        if $z1 == 0 goto label01;

        z0 = 1;

        goto label01;

     label06:
        i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar>;

        if i0 != 2 goto label08;

        z0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian>;

        if z0 == 0 goto label07;

        r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_BE>;

        goto label02;

     label07:
        r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF16_LE>;

        goto label02;

     label08:
        i0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _bytesPerChar>;

        if i0 != 4 goto label10;

        z0 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: boolean _bigEndian>;

        if z0 == 0 goto label09;

        r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_BE>;

        goto label02;

     label09:
        r2 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF32_LE>;

        goto label02;

     label10:
        $r4 = new java.lang.RuntimeException;

        specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String)>("Internal error");

        throw $r4;
    }

    protected boolean ensureLoaded(int) throws java.io.IOException
    {
        org.codehaus.jackson.impl.ByteSourceBootstrapper r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.io.InputStream $r1;
        byte[] $r2, $r3;

        r0 := @this: org.codehaus.jackson.impl.ByteSourceBootstrapper;

        $i0 := @parameter0: int;

        $i3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputPtr>;

        $i3 = $i3 - $i1;

     label1:
        if $i3 >= $i0 goto label5;

        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        if $r1 != null goto label3;

        $i1 = -1;

     label2:
        if $i1 >= 1 goto label4;

        return 0;

     label3:
        $r1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: java.io.InputStream _in>;

        $r2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i1 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $r3 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: byte[] _inputBuffer>;

        $i4 = lengthof $r3;

        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i2 = $i4 - $i2;

        $i1 = virtualinvoke $r1.<java.io.InputStream: int read(byte[],int,int)>($r2, $i1, $i2);

        goto label2;

     label4:
        $i2 = r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd>;

        $i2 = $i2 + $i1;

        r0.<org.codehaus.jackson.impl.ByteSourceBootstrapper: int _inputEnd> = $i2;

        $i3 = $i3 + $i1;

        goto label1;

     label5:
        return 1;
    }
}
