public final class org.codehaus.jackson.map.jsontype.NamedType extends java.lang.Object
{
    protected final java.lang.Class _class;
    protected final int _hashCode;
    protected java.lang.String _name;

    public void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(r1, null);

        return;
    }

    public void <init>(java.lang.Class, java.lang.String)
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.Class r1;
        java.lang.String $r2, $r3;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.Class;

        $r2 := @parameter1: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class> = r1;

        $r3 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>();

        $i0 = virtualinvoke $r3.<java.lang.String: int hashCode()>();

        r0.<org.codehaus.jackson.map.jsontype.NamedType: int _hashCode> = $i0;

        virtualinvoke r0.<org.codehaus.jackson.map.jsontype.NamedType: void setName(java.lang.String)>($r2);

        return;
    }

    public boolean equals(java.lang.Object)
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.Object r1;
        java.lang.Class $r2, $r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 := @parameter0: java.lang.Object;

        if r1 != r0 goto label1;

        return 1;

     label1:
        if r1 != null goto label2;

        return 0;

     label2:
        $r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r2 == $r3 goto label3;

        return 0;

     label3:
        $r2 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        r0 = (org.codehaus.jackson.map.jsontype.NamedType) r1;

        $r3 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        if $r2 != $r3 goto label4;

        return 1;

     label4:
        return 0;
    }

    public java.lang.String getName()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        return r1;
    }

    public java.lang.Class getType()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        return r1;
    }

    public boolean hasName()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String $r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public int hashCode()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        int i0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        i0 = r0.<org.codehaus.jackson.map.jsontype.NamedType: int _hashCode>;

        return i0;
    }

    public void setName(java.lang.String)
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 := @parameter0: java.lang.String;

        if $r1 == null goto label1;

        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

     label1:
        $r1 = null;

     label2:
        r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name> = $r1;

        return;

     label3:
        goto label2;
    }

    public java.lang.String toString()
    {
        org.codehaus.jackson.map.jsontype.NamedType r0;
        java.lang.StringBuilder $r1, $r4;
        java.lang.Class $r2;
        java.lang.String $r3;

        r0 := @this: org.codehaus.jackson.map.jsontype.NamedType;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[NamedType, class ");

        $r2 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.Class _class>;

        $r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name: ");

        $r3 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        if $r3 != null goto label2;

        $r3 = "null";

     label1:
        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r3;

     label2:
        $r4 = new java.lang.StringBuilder;

        specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = r0.<org.codehaus.jackson.map.jsontype.NamedType: java.lang.String _name>;

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);

        $r4 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");

        $r3 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>();

        goto label1;
    }
}
