public class org.codehaus.jackson.map.ObjectWriter extends java.lang.Object implements org.codehaus.jackson.Versioned
{
    protected static final org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER;
    protected final org.codehaus.jackson.map.SerializationConfig _config;
    protected final org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper;
    protected final org.codehaus.jackson.JsonFactory _jsonFactory;
    protected final org.codehaus.jackson.PrettyPrinter _prettyPrinter;
    protected final org.codehaus.jackson.map.SerializerProvider _provider;
    protected final org.codehaus.jackson.type.JavaType _rootType;
    protected final java.lang.Class _serializationView;
    protected final org.codehaus.jackson.map.SerializerFactory _serializerFactory;
    protected final org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver;
    protected final org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker;

    static void <clinit>()
    {
        org.codehaus.jackson.util.MinimalPrettyPrinter $r0;

        $r0 = new org.codehaus.jackson.util.MinimalPrettyPrinter;

        specialinvoke $r0.<org.codehaus.jackson.util.MinimalPrettyPrinter: void <init>()>();

        <org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER> = $r0;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectMapper, java.lang.Class, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.map.ObjectMapper $r1;
        java.lang.Class r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.PrettyPrinter $r4;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r5;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r6;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r7;
        org.codehaus.jackson.map.SerializationConfig $r8;
        org.codehaus.jackson.map.SerializerProvider $r9;
        org.codehaus.jackson.map.SerializerFactory $r10;
        org.codehaus.jackson.JsonFactory $r11;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper;

        r2 := @parameter1: java.lang.Class;

        $r3 := @parameter2: org.codehaus.jackson.type.JavaType;

        $r4 := @parameter3: org.codehaus.jackson.PrettyPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r5 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper> = $r5;

        $r6 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r6;

        $r7 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r7;

        $r8 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        $r6 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r8 = virtualinvoke $r8.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.ser.FilterProvider)>($r5, $r6, $r7, null);

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config> = $r8;

        $r8 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        virtualinvoke $r8.<org.codehaus.jackson.map.SerializationConfig: void setSerializationView(java.lang.Class)>(r2);

        $r9 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider> = $r9;

        $r10 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r10;

        $r11 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory> = $r11;

        r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView> = r2;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType> = $r3;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter> = $r4;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectMapper, org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.map.ObjectMapper $r1;
        org.codehaus.jackson.map.ser.FilterProvider $r2;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r3;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r4;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r5;
        org.codehaus.jackson.map.SerializationConfig $r6;
        org.codehaus.jackson.map.SerializerProvider $r7;
        org.codehaus.jackson.map.SerializerFactory $r8;
        org.codehaus.jackson.JsonFactory $r9;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ObjectMapper;

        $r2 := @parameter1: org.codehaus.jackson.map.ser.FilterProvider;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r3 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper> = $r3;

        $r4 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r4;

        $r5 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r5;

        $r6 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializationConfig _serializationConfig>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r6 = virtualinvoke $r6.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver,org.codehaus.jackson.map.ser.FilterProvider)>($r3, $r4, $r5, $r2);

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config> = $r6;

        $r7 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerProvider _serializerProvider>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider> = $r7;

        $r8 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r8;

        $r9 = $r1.<org.codehaus.jackson.map.ObjectMapper: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory> = $r9;

        r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView> = null;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType> = null;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter> = null;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectWriter, org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.JsonFactory $r5;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r6;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r7;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r8;
        java.lang.Class $r9;
        org.codehaus.jackson.type.JavaType $r10;
        org.codehaus.jackson.PrettyPrinter $r11;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ObjectWriter;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config> = $r2;

        $r3 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider> = $r3;

        $r4 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r4;

        $r5 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory> = $r5;

        $r6 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper> = $r6;

        $r7 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r7;

        $r8 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r8;

        $r9 = $r1.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView>;

        r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView> = $r9;

        $r10 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType> = $r10;

        $r11 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter> = $r11;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.ObjectWriter, org.codehaus.jackson.map.SerializationConfig, java.lang.Class, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        java.lang.Class r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.PrettyPrinter $r5;
        org.codehaus.jackson.map.SerializerProvider $r6;
        org.codehaus.jackson.map.SerializerFactory $r7;
        org.codehaus.jackson.JsonFactory $r8;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r9;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r10;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r11;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ObjectWriter;

        $r2 := @parameter1: org.codehaus.jackson.map.SerializationConfig;

        r3 := @parameter2: java.lang.Class;

        $r4 := @parameter3: org.codehaus.jackson.type.JavaType;

        $r5 := @parameter4: org.codehaus.jackson.PrettyPrinter;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config> = $r2;

        $r6 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider> = $r6;

        $r7 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory> = $r7;

        $r8 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory> = $r8;

        $r9 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper> = $r9;

        $r10 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker> = $r10;

        $r11 = $r1.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver> = $r11;

        r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView> = r3;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType> = $r4;

        r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter> = $r5;

        return;
    }

    private final void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Object $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.JsonGenerator r5, $r6;
        java.io.Closeable $r7, r8;
        org.codehaus.jackson.map.SerializerProvider $r9;
        java.lang.Throwable $r10, $r11, $r12;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r6 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r1 := @parameter1: java.lang.Object;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r7 = (java.io.Closeable) $r1;

        r8 = $r7;

     label01:
        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

     label02:
        if $r3 != null goto label10;

     label03:
        $r9 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r9.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r2, $r6, $r1, $r4);

     label04:
        r5 = $r6;

        $r6 = null;

     label05:
        virtualinvoke r5.<org.codehaus.jackson.JsonGenerator: void close()>();

     label06:
        r8 = null;

     label07:
        interfaceinvoke $r7.<java.io.Closeable: void close()>();

     label08:
        goto label09;

     label09:
        goto label19;

     label10:
        $r9 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r9.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)>($r2, $r6, $r1, $r3, $r4);

     label11:
        goto label04;

     label12:
        $r10 := @caughtexception;

        if $r6 == null goto label14;

     label13:
        virtualinvoke $r6.<org.codehaus.jackson.JsonGenerator: void close()>();

     label14:
        if r8 == null goto label16;

     label15:
        interfaceinvoke r8.<java.io.Closeable: void close()>();

     label16:
        throw $r10;

     label17:
        $r11 := @caughtexception;

        goto label14;

     label18:
        $r12 := @caughtexception;

        goto label16;

     label19:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label04 with label12;
        catch java.lang.Throwable from label05 to label06 with label12;
        catch java.lang.Throwable from label07 to label08 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label13 to label14 with label17;
        catch java.io.IOException from label15 to label16 with label18;
    }

    private final void _writeCloseableValue(org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializationConfig) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.map.SerializationConfig $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.map.SerializerFactory $r5;
        boolean $z0;
        java.io.Closeable $r6, r7;
        org.codehaus.jackson.map.SerializerProvider $r8;
        org.codehaus.jackson.map.SerializationConfig$Feature $r9;
        java.lang.Throwable $r10, $r11;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializationConfig;

        $r6 = (java.io.Closeable) $r2;

        r7 = $r6;

     label01:
        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

     label02:
        if $r4 != null goto label10;

     label03:
        $r8 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r8.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r3, $r1, $r2, $r5);

     label04:
        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r9 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r3.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r9);

     label05:
        if $z0 == 0 goto label07;

     label06:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

     label07:
        r7 = null;

     label08:
        interfaceinvoke $r6.<java.io.Closeable: void close()>();

     label09:
        goto label16;

     label10:
        $r8 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r8.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)>($r3, $r1, $r2, $r4, $r5);

     label11:
        goto label04;

     label12:
        $r10 := @caughtexception;

        if r7 == null goto label14;

     label13:
        interfaceinvoke r7.<java.io.Closeable: void close()>();

     label14:
        throw $r10;

     label15:
        $r11 := @caughtexception;

        goto label14;

     label16:
        return;

        catch java.lang.Throwable from label01 to label02 with label12;
        catch java.lang.Throwable from label03 to label05 with label12;
        catch java.lang.Throwable from label06 to label07 with label12;
        catch java.lang.Throwable from label08 to label09 with label12;
        catch java.lang.Throwable from label10 to label11 with label12;
        catch java.io.IOException from label13 to label14 with label15;
    }

    protected final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.PrettyPrinter r5, $r6;
        org.codehaus.jackson.map.SerializationConfig $r7;
        org.codehaus.jackson.map.SerializationConfig$Feature $r8;
        boolean $z0;
        org.codehaus.jackson.map.SerializerProvider $r9;
        java.lang.Throwable $r10, $r11;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter1: java.lang.Object;

        r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter>;

        if r5 == null goto label04;

        r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter>;

        $r6 = <org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER>;

        if r5 != $r6 goto label03;

        r5 = null;

     label01:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter)>(r5);

     label02:
        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r8);

        if $z0 == 0 goto label05;

        $z0 = $r2 instanceof java.io.Closeable;

        if $z0 == 0 goto label05;

        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r2, $r7);

        return;

     label03:
        goto label01;

     label04:
        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r8 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature INDENT_OUTPUT>;

        $z0 = virtualinvoke $r7.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r8);

        if $z0 == 0 goto label02;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()>();

        goto label02;

     label05:
        $z0 = 0;

     label06:
        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

     label07:
        if $r3 != null goto label12;

     label08:
        $r9 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r9.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r7, $r1, $r2, $r4);

     label09:
        $z0 = 1;

     label10:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label11:
        goto label18;

     label12:
        $r9 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r9.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)>($r7, $r1, $r2, $r3, $r4);

     label13:
        goto label09;

     label14:
        $r10 := @caughtexception;

        if $z0 != 0 goto label16;

     label15:
        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void close()>();

     label16:
        throw $r10;

     label17:
        $r11 := @caughtexception;

        goto label16;

     label18:
        return;

        catch java.lang.Throwable from label06 to label07 with label14;
        catch java.lang.Throwable from label08 to label09 with label14;
        catch java.lang.Throwable from label10 to label11 with label14;
        catch java.lang.Throwable from label12 to label13 with label14;
        catch java.io.IOException from label15 to label16 with label17;
    }

    public boolean canSerialize(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        org.codehaus.jackson.map.SerializerFactory $r3;
        boolean $z0;
        org.codehaus.jackson.map.SerializerProvider $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        r1 := @parameter0: java.lang.Class;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        $z0 = virtualinvoke $r4.<org.codehaus.jackson.map.SerializerProvider: boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)>($r2, r1, $r3);

        return $z0;
    }

    public org.codehaus.jackson.Version version()
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Class $r1;
        org.codehaus.jackson.Version $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();

        $r2 = staticinvoke <org.codehaus.jackson.util.VersionUtil: org.codehaus.jackson.Version versionFor(java.lang.Class)>($r1);

        return $r2;
    }

    public org.codehaus.jackson.map.ObjectWriter withDefaultPrettyPrinter()
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.util.DefaultPrettyPrinter $r1;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 = new org.codehaus.jackson.util.DefaultPrettyPrinter;

        specialinvoke $r1.<org.codehaus.jackson.util.DefaultPrettyPrinter: void <init>()>();

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter)>($r1);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectWriter withFilters(org.codehaus.jackson.map.ser.FilterProvider)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r4;
        org.codehaus.jackson.map.ser.FilterProvider $r1, $r3;
        org.codehaus.jackson.map.SerializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.map.ser.FilterProvider;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()>();

        if $r1 != $r3 goto label1;

        return r0;

     label1:
        $r4 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r2 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)>($r1);

        specialinvoke $r4.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig)>(r0, $r2);

        return $r4;
    }

    public org.codehaus.jackson.map.ObjectWriter withPrettyPrinter(org.codehaus.jackson.PrettyPrinter)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.type.JavaType $r4;
        org.codehaus.jackson.PrettyPrinter $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r5 := @parameter0: org.codehaus.jackson.PrettyPrinter;

        if $r5 != null goto label1;

        $r5 = <org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter NULL_PRETTY_PRINTER>;

     label1:
        $r1 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        specialinvoke $r1.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r2, $r3, $r4, $r5);

        return $r1;
    }

    public org.codehaus.jackson.map.ObjectWriter withType(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Class r1;
        org.codehaus.jackson.type.JavaType $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        r1 := @parameter0: java.lang.Class;

        $r2 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type)>(r1);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType)>($r2);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r6;
        org.codehaus.jackson.type.JavaType $r1, $r5;
        org.codehaus.jackson.map.SerializationConfig $r2;
        java.lang.Class $r3;
        org.codehaus.jackson.PrettyPrinter $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        if $r1 != $r5 goto label1;

        return r0;

     label1:
        $r6 = new org.codehaus.jackson.map.ObjectWriter;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.PrettyPrinter _prettyPrinter>;

        specialinvoke $r6.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.PrettyPrinter)>(r0, $r2, $r3, $r1, $r4);

        return $r6;
    }

    public org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.TypeReference)
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.type.TypeReference r1;
        org.codehaus.jackson.type.JavaType $r2;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        r1 := @parameter0: org.codehaus.jackson.type.TypeReference;

        $r2 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference)>(r1);

        r0 = virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.ObjectWriter withType(org.codehaus.jackson.type.JavaType)>($r2);

        return r0;
    }

    public org.codehaus.jackson.map.ObjectWriter withView(java.lang.Class)
    {
        org.codehaus.jackson.map.ObjectWriter r0, $r7;
        java.lang.Class r1, $r6;
        org.codehaus.jackson.map.jsontype.TypeResolverBuilder $r2;
        org.codehaus.jackson.map.introspect.VisibilityChecker $r3;
        org.codehaus.jackson.map.jsontype.SubtypeResolver $r4;
        org.codehaus.jackson.map.SerializationConfig $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        r1 := @parameter0: java.lang.Class;

        $r6 = r0.<org.codehaus.jackson.map.ObjectWriter: java.lang.Class _serializationView>;

        if r1 != $r6 goto label1;

        return r0;

     label1:
        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r2 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.TypeResolverBuilder _defaultTyper>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.introspect.VisibilityChecker _visibilityChecker>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.jsontype.SubtypeResolver _subtypeResolver>;

        $r5 = virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.TypeResolverBuilder,org.codehaus.jackson.map.introspect.VisibilityChecker,org.codehaus.jackson.map.jsontype.SubtypeResolver)>($r2, $r3, $r4);

        virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: void setSerializationView(java.lang.Class)>(r1);

        $r7 = new org.codehaus.jackson.map.ObjectWriter;

        specialinvoke $r7.<org.codehaus.jackson.map.ObjectWriter: void <init>(org.codehaus.jackson.map.ObjectWriter,org.codehaus.jackson.map.SerializationConfig)>(r0, $r5);

        return $r7;
    }

    public void writeValue(java.io.File, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.io.File $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.JsonEncoding $r3;
        org.codehaus.jackson.JsonGenerator $r4;
        org.codehaus.jackson.JsonFactory $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: java.io.File;

        $r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r5.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding)>($r1, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, $r2);

        return;
    }

    public void writeValue(java.io.OutputStream, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.io.OutputStream $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.JsonEncoding $r3;
        org.codehaus.jackson.JsonGenerator $r4;
        org.codehaus.jackson.JsonFactory $r5;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r4 = virtualinvoke $r5.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>($r1, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r4, $r2);

        return;
    }

    public void writeValue(java.io.Writer, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.io.Writer $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.JsonGenerator $r3;
        org.codehaus.jackson.JsonFactory $r4;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: java.io.Writer;

        $r2 := @parameter1: java.lang.Object;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>($r1);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r3, $r2);

        return;
    }

    public void writeValue(org.codehaus.jackson.JsonGenerator, java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        org.codehaus.jackson.JsonGenerator $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.type.JavaType $r3;
        org.codehaus.jackson.map.SerializerFactory $r4;
        org.codehaus.jackson.map.SerializationConfig $r5;
        org.codehaus.jackson.map.SerializationConfig$Feature $r6;
        boolean $z0;
        org.codehaus.jackson.map.SerializerProvider $r7;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter1: java.lang.Object;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature CLOSE_CLOSEABLE>;

        $z0 = virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label1;

        $z0 = $r2 instanceof java.io.Closeable;

        if $z0 == 0 goto label1;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        specialinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)>($r1, $r2, $r5);

        return;

     label1:
        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        if $r3 != null goto label3;

        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r7.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)>($r5, $r1, $r2, $r4);

     label2:
        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r6 = <org.codehaus.jackson.map.SerializationConfig$Feature: org.codehaus.jackson.map.SerializationConfig$Feature FLUSH_AFTER_WRITE_VALUE>;

        $z0 = virtualinvoke $r5.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r6);

        if $z0 == 0 goto label4;

        virtualinvoke $r1.<org.codehaus.jackson.JsonGenerator: void flush()>();

        return;

     label3:
        $r7 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerProvider _provider>;

        $r5 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializationConfig _config>;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.type.JavaType _rootType>;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.map.SerializerFactory _serializerFactory>;

        virtualinvoke $r7.<org.codehaus.jackson.map.SerializerProvider: void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)>($r5, $r1, $r2, $r3, $r4);

        goto label2;

     label4:
        return;
    }

    public byte[] writeValueAsBytes(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Object $r1;
        org.codehaus.jackson.util.ByteArrayBuilder r2;
        org.codehaus.jackson.JsonEncoding $r3;
        org.codehaus.jackson.JsonFactory $r4;
        org.codehaus.jackson.util.BufferRecycler $r5;
        org.codehaus.jackson.JsonGenerator $r6;
        byte[] $r7;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: java.lang.Object;

        r2 = new org.codehaus.jackson.util.ByteArrayBuilder;

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke r2.<org.codehaus.jackson.util.ByteArrayBuilder: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r5);

        $r4 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r3 = <org.codehaus.jackson.JsonEncoding: org.codehaus.jackson.JsonEncoding UTF8>;

        $r6 = virtualinvoke $r4.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)>(r2, $r3);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r6, $r1);

        $r7 = virtualinvoke r2.<org.codehaus.jackson.util.ByteArrayBuilder: byte[] toByteArray()>();

        virtualinvoke r2.<org.codehaus.jackson.util.ByteArrayBuilder: void release()>();

        return $r7;
    }

    public java.lang.String writeValueAsString(java.lang.Object) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException, org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ObjectWriter r0;
        java.lang.Object $r1;
        org.codehaus.jackson.io.SegmentedStringWriter r2;
        org.codehaus.jackson.JsonFactory $r3;
        org.codehaus.jackson.util.BufferRecycler $r4;
        org.codehaus.jackson.JsonGenerator $r5;
        java.lang.String $r6;

        r0 := @this: org.codehaus.jackson.map.ObjectWriter;

        $r1 := @parameter0: java.lang.Object;

        r2 = new org.codehaus.jackson.io.SegmentedStringWriter;

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.util.BufferRecycler _getBufferRecycler()>();

        specialinvoke r2.<org.codehaus.jackson.io.SegmentedStringWriter: void <init>(org.codehaus.jackson.util.BufferRecycler)>($r4);

        $r3 = r0.<org.codehaus.jackson.map.ObjectWriter: org.codehaus.jackson.JsonFactory _jsonFactory>;

        $r5 = virtualinvoke $r3.<org.codehaus.jackson.JsonFactory: org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)>(r2);

        virtualinvoke r0.<org.codehaus.jackson.map.ObjectWriter: void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)>($r5, $r1);

        $r6 = virtualinvoke r2.<org.codehaus.jackson.io.SegmentedStringWriter: java.lang.String getAndClear()>();

        return $r6;
    }
}
