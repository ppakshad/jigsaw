public final class org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer extends org.codehaus.jackson.map.ser.impl.StaticListSerializerBase implements org.codehaus.jackson.map.ResolvableSerializer
{
    protected org.codehaus.jackson.map.JsonSerializer _serializer;

    public void <init>(org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        org.codehaus.jackson.map.BeanProperty $r1;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.StaticListSerializerBase: void <init>(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/util/List;", $r1);

        return;
    }

    private final void serializeContents(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        java.util.List r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        java.lang.Exception $r4;
        int i0, $i1;
        java.lang.Object $r5;
        java.lang.String r6;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

     label02:
        if i0 >= $i1 goto label10;

     label03:
        $r5 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r6 = (java.lang.String) $r5;

     label04:
        if r6 != null goto label07;

     label05:
        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r2);

     label06:
        i0 = i0 + 1;

        goto label02;

     label07:
        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>(r6);

     label08:
        goto label06;

     label09:
        $r4 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r4, r1, i0);

     label10:
        return;

        catch java.lang.Exception from label01 to label02 with label09;
        catch java.lang.Exception from label03 to label04 with label09;
        catch java.lang.Exception from label05 to label06 with label09;
        catch java.lang.Exception from label07 to label08 with label09;
    }

    private final void serializeUsingCustom(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        java.util.List r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.JsonSerializer r4;
        java.lang.Exception $r5;
        int i0, $i1;
        java.lang.Object $r6;
        java.lang.String r7;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        i0 = 0;

     label01:
        $i1 = interfaceinvoke r1.<java.util.List: int size()>();

        r4 = r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

     label02:
        i0 = 0;

     label03:
        if i0 >= $i1 goto label11;

     label04:
        $r6 = interfaceinvoke r1.<java.util.List: java.lang.Object get(int)>(i0);

        r7 = (java.lang.String) $r6;

     label05:
        if r7 != null goto label08;

     label06:
        virtualinvoke $r3.<org.codehaus.jackson.map.SerializerProvider: void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)>($r2);

     label07:
        i0 = i0 + 1;

        goto label03;

     label08:
        virtualinvoke r4.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r7, $r2, $r3);

     label09:
        goto label07;

     label10:
        $r5 := @caughtexception;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>($r3, $r5, r1, i0);

     label11:
        return;

        catch java.lang.Exception from label01 to label02 with label10;
        catch java.lang.Exception from label04 to label05 with label10;
        catch java.lang.Exception from label06 to label07 with label10;
        catch java.lang.Exception from label08 to label09 with label10;
    }

    protected org.codehaus.jackson.JsonNode contentSchema()
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        org.codehaus.jackson.node.ObjectNode $r1;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);

        return $r1;
    }

    public void resolve(org.codehaus.jackson.map.SerializerProvider) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        org.codehaus.jackson.map.SerializerProvider $r1;
        org.codehaus.jackson.map.BeanProperty $r2;
        org.codehaus.jackson.map.JsonSerializer $r3;
        boolean $z0;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializerProvider;

        $r2 = r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.map.BeanProperty _property>;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(class "Ljava/lang/String;", $r2);

        $z0 = virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer)>($r3);

        if $z0 != 0 goto label1;

        r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer> = $r3;

     label1:
        return;
    }

    public volatile void serialize(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        java.lang.Object $r3;
        java.util.List $r4;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        $r3 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 = (java.util.List) $r3;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serialize(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r4, $r1, $r2);

        return;
    }

    public void serialize(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        java.util.List r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.JsonSerializer $r4;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        $r4 = r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r4 != null goto label2;

        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, $r2, $r3);

     label1:
        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        return;

     label2:
        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, $r2, $r3);

        goto label1;
    }

    public volatile void serializeWithType(java.lang.Object, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.SerializerProvider $r2;
        org.codehaus.jackson.map.TypeSerializer $r3;
        java.lang.Object $r4;
        java.util.List $r5;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        $r4 := @parameter0: java.lang.Object;

        $r1 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r2 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r3 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        $r5 = (java.util.List) $r4;

        virtualinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeWithType(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)>($r5, $r1, $r2, $r3);

        return;
    }

    public void serializeWithType(java.util.List, org.codehaus.jackson.JsonGenerator, org.codehaus.jackson.map.SerializerProvider, org.codehaus.jackson.map.TypeSerializer) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException
    {
        org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer r0;
        java.util.List r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.SerializerProvider $r3;
        org.codehaus.jackson.map.TypeSerializer $r4;
        org.codehaus.jackson.map.JsonSerializer $r5;

        r0 := @this: org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer;

        r1 := @parameter0: java.util.List;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        $r3 := @parameter2: org.codehaus.jackson.map.SerializerProvider;

        $r4 := @parameter3: org.codehaus.jackson.map.TypeSerializer;

        virtualinvoke $r4.<org.codehaus.jackson.map.TypeSerializer: void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, $r2);

        $r5 = r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: org.codehaus.jackson.map.JsonSerializer _serializer>;

        if $r5 != null goto label2;

        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, $r2, $r3);

     label1:
        virtualinvoke $r4.<org.codehaus.jackson.map.TypeSerializer: void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)>(r1, $r2);

        return;

     label2:
        specialinvoke r0.<org.codehaus.jackson.map.ser.impl.IndexedStringListSerializer: void serializeUsingCustom(java.util.List,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(r1, $r2, $r3);

        goto label1;
    }
}
