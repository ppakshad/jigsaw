public class org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer extends org.codehaus.jackson.map.deser.StdScalarDeserializer
{

    public void <init>()
    {
        org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/math/BigDecimal;");

        return;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.math.BigDecimal $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.math.BigDecimal deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.JsonToken $r3, $r4;
        java.math.BigDecimal $r5;
        java.lang.String $r6;
        int $i0;
        java.lang.Throwable $r7;
        java.lang.Class $r8;
        org.codehaus.jackson.map.JsonMappingException $r9;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken getCurrentToken()>();

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_INT>;

        if $r3 == $r4 goto label1;

        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NUMBER_FLOAT>;

        if $r3 != $r4 goto label2;

     label1:
        $r5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.math.BigDecimal getDecimalValue()>();

        return $r5;

     label2:
        $r4 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_STRING>;

        if $r3 != $r4 goto label7;

        $r6 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: java.lang.String getText()>();

        $r6 = virtualinvoke $r6.<java.lang.String: java.lang.String trim()>();

        $i0 = virtualinvoke $r6.<java.lang.String: int length()>();

        if $i0 != 0 goto label3;

        return null;

     label3:
        $r5 = new java.math.BigDecimal;

     label4:
        specialinvoke $r5.<java.math.BigDecimal: void <init>(java.lang.String)>($r6);

     label5:
        return $r5;

     label6:
        $r7 := @caughtexception;

        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException weirdStringException(java.lang.Class,java.lang.String)>($r8, "not a valid representation");

        throw $r9;

     label7:
        $r8 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$BigDecimalDeserializer: java.lang.Class _valueClass>;

        $r9 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r8);

        throw $r9;

        catch java.lang.IllegalArgumentException from label4 to label5 with label6;
    }
}
