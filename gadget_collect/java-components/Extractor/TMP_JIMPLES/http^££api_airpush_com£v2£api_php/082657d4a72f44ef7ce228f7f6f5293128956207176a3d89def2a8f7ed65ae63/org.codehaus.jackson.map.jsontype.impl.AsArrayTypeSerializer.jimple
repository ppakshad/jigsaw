public class org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer extends org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase
{

    public void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver, org.codehaus.jackson.map.BeanProperty)
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r1;
        org.codehaus.jackson.map.BeanProperty $r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: org.codehaus.jackson.map.jsontype.TypeIdResolver;

        $r2 := @parameter1: org.codehaus.jackson.map.BeanProperty;

        specialinvoke r0.<org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase: void <init>(org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)>($r1, $r2);

        return;
    }

    public org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        org.codehaus.jackson.annotate.JsonTypeInfo$As r1;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        r1 = <org.codehaus.jackson.annotate.JsonTypeInfo$As: org.codehaus.jackson.annotate.JsonTypeInfo$As WRAPPER_ARRAY>;

        return r1;
    }

    public void writeTypePrefixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        $r4 = r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r3 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>($r1);

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r3);

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        return;
    }

    public void writeTypePrefixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        $r4 = r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r3 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>($r1);

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r3);

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartObject()>();

        return;
    }

    public void writeTypePrefixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;
        java.lang.String $r3;
        org.codehaus.jackson.map.jsontype.TypeIdResolver $r4;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeStartArray()>();

        $r4 = r0.<org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer: org.codehaus.jackson.map.jsontype.TypeIdResolver _idResolver>;

        $r3 = interfaceinvoke $r4.<org.codehaus.jackson.map.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>($r1);

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeString(java.lang.String)>($r3);

        return;
    }

    public void writeTypeSuffixForArray(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        return;
    }

    public void writeTypeSuffixForObject(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndObject()>();

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        return;
    }

    public void writeTypeSuffixForScalar(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;

        r0 := @this: org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r2.<org.codehaus.jackson.JsonGenerator: void writeEndArray()>();

        return;
    }
}
