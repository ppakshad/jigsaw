public final class org.codehaus.jackson.map.deser.EnumSetDeserializer extends org.codehaus.jackson.map.deser.StdDeserializer
{
    final java.lang.Class _enumClass;
    final org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer;

    public void <init>(org.codehaus.jackson.map.deser.EnumResolver)
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.map.deser.EnumResolver $r1;
        java.lang.Class $r2;
        org.codehaus.jackson.map.deser.EnumDeserializer $r3;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.map.deser.EnumResolver;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/EnumSet;");

        $r3 = new org.codehaus.jackson.map.deser.EnumDeserializer;

        specialinvoke $r3.<org.codehaus.jackson.map.deser.EnumDeserializer: void <init>(org.codehaus.jackson.map.deser.EnumResolver)>($r1);

        r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer> = $r3;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.deser.EnumResolver: java.lang.Class getEnumClass()>();

        r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass> = $r2;

        return;
    }

    private java.util.EnumSet constructSet()
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        java.util.EnumSet $r1;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r2 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass>;

        $r1 = staticinvoke <java.util.EnumSet: java.util.EnumSet noneOf(java.lang.Class)>($r2);

        return $r1;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.EnumSet $r3;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.util.EnumSet deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        boolean $z0;
        org.codehaus.jackson.map.JsonMappingException $r3;
        java.util.EnumSet $r4;
        org.codehaus.jackson.JsonToken $r5, $r6;
        java.lang.Class $r7;
        org.codehaus.jackson.map.deser.EnumDeserializer $r8;
        java.lang.Enum $r9;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $z0 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: boolean isExpectedStartArrayToken()>();

        if $z0 != 0 goto label1;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>(class "Ljava/util/EnumSet;");

        throw $r3;

     label1:
        $r4 = specialinvoke r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.util.EnumSet constructSet()>();

     label2:
        $r5 = virtualinvoke $r1.<org.codehaus.jackson.JsonParser: org.codehaus.jackson.JsonToken nextToken()>();

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken END_ARRAY>;

        if $r5 == $r6 goto label4;

        $r6 = <org.codehaus.jackson.JsonToken: org.codehaus.jackson.JsonToken VALUE_NULL>;

        if $r5 != $r6 goto label3;

        $r7 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: java.lang.Class _enumClass>;

        $r3 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException mappingException(java.lang.Class)>($r7);

        throw $r3;

     label3:
        $r8 = r0.<org.codehaus.jackson.map.deser.EnumSetDeserializer: org.codehaus.jackson.map.deser.EnumDeserializer _enumDeserializer>;

        $r9 = virtualinvoke $r8.<org.codehaus.jackson.map.deser.EnumDeserializer: java.lang.Enum deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        virtualinvoke $r4.<java.util.EnumSet: boolean add(java.lang.Object)>($r9);

        goto label2;

     label4:
        return $r4;
    }

    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext, org.codehaus.jackson.map.TypeDeserializer) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.EnumSetDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        org.codehaus.jackson.map.TypeDeserializer $r3;
        java.lang.Object $r4;

        r0 := @this: org.codehaus.jackson.map.deser.EnumSetDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 := @parameter2: org.codehaus.jackson.map.TypeDeserializer;

        $r4 = virtualinvoke $r3.<org.codehaus.jackson.map.TypeDeserializer: java.lang.Object deserializeTypedFromArray(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r4;
    }
}
