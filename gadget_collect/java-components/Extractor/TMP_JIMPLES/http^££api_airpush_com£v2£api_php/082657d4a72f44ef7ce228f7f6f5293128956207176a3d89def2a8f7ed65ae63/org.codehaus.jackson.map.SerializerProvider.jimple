public abstract class org.codehaus.jackson.map.SerializerProvider extends java.lang.Object
{
    protected static final org.codehaus.jackson.type.JavaType TYPE_OBJECT;
    protected final org.codehaus.jackson.map.SerializationConfig _config;
    protected final java.lang.Class _serializationView;

    static void <clinit>()
    {
        org.codehaus.jackson.type.JavaType $r0;

        $r0 = staticinvoke <org.codehaus.jackson.map.type.TypeFactory: org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type)>(class "Ljava/lang/Object;");

        <org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.type.JavaType TYPE_OBJECT> = $r0;

        return;
    }

    protected void <init>(org.codehaus.jackson.map.SerializationConfig)
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.SerializationConfig $r1;
        java.lang.Class $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig _config> = $r1;

        if $r1 != null goto label2;

        $r2 = null;

     label1:
        r0.<org.codehaus.jackson.map.SerializerProvider: java.lang.Class _serializationView> = $r2;

        return;

     label2:
        $r1 = r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig _config>;

        $r2 = virtualinvoke $r1.<org.codehaus.jackson.map.SerializationConfig: java.lang.Class getSerializationView()>();

        goto label1;
    }

    public abstract int cachedSerializersCount();

    public abstract void defaultSerializeDateValue(long, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public abstract void defaultSerializeDateValue(java.util.Date, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException;

    public final void defaultSerializeField(java.lang.String, java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.String $r1;
        java.lang.Object $r2;
        org.codehaus.jackson.JsonGenerator $r3;
        org.codehaus.jackson.map.JsonSerializer $r4;
        java.lang.Class $r5;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.Object;

        $r3 := @parameter2: org.codehaus.jackson.JsonGenerator;

        virtualinvoke $r3.<org.codehaus.jackson.JsonGenerator: void writeFieldName(java.lang.String)>($r1);

        if $r2 != null goto label1;

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()>();

        virtualinvoke $r4.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(null, $r3, r0);

        return;

     label1:
        $r5 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();

        $r4 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean)>($r5, 1);

        virtualinvoke $r4.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r2, $r3, r0);

        return;
    }

    public final void defaultSerializeNull(org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.JsonGenerator $r1;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: org.codehaus.jackson.JsonGenerator;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()>();

        virtualinvoke $r2.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(null, $r1, r0);

        return;
    }

    public final void defaultSerializeValue(java.lang.Object, org.codehaus.jackson.JsonGenerator) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Object $r1;
        org.codehaus.jackson.JsonGenerator $r2;
        org.codehaus.jackson.map.JsonSerializer $r3;
        java.lang.Class $r4;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: java.lang.Object;

        $r2 := @parameter1: org.codehaus.jackson.JsonGenerator;

        if $r1 != null goto label1;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()>();

        virtualinvoke $r3.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>(null, $r2, r0);

        return;

     label1:
        $r4 = virtualinvoke $r1.<java.lang.Object: java.lang.Class getClass()>();

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean)>($r4, 1);

        virtualinvoke $r3.<org.codehaus.jackson.map.JsonSerializer: void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)>($r1, $r2, r0);

        return;
    }

    public final org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class, boolean) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Class r1;
        boolean $z0;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty)>(r1, $z0, null);

        return $r2;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class, boolean, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException;

    public final org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType, boolean) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.type.JavaType $r1;
        boolean $z0;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $z0 := @parameter1: boolean;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty)>($r1, $z0, null);

        return $r2;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType, boolean, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException;

    public final org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Class r1;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        r1 := @parameter0: java.lang.Class;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)>(r1, null);

        return $r2;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException;

    public final org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType) throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.type.JavaType $r1;
        org.codehaus.jackson.map.JsonSerializer $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: org.codehaus.jackson.type.JavaType;

        $r2 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r1, null);

        return $r2;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException;

    public abstract void flushCachedSerializers();

    public abstract org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class, org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.map.SerializerFactory) throws org.codehaus.jackson.map.JsonMappingException;

    public final org.codehaus.jackson.map.SerializationConfig getConfig()
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.SerializationConfig r1;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        r1 = r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig _config>;

        return r1;
    }

    public final org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.ser.FilterProvider $r1;
        org.codehaus.jackson.map.SerializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r2 = r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig _config>;

        $r1 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()>();

        return $r1;
    }

    public final org.codehaus.jackson.map.JsonSerializer getKeySerializer() throws org.codehaus.jackson.map.JsonMappingException
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.JsonSerializer $r1;
        org.codehaus.jackson.type.JavaType $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r2 = <org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.type.JavaType TYPE_OBJECT>;

        $r1 = virtualinvoke r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)>($r2, null);

        return $r1;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.BeanProperty) throws org.codehaus.jackson.map.JsonMappingException;

    public abstract org.codehaus.jackson.map.JsonSerializer getNullKeySerializer();

    public abstract org.codehaus.jackson.map.JsonSerializer getNullValueSerializer();

    public final java.lang.Class getSerializationView()
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        r1 = r0.<org.codehaus.jackson.map.SerializerProvider: java.lang.Class _serializationView>;

        return r1;
    }

    public abstract org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class);

    public abstract boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig, java.lang.Class, org.codehaus.jackson.map.SerializerFactory);

    public final boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)
    {
        org.codehaus.jackson.map.SerializerProvider r0;
        org.codehaus.jackson.map.SerializationConfig$Feature $r1;
        boolean $z0;
        org.codehaus.jackson.map.SerializationConfig $r2;

        r0 := @this: org.codehaus.jackson.map.SerializerProvider;

        $r1 := @parameter0: org.codehaus.jackson.map.SerializationConfig$Feature;

        $r2 = r0.<org.codehaus.jackson.map.SerializerProvider: org.codehaus.jackson.map.SerializationConfig _config>;

        $z0 = virtualinvoke $r2.<org.codehaus.jackson.map.SerializationConfig: boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)>($r1);

        return $z0;
    }

    public abstract void serializeValue(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.map.SerializerFactory) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;

    public abstract void serializeValue(org.codehaus.jackson.map.SerializationConfig, org.codehaus.jackson.JsonGenerator, java.lang.Object, org.codehaus.jackson.type.JavaType, org.codehaus.jackson.map.SerializerFactory) throws java.io.IOException, org.codehaus.jackson.JsonGenerationException;
}
