public class org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer extends org.codehaus.jackson.map.deser.StdScalarDeserializer
{
    java.lang.Class _calendarClass;

    public void <init>()
    {
        org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer r0;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: void <init>(java.lang.Class)>(null);

        return;
    }

    public void <init>(java.lang.Class)
    {
        org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer r0;
        java.lang.Class r1;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        r1 := @parameter0: java.lang.Class;

        specialinvoke r0.<org.codehaus.jackson.map.deser.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/Calendar;");

        r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.lang.Class _calendarClass> = r1;

        return;
    }

    public volatile java.lang.Object deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Calendar $r3;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.util.Calendar deserialize(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        return $r3;
    }

    public java.util.Calendar deserialize(org.codehaus.jackson.JsonParser, org.codehaus.jackson.map.DeserializationContext) throws java.io.IOException, org.codehaus.jackson.JsonProcessingException
    {
        org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer r0;
        org.codehaus.jackson.JsonParser $r1;
        org.codehaus.jackson.map.DeserializationContext $r2;
        java.util.Date $r3;
        java.lang.Class $r4;
        java.util.Calendar $r5;
        java.lang.Object $r6;
        long $l0;
        java.lang.Exception $r7;
        org.codehaus.jackson.map.JsonMappingException $r8;

        r0 := @this: org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer;

        $r1 := @parameter0: org.codehaus.jackson.JsonParser;

        $r2 := @parameter1: org.codehaus.jackson.map.DeserializationContext;

        $r3 = virtualinvoke r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.util.Date _parseDate(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext)>($r1, $r2);

        if $r3 != null goto label1;

        return null;

     label1:
        $r4 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.lang.Class _calendarClass>;

        if $r4 != null goto label2;

        $r5 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>($r3);

        return $r5;

     label2:
        $r4 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.lang.Class _calendarClass>;

        $r6 = virtualinvoke $r4.<java.lang.Class: java.lang.Object newInstance()>();

        $r5 = (java.util.Calendar) $r6;

        $l0 = virtualinvoke $r3.<java.util.Date: long getTime()>();

        virtualinvoke $r5.<java.util.Calendar: void setTimeInMillis(long)>($l0);

     label3:
        return $r5;

     label4:
        $r7 := @caughtexception;

        $r4 = r0.<org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer: java.lang.Class _calendarClass>;

        $r8 = virtualinvoke $r2.<org.codehaus.jackson.map.DeserializationContext: org.codehaus.jackson.map.JsonMappingException instantiationException(java.lang.Class,java.lang.Exception)>($r4, $r7);

        throw $r8;

        catch java.lang.Exception from label2 to label3 with label4;
    }
}
