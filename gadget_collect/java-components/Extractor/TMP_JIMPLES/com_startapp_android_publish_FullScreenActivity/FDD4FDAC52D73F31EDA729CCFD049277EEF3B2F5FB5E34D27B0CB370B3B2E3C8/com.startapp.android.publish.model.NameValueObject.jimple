public class com.startapp.android.publish.model.NameValueObject extends java.lang.Object
{
    private java.lang.String name;
    private java.lang.String value;
    private java.util.Set valueSet;

    public void <init>()
    {
        com.startapp.android.publish.model.NameValueObject r0;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public java.lang.String getName()
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.lang.String r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        r1 = r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String name>;

        return r1;
    }

    public java.lang.String getValue()
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.lang.String r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        r1 = r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String value>;

        return r1;
    }

    public java.util.Set getValueSet()
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.util.Set r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        r1 = r0.<com.startapp.android.publish.model.NameValueObject: java.util.Set valueSet>;

        return r1;
    }

    public void setName(java.lang.String)
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.lang.String $r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        $r1 := @parameter0: java.lang.String;

        r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String name> = $r1;

        return;
    }

    public void setValue(java.lang.String)
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.lang.String $r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        $r1 := @parameter0: java.lang.String;

        r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String value> = $r1;

        return;
    }

    public void setValueSet(java.util.Set)
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.util.Set r1;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        r1 := @parameter0: java.util.Set;

        r0.<com.startapp.android.publish.model.NameValueObject: java.util.Set valueSet> = r1;

        return;
    }

    public java.lang.String toString()
    {
        com.startapp.android.publish.model.NameValueObject r0;
        java.lang.StringBuilder $r1;
        java.lang.String $r2;
        java.util.Set $r3;

        r0 := @this: com.startapp.android.publish.model.NameValueObject;

        $r1 = new java.lang.StringBuilder;

        specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("NameValueObject [name=");

        $r2 = r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String name>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", value=");

        $r2 = r0.<com.startapp.android.publish.model.NameValueObject: java.lang.String value>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", valueSet=");

        $r3 = r0.<com.startapp.android.publish.model.NameValueObject: java.util.Set valueSet>;

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3);

        $r1 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");

        $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.String toString()>();

        return $r2;
    }
}
