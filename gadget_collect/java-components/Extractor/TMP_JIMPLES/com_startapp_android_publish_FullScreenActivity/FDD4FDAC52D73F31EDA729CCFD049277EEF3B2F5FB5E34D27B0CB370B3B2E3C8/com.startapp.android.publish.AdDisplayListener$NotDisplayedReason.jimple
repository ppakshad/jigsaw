public final enum class com.startapp.android.publish.AdDisplayListener$NotDisplayedReason extends java.lang.Enum
{
    private static final com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] $VALUES;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_CLOSED_TOO_QUICKLY;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_EXPIRED;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY_VIDEO_FALLBACK;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_RULES;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason APP_IN_BACKGROUND;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason INTERNAL_ERROR;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason NETWORK_PROBLEM;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_BACK;
    public static final enum com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_ERROR;

    static void <clinit>()
    {
        com.startapp.android.publish.AdDisplayListener$NotDisplayedReason $r0;
        com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] $r1;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("NETWORK_PROBLEM", 0);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason NETWORK_PROBLEM> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("AD_RULES", 1);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_RULES> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("AD_NOT_READY", 2);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("AD_EXPIRED", 3);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_EXPIRED> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("VIDEO_BACK", 4);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_BACK> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("VIDEO_ERROR", 5);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_ERROR> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("INTERNAL_ERROR", 6);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason INTERNAL_ERROR> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("AD_NOT_READY_VIDEO_FALLBACK", 7);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY_VIDEO_FALLBACK> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("APP_IN_BACKGROUND", 8);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason APP_IN_BACKGROUND> = $r0;

        $r0 = new com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        specialinvoke $r0.<com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: void <init>(java.lang.String,int)>("AD_CLOSED_TOO_QUICKLY", 9);

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_CLOSED_TOO_QUICKLY> = $r0;

        $r1 = newarray (com.startapp.android.publish.AdDisplayListener$NotDisplayedReason)[10];

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason NETWORK_PROBLEM>;

        $r1[0] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_RULES>;

        $r1[1] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY>;

        $r1[2] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_EXPIRED>;

        $r1[3] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_BACK>;

        $r1[4] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason VIDEO_ERROR>;

        $r1[5] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason INTERNAL_ERROR>;

        $r1[6] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_NOT_READY_VIDEO_FALLBACK>;

        $r1[7] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason APP_IN_BACKGROUND>;

        $r1[8] = $r0;

        $r0 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason AD_CLOSED_TOO_QUICKLY>;

        $r1[9] = $r0;

        <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] $VALUES> = $r1;

        return;
    }

    private void <init>(java.lang.String, int)
    {
        com.startapp.android.publish.AdDisplayListener$NotDisplayedReason r0;
        java.lang.String $r1;
        int $i0;

        r0 := @this: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason;

        $r1 := @parameter0: java.lang.String;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.lang.Enum: void <init>(java.lang.String,int)>($r1, $i0);

        return;
    }

    public static com.startapp.android.publish.AdDisplayListener$NotDisplayedReason valueOf(java.lang.String)
    {
        java.lang.String $r0;
        java.lang.Enum $r1;
        com.startapp.android.publish.AdDisplayListener$NotDisplayedReason $r2;

        $r0 := @parameter0: java.lang.String;

        $r1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/startapp/android/publish/AdDisplayListener$NotDisplayedReason;", $r0);

        $r2 = (com.startapp.android.publish.AdDisplayListener$NotDisplayedReason) $r1;

        return $r2;
    }

    public static com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] values()
    {
        java.lang.Object $r0;
        com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] $r1;

        $r1 = <com.startapp.android.publish.AdDisplayListener$NotDisplayedReason: com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[] $VALUES>;

        $r0 = virtualinvoke $r1.<java.lang.Object: java.lang.Object clone()>();

        $r1 = (com.startapp.android.publish.AdDisplayListener$NotDisplayedReason[]) $r0;

        return $r1;
    }
}
