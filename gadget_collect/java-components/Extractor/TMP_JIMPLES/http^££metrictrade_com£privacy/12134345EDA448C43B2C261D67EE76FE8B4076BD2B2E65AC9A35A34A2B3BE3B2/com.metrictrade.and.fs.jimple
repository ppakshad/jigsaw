public final class com.metrictrade.and.fs extends java.lang.Object implements com.metrictrade.and.dd
{
    public static int[][] K;
    public boolean A;
    public int B;
    public double[][] C;
    com.metrictrade.and.am D;
    public com.metrictrade.and.fs E;
    public java.lang.String F;
    public double[] G;
    public double H;
    public double I;
    public com.metrictrade.and.fp J;
    private java.lang.String[] L;
    private char[][][] M;
    public java.lang.String a;
    public java.lang.String b;
    public int c;
    public int d;
    public int e;
    public boolean f;
    public boolean g;
    public int h;
    public double[][] i;
    public double j;
    public double k;
    public int l;
    public int m;
    public boolean n;
    public int o;
    public int p;
    public int q;
    public int r;
    public int s;
    public boolean t;
    public int u;
    public int v;
    public int w;
    public com.metrictrade.and.dd x;
    public int y;
    public int z;

    static void <clinit>()
    {
        int[][] $r0;
        int[] $r1;

        $r0 = newarray (int[])[4];

        $r1 = newarray (int)[37];

        $r1[0] = 101;

        $r1[1] = 102;

        $r1[2] = 103;

        $r1[3] = 104;

        $r1[4] = 105;

        $r1[5] = 106;

        $r1[6] = 107;

        $r1[7] = 108;

        $r1[8] = 109;

        $r1[9] = 110;

        $r1[10] = 111;

        $r1[11] = 112;

        $r1[12] = 113;

        $r1[13] = 114;

        $r1[14] = 115;

        $r1[15] = 116;

        $r1[16] = 121;

        $r1[17] = 122;

        $r1[18] = 123;

        $r1[19] = 124;

        $r1[20] = 125;

        $r1[21] = 126;

        $r1[22] = 127;

        $r1[23] = 131;

        $r1[24] = 132;

        $r1[25] = 133;

        $r1[26] = 134;

        $r1[27] = 135;

        $r1[28] = 136;

        $r1[29] = 137;

        $r1[30] = 141;

        $r1[31] = 142;

        $r1[32] = 143;

        $r1[33] = 144;

        $r1[34] = 145;

        $r1[35] = 146;

        $r1[36] = 147;

        $r0[0] = $r1;

        $r1 = newarray (int)[30];

        $r1[0] = 200;

        $r1[1] = 202;

        $r1[2] = 204;

        $r1[3] = 205;

        $r1[4] = 226;

        $r1[5] = 227;

        $r1[6] = 221;

        $r1[7] = 222;

        $r1[8] = 223;

        $r1[9] = 224;

        $r1[10] = 225;

        $r1[11] = 228;

        $r1[12] = 229;

        $r1[13] = 231;

        $r1[14] = 232;

        $r1[15] = 233;

        $r1[16] = 234;

        $r1[17] = 235;

        $r1[18] = 236;

        $r1[19] = 237;

        $r1[20] = 238;

        $r1[21] = 210;

        $r1[22] = 211;

        $r1[23] = 212;

        $r1[24] = 213;

        $r1[25] = 214;

        $r1[26] = 279;

        $r1[27] = 280;

        $r1[28] = 281;

        $r1[29] = 290;

        $r0[1] = $r1;

        $r1 = newarray (int)[12];

        $r1[0] = 301;

        $r1[1] = 302;

        $r1[2] = 303;

        $r1[3] = 304;

        $r1[4] = 305;

        $r1[5] = 306;

        $r1[6] = 307;

        $r1[7] = 308;

        $r1[8] = 309;

        $r1[9] = 310;

        $r1[10] = 311;

        $r1[11] = 312;

        $r0[2] = $r1;

        $r1 = newarray (int)[19];

        $r1[0] = 401;

        $r1[1] = 402;

        $r1[2] = 403;

        $r1[3] = 404;

        $r1[4] = 405;

        $r1[5] = 406;

        $r1[6] = 407;

        $r1[7] = 408;

        $r1[8] = 409;

        $r1[9] = 410;

        $r1[10] = 411;

        $r1[11] = 412;

        $r1[12] = 413;

        $r1[13] = 414;

        $r1[14] = 415;

        $r1[15] = 416;

        $r1[16] = 417;

        $r1[17] = 418;

        $r1[18] = 419;

        $r0[3] = $r1;

        <com.metrictrade.and.fs: int[][] K> = $r0;

        return;
    }

    public void <init>()
    {
        com.metrictrade.and.fs r0;
        com.metrictrade.and.am $r3;
        com.metrictrade.and.eo $r1;
        int $i0;
        double[][] $r2;

        r0 := @this: com.metrictrade.and.fs;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.metrictrade.and.fs: java.lang.String a> = null;

        $r1 = <com.metrictrade.and.eo: com.metrictrade.and.eo a>;

        $i0 = $r1.<com.metrictrade.and.eo: int o>;

        r0.<com.metrictrade.and.fs: int c> = $i0;

        r0.<com.metrictrade.and.fs: int o> = -1;

        staticinvoke <com.metrictrade.and.fj: java.util.Calendar c()>();

        $r3 = new com.metrictrade.and.am;

        specialinvoke $r3.<com.metrictrade.and.am: void <init>()>();

        r0.<com.metrictrade.and.fs: com.metrictrade.and.am D> = $r3;

        $r2 = newarray (double[])[32];

        r0.<com.metrictrade.and.fs: double[][] i> = $r2;

        r0.<com.metrictrade.and.fs: int u> = 1;

        r0.<com.metrictrade.and.fs: int v> = 1;

        return;
    }

    public void <init>(com.metrictrade.and.fr, java.lang.String, int)
    {
        com.metrictrade.and.fs r0;
        com.metrictrade.and.fr $r1;
        int $i0;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fr;

        $r2 := @parameter1: java.lang.String;

        $i0 := @parameter2: int;

        specialinvoke r0.<com.metrictrade.and.fs: void <init>()>();

        if $r1 == null goto label1;

        r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x> = $r1;

        r0.<com.metrictrade.and.fs: java.lang.String a> = $r2;

        r0.<com.metrictrade.and.fs: int o> = $i0;

        staticinvoke <com.metrictrade.and.fr: double v()>();

        specialinvoke r0.<com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fr)>($r1);

     label1:
        return;
    }

    public void <init>(double[], double[])
    {
        double[] $r1, $r2;
        com.metrictrade.and.fs r0;
        byte $b3;
        int $i0, $i1, $i2;
        double[][] $r3;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: double[];

        $r2 := @parameter1: double[];

        $i0 = 0;

        specialinvoke r0.<com.metrictrade.and.fs: void <init>()>();

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3[0] = $r2;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3[1] = $r1;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r3[0];

        $i1 = 0;

     label1:
        if $r1 == null goto label2;

        $i2 = lengthof $r1;

        if $i1 < $i2 goto label3;

     label2:
        r0.<com.metrictrade.and.fs: int h> = $i0;

        r0.<com.metrictrade.and.fs: boolean f> = 1;

        return;

     label3:
        $d0 = $r1[$i1];

        $d1 = $r1[$i1];

        $b3 = $d0 cmpl $d1;

        if $b3 != 0 goto label4;

        $i0 = $i0 + 1;

     label4:
        $i1 = $i1 + 1;

        goto label1;
    }

    private void <init>(char[][][], double[][], double[], int)
    {
        com.metrictrade.and.fs r0;
        double[] $r3, $r4;
        int $i0;
        double[][] $r2;
        char[][][] $r1;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: char[][][];

        $r2 := @parameter1: double[][];

        $r3 := @parameter2: double[];

        $i0 := @parameter3: int;

        $r4 = $r2[0];

        specialinvoke r0.<com.metrictrade.and.fs: void <init>(double[],double[])>($r4, $r3);

        r0.<com.metrictrade.and.fs: char[][][] M> = $r1;

        r0.<com.metrictrade.and.fs: double[][] C> = $r2;

        virtualinvoke r0.<com.metrictrade.and.fs: void a(int)>(0);

        return;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.dj, int[], int[], boolean, com.metrictrade.and.fs)
    {
        double[] $r7, $r8;
        com.metrictrade.and.fs $r3;
        int[] $r1, $r2;
        int $i0, $i1, $i2;
        com.metrictrade.and.dj $r0;
        double[][] $r4, $r6;
        boolean $z0;
        char[][][] $r5;
        double $d0;

        $r0 := @parameter0: com.metrictrade.and.dj;

        $r1 := @parameter1: int[];

        $r2 := @parameter2: int[];

        $z0 := @parameter3: boolean;

        $r3 := @parameter4: com.metrictrade.and.fs;

        $i0 = $r0.<com.metrictrade.and.dj: int aa>;

        if $r3 == null goto label13;

        $r4 = $r3.<com.metrictrade.and.fs: double[][] C>;

        $r5 = $r3.<com.metrictrade.and.fs: char[][][] M>;

        $r6 = $r3.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r6[0];

     label01:
        if $r4 == null goto label02;

        $i1 = lengthof $r4;

        $i2 = lengthof $r2;

        if $i1 >= $i2 goto label03;

     label02:
        $i1 = lengthof $r2;

        $r4 = newarray (double[])[$i1];

     label03:
        if $r5 == null goto label04;

        $i1 = lengthof $r5;

        $i2 = lengthof $r1;

        if $i1 >= $i2 goto label05;

     label04:
        $i1 = lengthof $r1;

        $r5 = newarray (char[][])[$i1];

     label05:
        $i0 = virtualinvoke $r0.<com.metrictrade.and.dj: int a(char[][][],double[][],int[],int[],int,boolean,int,boolean)>($r5, $r4, $r1, $r2, 0, $z0, $i0, 0);

        if $i0 > 0 goto label06;

        return null;

     label06:
        if $r7 == null goto label07;

        $i1 = lengthof $r7;

        if $i1 >= $i0 goto label12;

     label07:
        $r7 = newarray (double)[$i0];

     label08:
        $i1 = 0;

     label09:
        if $i1 < $i0 goto label10;

        if $r3 != null goto label11;

        $r3 = new com.metrictrade.and.fs;

        specialinvoke $r3.<com.metrictrade.and.fs: void <init>(char[][][],double[][],double[],int)>($r5, $r4, $r7, 0);

        return $r3;

     label10:
        $d0 = (double) $i1;

        $r7[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label09;

     label11:
        $r3.<com.metrictrade.and.fs: char[][][] M> = $r5;

        $r3.<com.metrictrade.and.fs: double[][] C> = $r4;

        $r6 = $r3.<com.metrictrade.and.fs: double[][] i>;

        $r8 = $r4[0];

        $r6[1] = $r8;

        $r4 = $r3.<com.metrictrade.and.fs: double[][] i>;

        $r4[0] = $r7;

        $r3.<com.metrictrade.and.fs: int h> = $i0;

        virtualinvoke $r3.<com.metrictrade.and.fs: void a(int)>(0);

        return $r3;

     label12:
        goto label08;

     label13:
        $r5 = null;

        $r7 = null;

        $r4 = null;

        goto label01;
    }

    private com.metrictrade.and.fs a(com.metrictrade.and.fr)
    {
        double[] $r2, $r6;
        byte $b3, $b4;
        int $i0, $i1, $i2, $i5;
        double $d0, $d1, $d2;
        double[][][] $r4;
        com.metrictrade.and.fs r0;
        com.metrictrade.and.fr $r1;
        double[][] $r3, $r5, $r7;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fr;

        $i0 = 1;

        $i1 = 0;

        $i2 = r0.<com.metrictrade.and.fs: int o>;

        $r3 = virtualinvoke $r1.<com.metrictrade.and.fr: double[][] i(int)>($i2);

        if $r3 != null goto label01;

        return r0;

     label01:
        $i2 = r0.<com.metrictrade.and.fs: int o>;

        lookupswitch($i2)
        {
            case 0: goto label08;
            case 1: goto label09;
            case 2: goto label02;
            case 3: goto label02;
            case 4: goto label12;
            case 5: goto label12;
            case 6: goto label02;
            case 7: goto label09;
            case 8: goto label09;
            default: goto label02;
        };

     label02:
        $i2 = r0.<com.metrictrade.and.fs: int o>;

        if $i2 < 12 goto label32;

        $i2 = r0.<com.metrictrade.and.fs: int o>;

        if $i2 > 28 goto label32;

        $i2 = r0.<com.metrictrade.and.fs: int o>;

        if $i2 < 21 goto label21;

        $b3 = 1;

     label03:
        $i2 = r0.<com.metrictrade.and.fs: int o>;

        if $b3 != 0 goto label22;

        $b4 = 12;

     label04:
        $i2 = $i2 - $b4;

        $r4 = $r1.<com.metrictrade.and.fr: double[][][] W>;

        $r3 = $r4[$b3];

        $r2 = $r3[0];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3[0] = $r2;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r1.<com.metrictrade.and.fr: double[][][] W>;

        $r5 = $r4[$b3];

        $i2 = $i2 + 1;

        $r6 = $r5[$i2];

        $r3[1] = $r6;

        $d0 = 0.0;

        $i2 = 0;

     label05:
        if $r2 == null goto label06;

        $i5 = lengthof $r2;

        if $i2 < $i5 goto label23;

     label06:
        r0.<com.metrictrade.and.fs: int h> = $i2;

        if $i1 != 0 goto label30;

     label07:
        $d1 = (double) $i0;

        $d0 = $d0 / $d1;

        r0.<com.metrictrade.and.fs: double H> = $d0;

        return r0;

     label08:
        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[0];

        $r5[0] = $r2;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[2];

        $r5[1] = $r2;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[3];

        $r5[5] = $r2;

     label09:
        $r5 = $r1.<com.metrictrade.and.fr: double[][] G>;

        if $r5 == null goto label11;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r1.<com.metrictrade.and.fr: double[][] G>;

        $r2 = $r7[3];

        $r5[9] = $r2;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r1.<com.metrictrade.and.fr: double[][] G>;

        $r2 = $r7[1];

        $r5[10] = $r2;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r1.<com.metrictrade.and.fr: double[][] G>;

        $r2 = $r7[2];

        $r5[11] = $r2;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r1.<com.metrictrade.and.fr: double[][] G>;

        $i0 = r0.<com.metrictrade.and.fs: int o>;

        if $i0 != 7 goto label16;

        $b3 = 4;

     label10:
        $r2 = $r7[$b3];

        $r5[8] = $r2;

     label11:
        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[6];

        $r5[7] = $r2;

     label12:
        $i0 = 0;

     label13:
        if $i0 <= 5 goto label18;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[0];

        $i0 = 0;

     label14:
        if $r2 == null goto label15;

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label19;

     label15:
        r0.<com.metrictrade.and.fs: int h> = $i0;

        return r0;

     label16:
        $i0 = r0.<com.metrictrade.and.fs: int o>;

        if $i0 != 8 goto label17;

        $b3 = 5;

        goto label10;

     label17:
        $b3 = 0;

        goto label10;

     label18:
        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i0];

        $r5[$i0] = $r2;

        $i0 = $i0 + 1;

        goto label13;

     label19:
        $d0 = $r2[$i1];

        $d1 = $r2[$i1];

        $b3 = $d0 cmpl $d1;

        if $b3 != 0 goto label20;

        $d0 = $r2[$i1];

        $b3 = $d0 cmpl 0.0;

        if $b3 == 0 goto label20;

        $i0 = $i0 + 1;

     label20:
        $i1 = $i1 + 1;

        goto label14;

     label21:
        $b3 = 0;

        goto label03;

     label22:
        $b4 = 21;

        goto label04;

     label23:
        $d1 = $r2[$i2];

        $b3 = $d1 cmpl $d1;

        if $b3 != 0 goto label06;

        $b3 = $d1 cmpl 0.0;

        if $b3 == 0 goto label06;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r3[1];

        $d1 = $r6[$i2];

        $b3 = $d1 cmpl $d1;

        if $b3 != 0 goto label31;

        $b3 = $d1 cmpl 0.0;

        if $b3 == 0 goto label31;

        $b3 = $d1 cmpl 0.0;

        $i5 = (int) $b3;

        if $i5 <= 0 goto label27;

     label24:
        if $i2 <= 20 goto label28;

        $b3 = 4;

     label25:
        $d2 = (double) $b3;

        $d1 = $d2 * $d1;

        $d0 = $d1 + $d0;

        $i1 = $i1 + 1;

     label26:
        $i2 = $i2 + 1;

        goto label05;

     label27:
        $d1 = neg $d1;

        goto label24;

     label28:
        if $i2 <= 30 goto label29;

        $b3 = 8;

        goto label25;

     label29:
        $b3 = 1;

        goto label25;

     label30:
        $i0 = $i1;

        goto label07;

     label31:
        goto label26;

     label32:
        return r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, int, int, int, int, com.metrictrade.and.an)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 := @parameter6: int;

        $r1 := @parameter7: com.metrictrade.and.an;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i1, $i2, $i3, $i4, $i5, $r1, null, null, null, 1, 1);

        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, int, int, int, int, com.metrictrade.and.an, com.metrictrade.and.fy, java.lang.String, com.metrictrade.and.fs, int, int)
    {
        com.metrictrade.and.an $r1;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r3, $r5;
        boolean $z0;
        com.metrictrade.and.fy $r2;
        com.metrictrade.and.fs $r0, $r4, $r6;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $i5 := @parameter6: int;

        $r1 := @parameter7: com.metrictrade.and.an;

        $r2 := @parameter8: com.metrictrade.and.fy;

        $r3 := @parameter9: java.lang.String;

        $r4 := @parameter10: com.metrictrade.and.fs;

        $i6 := @parameter11: int;

        $i7 := @parameter12: int;

        $z0 = staticinvoke <com.metrictrade.and.ga: boolean b(int)>($i0);

        if $z0 == 0 goto label06;

        if $r0 != null goto label05;

        $r5 = "";

     label01:
        $r6 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,java.lang.String,int,com.metrictrade.and.an,java.lang.String,com.metrictrade.and.fs)>($r0, $i0, $r5, $i1, $r1, $r3, $r4);

        if $r6 == $r0 goto label02;

        $r6.<com.metrictrade.and.fs: com.metrictrade.and.dd x> = $r0;

     label02:
        $r6.<com.metrictrade.and.fs: int p> = $i1;

        $r6.<com.metrictrade.and.fs: int o> = $i0;

        $r6.<com.metrictrade.and.fs: int q> = $i2;

        $r6.<com.metrictrade.and.fs: int r> = $i3;

        $r6.<com.metrictrade.and.fs: int s> = $i4;

        $r6.<com.metrictrade.and.fs: com.metrictrade.and.fs E> = $r4;

        $r6.<com.metrictrade.and.fs: java.lang.String F> = $r3;

        $r6.<com.metrictrade.and.fs: int w> = $i5;

        $r6.<com.metrictrade.and.fs: int u> = $i6;

        $r6.<com.metrictrade.and.fs: int v> = $i7;

        if $r0 == null goto label10;

        $i1 = $r0.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label10;

        if $i0 == 221 goto label03;

        if $i0 == 223 goto label03;

        if $i0 == 228 goto label03;

        if $i0 == 238 goto label03;

        if $i0 == 280 goto label03;

        if $i0 != 281 goto label09;

     label03:
        $i1 = $i4;

     label04:
        $i1 = staticinvoke <com.metrictrade.and.dc: int a(int,int)>(0, $i1);

        $r0.<com.metrictrade.and.fs: int z> = $i1;

        virtualinvoke $r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,int,int,int,int,int,boolean,com.metrictrade.and.fy,int,int)>($r6, $i0, $i2, $i3, $i4, $i5, 0, $r2, $i6, $i7);

        return $r6;

     label05:
        $r5 = $r0.<com.metrictrade.and.fs: java.lang.String a>;

        goto label01;

     label06:
        if $r0 != null goto label08;

        $r5 = null;

     label07:
        $r5 = staticinvoke <com.metrictrade.and.ga: java.lang.String a(int,int,int,int,int,java.lang.String,java.lang.String,boolean)>($i0, $i2, $i3, $i4, $i5, $r5, $r3, 0);

        goto label01;

     label08:
        $r5 = virtualinvoke $r0.<com.metrictrade.and.fs: java.lang.String b(int)>(2);

        goto label07;

     label09:
        $i1 = $i2;

        goto label04;

     label10:
        $r6.<com.metrictrade.and.fs: int h> = 0;

        return $r6;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, int, int, int, com.metrictrade.and.an, com.metrictrade.and.fy, java.lang.String, com.metrictrade.and.fs)
    {
        com.metrictrade.and.fy $r2;
        com.metrictrade.and.fs $r0, $r4;
        com.metrictrade.and.an $r1;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r3;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 := @parameter5: int;

        $r1 := @parameter6: com.metrictrade.and.an;

        $r2 := @parameter7: com.metrictrade.and.fy;

        $r3 := @parameter8: java.lang.String;

        $r4 := @parameter9: com.metrictrade.and.fs;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i1, $i2, $i3, $i4, 0, $r1, $r2, $r3, $r4, 1, 1);

        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, int, com.metrictrade.and.an)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $r1 := @parameter4: com.metrictrade.and.an;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i0, 0, $i1, $i2, 0, $r1, null, null, null, 1, 1);

        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, com.metrictrade.and.an)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0, $i1;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: com.metrictrade.and.an;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i0, $i1, 0, 0, 0, $r1, null, null, null, 1, 1);

        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, int, com.metrictrade.and.an, int)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0, $i1, $i2;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r1 := @parameter3: com.metrictrade.and.an;

        $i2 := @parameter4: int;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i1, 0, 0, 0, 0, $r1, null, null, null, 1, 1);

        if $r0 == null goto label1;

        if $i2 == -1 goto label1;

        $r0.<com.metrictrade.and.fs: int c> = $i2;

     label1:
        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, com.metrictrade.and.an, int)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0, $i1;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.metrictrade.and.an;

        $i1 := @parameter3: int;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,com.metrictrade.and.an,int)>($r0, $i0, $i0, $r1, $i1);

        return $r0;
    }

    public static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, com.metrictrade.and.an, com.metrictrade.and.fy)
    {
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.an $r1;
        int $i0;
        com.metrictrade.and.fy $r2;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $r1 := @parameter2: com.metrictrade.and.an;

        $r2 := @parameter3: com.metrictrade.and.fy;

        $r0 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fs,int,int,int,int,int,int,com.metrictrade.and.an,com.metrictrade.and.fy,java.lang.String,com.metrictrade.and.fs,int,int)>($r0, $i0, $i0, 0, 0, 0, 0, $r1, $r2, null, null, 1, 1);

        return $r0;
    }

    private static com.metrictrade.and.fs a(com.metrictrade.and.fs, int, java.lang.String, int, com.metrictrade.and.an, java.lang.String, com.metrictrade.and.fs)
    {
        java.lang.Throwable $r10;
        com.metrictrade.and.an $r2;
        com.metrictrade.and.eo $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r1, $r3, $r7;
        boolean $z0;
        com.metrictrade.and.fs $r0, $r4, $r5;
        java.lang.StringBuilder $r6;
        java.lang.Object $r8;

        $r0 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $r1 := @parameter2: java.lang.String;

        $i1 := @parameter3: int;

        $r2 := @parameter4: com.metrictrade.and.an;

        $r3 := @parameter5: java.lang.String;

        $r4 := @parameter6: com.metrictrade.and.fs;

        $r5 = null;

        if $r2 == null goto label15;

        if $i1 > 700 goto label01;

        $z0 = staticinvoke <com.metrictrade.and.ga: boolean c(int)>($i0);

        if $z0 == 0 goto label14;

     label01:
        $r6 = new java.lang.StringBuilder;

        specialinvoke $r6.<java.lang.StringBuilder: void <init>(java.lang.String)>("i");

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);

        $r6 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1);

        $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>();

     label02:
        $r8 = virtualinvoke $r2.<com.metrictrade.and.an: java.lang.Object b(java.lang.Object)>($r7);

        $r5 = (com.metrictrade.and.fs) $r8;

     label03:
        if $r5 != null goto label13;

        $r5 = new com.metrictrade.and.fs;

        specialinvoke $r5.<com.metrictrade.and.fs: void <init>()>();

        if $i0 < 101 goto label04;

        $i2 = $r5.<com.metrictrade.and.fs: int c>;

        $r9 = <com.metrictrade.and.eo: com.metrictrade.and.eo a>;

        $i3 = $r9.<com.metrictrade.and.eo: int o>;

        if $i2 != $i3 goto label04;

        $i2 = staticinvoke <com.metrictrade.and.ga: int a(int,int,boolean)>($i0, $i1, 0);

        $r5.<com.metrictrade.and.fs: int c> = $i2;

     label04:
        if $i1 != 113 goto label05;

        $r5.<com.metrictrade.and.fs: int y> = 1;

     label05:
        $z0 = staticinvoke <com.metrictrade.and.ga: boolean b(int)>($i0);

        if $z0 == 0 goto label09;

        if $r0 == null goto label06;

        $i0 = $r0.<com.metrictrade.and.fs: int e>;

        $r5.<com.metrictrade.and.fs: int e> = $i0;

        $r1 = $r0.<com.metrictrade.and.fs: java.lang.String a>;

        $r5.<com.metrictrade.and.fs: java.lang.String a> = $r1;

     label06:
        if $r2 == null goto label08;

        if $r7 == null goto label08;

        entermonitor $r2;

     label07:
        virtualinvoke $r2.<com.metrictrade.and.an: java.lang.Object a(java.lang.Object,java.lang.Object)>($r7, $r5);

        exitmonitor $r2;

     label08:
        $r5.<com.metrictrade.and.fs: java.lang.String F> = $r3;

        $r5.<com.metrictrade.and.fs: com.metrictrade.and.fs E> = $r4;

        return $r5;

     label09:
        $r5.<com.metrictrade.and.fs: boolean f> = 1;

        $r5.<com.metrictrade.and.fs: int e> = 0;

        $r5.<com.metrictrade.and.fs: java.lang.String a> = $r1;

        goto label06;

     label10:
        $r10 := @caughtexception;

     label11:
        exitmonitor $r2;

     label12:
        throw $r10;

     label13:
        $r5.<com.metrictrade.and.fs: java.lang.String a> = $r1;

        goto label08;

     label14:
        $r7 = $r1;

        goto label02;

     label15:
        $r7 = $r1;

        goto label03;

        catch java.lang.Throwable from label07 to label08 with label10;
        catch java.lang.Throwable from label11 to label12 with label10;
    }

    private void a(int, int, int, int, int, com.metrictrade.and.fs, int, int, int)
    {
        byte $b8, $b9;
        boolean $z0;
        com.metrictrade.and.fs r0, $r1, $r8, $r16;
        com.metrictrade.and.fr $r9;
        double[][] $r4;
        double[] $r2, $r3, $r5, $r6, $r7, $r11, $r12, $r13, $r14, $r15;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        java.lang.String $r10;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i7 := @parameter3: int;

        $i3 := @parameter4: int;

        $r1 := @parameter5: com.metrictrade.and.fs;

        $i4 := @parameter6: int;

        $i5 := @parameter7: int;

        $i6 := @parameter8: int;

        lookupswitch($i0)
        {
            case 101: goto label002;
            case 102: goto label001;
            case 103: goto label003;
            case 104: goto label019;
            case 105: goto label043;
            case 106: goto label061;
            case 107: goto label079;
            case 108: goto label098;
            case 109: goto label113;
            case 110: goto label128;
            case 111: goto label150;
            case 112: goto label157;
            case 113: goto label178;
            case 114: goto label201;
            case 115: goto label203;
            case 116: goto label206;
            default: goto label001;
        };

     label001:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i1, $i3, $r1, $i5, $i6);

        return;

     label002:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,com.metrictrade.and.fs,int,int)>($i1, $r1, $i5, $i6);

        return;

     label003:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label004;

        if $i1 < $i0 goto label005;

     label004:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label005:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r4;

        if $i5 < $i2 goto label008;

        $r2 = null;

     label006:
        if $r2 == null goto label007;

        if $i0 >= $i1 goto label009;

     label007:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label008:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        goto label006;

     label009:
        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label010;

        $i0 = lengthof $r2;

     label010:
        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $d1 = $r2[0];

        $d2 = $r2[0];

        $b8 = $d1 cmpl $d2;

        if $b8 != 0 goto label015;

        $d1 = $r2[0];

     label011:
        $r3[0] = $d1;

        $i2 = 1;

     label012:
        if $i2 >= $i0 goto label233;

        if $i2 >= $i1 goto label016;

        $i7 = $i2;

     label013:
        $i4 = $i7 + -1;

        $i7 = 0;

        $i3 = 0;

        $d1 = 0.0;

     label014:
        if $i4 >= 0 goto label017;

        $d2 = (double) $i7;

        $d1 = $d1 / $d2;

        $r3[$i2] = $d1;

        $i2 = $i2 + 1;

        goto label012;

     label015:
        $d1 = 0.0;

        goto label011;

     label016:
        $i7 = $i1;

        goto label013;

     label017:
        $i5 = $i2 - $i4;

        $d2 = $r2[$i5];

        $i5 = $i2 - $i4;

        $d3 = $r2[$i5];

        $b8 = $d2 cmpl $d3;

        if $b8 != 0 goto label018;

        $i5 = $i2 - $i4;

        $d2 = $r2[$i5];

        $i3 = $i3 + 1;

        $d3 = (double) $i3;

        $d2 = $d2 * $d3;

        $d1 = $d1 + $d2;

        $i7 = $i7 + $i3;

     label018:
        $i4 = $i4 + -1;

        goto label014;

     label019:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label020;

        if $i1 < $i0 goto label021;

     label020:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label021:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r4;

        if $i5 < $i2 goto label024;

        $r2 = null;

     label022:
        if $r2 == null goto label023;

        if $i0 >= $i1 goto label025;

     label023:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label024:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        goto label022;

     label025:
        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label026;

        $i0 = lengthof $r2;

     label026:
        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $d1 = $r2[0];

        $d2 = $r2[0];

        $b8 = $d1 cmpl $d2;

        if $b8 != 0 goto label029;

        $d1 = $r2[0];

     label027:
        $r3[0] = $d1;

        $i2 = 1;

        $d3 = 0.0;

     label028:
        if $i2 < $i0 goto label030;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i1, $r2);

        return;

     label029:
        $d1 = 0.0;

        goto label027;

     label030:
        $d1 = $r2[$i2];

        $d2 = $r2[$i2];

        $b8 = $d1 cmpl $d2;

        if $b8 != 0 goto label035;

        $d2 = 0.0;

        if $i2 >= $i1 goto label036;

        $i7 = $i2;

     label031:
        $d1 = (double) $i7;

        $d4 = (double) $i1;

        $b8 = $d1 cmpg $d4;

        $i7 = (int) $b8;

        if $i7 > 0 goto label033;

        $d3 = 0.0;

        $i7 = 1;

     label032:
        $d4 = (double) $i7;

        $b8 = $d4 cmpg $d1;

        $i3 = (int) $b8;

        if $i3 <= 0 goto label037;

     label033:
        $i7 = 1;

     label034:
        $d4 = (double) $i7;

        $b8 = $d4 cmpg $d1;

        $i3 = (int) $b8;

        if $i3 <= 0 goto label040;

        $d1 = $d2 / $d3;

        $r3[$i2] = $d1;

     label035:
        $i2 = $i2 + 1;

        goto label028;

     label036:
        $i7 = $i1;

        goto label031;

     label037:
        $d4 = 1.0 + $d1;

        $b8 = $d4 cmpl 0.0;

        if $b8 != 0 goto label039;

        $d4 = 0.0;

     label038:
        $d3 = $d3 + $d4;

        $i7 = $i7 + 1;

        goto label032;

     label039:
        $d4 = (double) $i7;

        $d5 = 1.0 + $d1;

        $d5 = 0.5 * $d5;

        $d4 = $d4 - $d5;

        $d5 = 1.0 + $d1;

        $d5 = 0.5 * $d5;

        $d4 = $d4 / $d5;

        $d4 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d4);

        $d4 = 1.0 - $d4;

        $d4 = $d4 * $d1;

        goto label038;

     label040:
        $i3 = $i2 - $i7;

        $i3 = $i3 + 1;

        $d4 = $r2[$i3];

        $d5 = 1.0 + $d1;

        $b8 = $d5 cmpl 0.0;

        if $b8 != 0 goto label042;

        $d5 = 0.0;

     label041:
        $d4 = $d5 * $d4;

        $i7 = $i7 + 1;

        $d2 = $d4 + $d2;

        goto label034;

     label042:
        $d5 = (double) $i7;

        $d6 = 1.0 + $d1;

        $d6 = 0.5 * $d6;

        $d5 = $d5 - $d6;

        $d6 = 1.0 + $d1;

        $d6 = 0.5 * $d6;

        $d5 = $d5 / $d6;

        $d5 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d5);

        $d5 = 1.0 - $d5;

        $d5 = $d5 * $d1;

        goto label041;

     label043:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label044;

        if $i1 < $i0 goto label045;

     label044:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label045:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r4;

        if $i5 < $i2 goto label048;

        $r2 = null;

     label046:
        if $r2 == null goto label047;

        if $i0 >= $i1 goto label049;

     label047:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label048:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        goto label046;

     label049:
        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label050;

        $i0 = lengthof $r2;

     label050:
        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $d1 = $r2[0];

        $d2 = $r2[0];

        $b8 = $d1 cmpl $d2;

        if $b8 != 0 goto label053;

        $d1 = $r2[0];

     label051:
        $r3[0] = $d1;

        $i2 = 1;

        $d1 = 0.0;

     label052:
        if $i2 < $i0 goto label054;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i1, $r2, $i6);

        return;

     label053:
        $d1 = 0.0;

        goto label051;

     label054:
        $d2 = $r2[$i2];

        $d3 = $r2[$i2];

        $b8 = $d2 cmpl $d3;

        if $b8 != 0 goto label058;

        $d2 = 0.0;

        if $i2 >= $i1 goto label059;

        $i7 = $i2;

     label055:
        $d3 = (double) $i7;

        $d4 = (double) $i1;

        $b8 = $d3 cmpg $d4;

        $i7 = (int) $b8;

        if $i7 > 0 goto label056;

        $d1 = 1.0 + $d3;

        $d1 = $d1 * $d3;

        $d1 = 2.0 / $d1;

     label056:
        $i7 = 1;

     label057:
        $d4 = (double) $i7;

        $b8 = $d4 cmpg $d3;

        $i3 = (int) $b8;

        if $i3 <= 0 goto label060;

        $d2 = $d2 * $d1;

        $r3[$i2] = $d2;

     label058:
        $i2 = $i2 + 1;

        goto label052;

     label059:
        $i7 = $i1;

        goto label055;

     label060:
        $d4 = (double) $i7;

        $d4 = 3.0 * $d4;

        $d4 = $d4 - $d3;

        $d4 = $d4 - 1.0;

        $i3 = $i2 - $i7;

        $i3 = $i3 + 1;

        $d5 = $r2[$i3];

        $d4 = $d4 * $d5;

        $d2 = $d2 + $d4;

        $i7 = $i7 + 1;

        goto label057;

     label061:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label062;

        if $i1 < $i0 goto label063;

     label062:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label063:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r4;

        if $i5 < $i2 goto label065;

        $r2 = null;

     label064:
        if $r2 != null goto label066;

        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label065:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        goto label064;

     label066:
        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label067;

        $i0 = lengthof $r2;

     label067:
        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[1];

        $d1 = $r2[0];

        $d2 = $r2[0];

        $b8 = $d1 cmpl $d2;

        if $b8 != 0 goto label070;

        $d1 = $r2[0];

     label068:
        $r3[0] = $d1;

        $i2 = 1;

        $d1 = 0.0;

     label069:
        if $i2 < $i0 goto label071;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i1, $r2);

        return;

     label070:
        $d1 = 0.0;

        goto label068;

     label071:
        $d2 = 0.0;

        if $i2 >= $i1 goto label076;

        $i7 = $i2;

     label072:
        if $i7 > $i1 goto label074;

        $d1 = 0.0;

        $i3 = 1;

     label073:
        if $i3 <= $i7 goto label077;

     label074:
        $i3 = 0;

     label075:
        if $i3 < $i7 goto label078;

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[1];

        $d2 = $d2 / $d1;

        $r3[$i2] = $d2;

        $i2 = $i2 + 1;

        goto label069;

     label076:
        $i7 = $i1;

        goto label072;

     label077:
        $d3 = (double) $i3;

        $d1 = $d1 + $d3;

        $i3 = $i3 + 1;

        goto label073;

     label078:
        $i4 = $i2 - $i3;

        $d3 = $r2[$i4];

        $i4 = $i7 - $i3;

        $d4 = (double) $i4;

        $d3 = $d3 * $d4;

        $d2 = $d2 + $d3;

        $i3 = $i3 + 1;

        goto label075;

     label079:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label080;

        if $i1 < $i0 goto label081;

     label080:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label081:
        $d1 = (double) $i1;

        $d2 = $d1 / 3.0;

        $d2 = $d2 + 1.0;

        $d2 = 2.0 / $d2;

        $d3 = 1.0 - $d2;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r4;

        if $i5 < $i2 goto label084;

        $r2 = null;

     label082:
        if $r2 == null goto label083;

        if $i0 >= $i1 goto label085;

     label083:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label084:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        goto label082;

     label085:
        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label086;

        $i0 = lengthof $r2;

     label086:
        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $d4 = $r2[0];

        $d5 = $r2[0];

        $b8 = $d4 cmpl $d5;

        if $b8 != 0 goto label090;

        $d6 = $r2[0];

     label087:
        $r3[0] = $d6;

        $i2 = 1;

        $d4 = 0.0;

        $d5 = 0.0;

     label088:
        if $i2 <= $i1 goto label091;

        $i2 = 0;

     label089:
        if $i2 < $i0 goto label092;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i1, $r2);

        return;

     label090:
        $d6 = 0.0;

        goto label087;

     label091:
        $d7 = (double) $i2;

        $d5 = $d5 + $d7;

        $i7 = $i2 * $i2;

        $d7 = (double) $i7;

        $i2 = $i2 + 1;

        $d4 = $d7 + $d4;

        goto label088;

     label092:
        $i7 = $i1 + -1;

        if $i2 < $i7 goto label097;

        $d6 = 0.0;

        $d7 = 0.0;

        $i7 = 0;

     label093:
        if $i7 < $i1 goto label095;

        $d8 = $d5 * $d6;

        $d8 = $d8 / $d1;

        $d7 = $d7 - $d8;

        $d8 = $d5 * $d5;

        $d8 = $d8 / $d1;

        $d8 = $d4 - $d8;

        $d7 = $d7 / $d8;

        $d8 = $d7 * $d5;

        $d6 = $d6 - $d8;

        $d6 = $d6 / $d1;

        $d7 = $d7 * $d1;

        $d6 = $d7 + $d6;

        $d6 = $d6 * $d2;

        $i7 = $i2 + -1;

        $d7 = $r2[$i7];

        $d7 = $d7 * $d3;

        $d6 = $d6 + $d7;

        $r3[$i2] = $d6;

     label094:
        $d6 = $r3[$i2];

        $i2 = $i2 + 1;

        goto label089;

     label095:
        $i3 = $i2 - $i7;

        $d8 = $r2[$i3];

        $b8 = $d8 cmpl $d8;

        if $b8 != 0 goto label096;

        $d6 = $d6 + $d8;

        $i3 = $i1 - $i7;

        $d0 = (double) $i3;

        $d8 = $d8 * $d0;

        $d7 = $d7 + $d8;

     label096:
        $i7 = $i7 + 1;

        goto label093;

     label097:
        if $i2 <= 0 goto label094;

        $d7 = $r2[$i2];

        $d7 = $d7 * $d2;

        $d6 = $d6 * $d3;

        $d6 = $d6 + $d7;

        $r3[$i2] = $d6;

        goto label094;

     label098:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 0 goto label099;

        if $i1 < $i0 goto label100;

     label099:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label100:
        $i2 = $i2 + 1;

        $d1 = (double) $i2;

        $d1 = 2.0 / $d1;

        $i2 = $i7 + 1;

        $d2 = (double) $i2;

        $d2 = 2.0 / $d2;

        $i2 = $i1 + 1;

        $d3 = (double) $i2;

        $d3 = 2.0 / $d3;

        $d4 = 1.0 - $d3;

        $d5 = #NaN;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i5];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $i2 = 0;

     label101:
        if $i2 < $i0 goto label102;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i1, $r2, $i6);

        return;

     label102:
        $d6 = $r2[$i2];

        $b8 = $d6 cmpl $d6;

        if $b8 != 0 goto label232;

        $b8 = $d5 cmpl $d5;

        if $b8 == 0 goto label104;

        $r3[$i2] = $d6;

        $d5 = $d6;

     label103:
        $i2 = $i2 + 1;

        goto label101;

     label104:
        if $i2 < $i1 goto label112;

        $i7 = $i2 - $i1;

        $d7 = $r2[$i7];

        $d7 = $d6 - $d7;

        $b8 = $d7 cmpl $d7;

        if $b8 == 0 goto label105;

        $d7 = 0.0;

     label105:
        $d8 = 0.0;

        $i7 = 0;

     label106:
        if $i7 >= $i1 goto label107;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i7 < $i3 goto label110;

     label107:
        $b8 = $d8 cmpl 0.0;

        if $b8 == 0 goto label231;

        $d0 = $d1 - $d2;

        $d7 = $d7 / $d8;

        $d7 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d7);

        $d7 = $d7 * $d0;

        $d7 = $d7 + $d2;

        $d7 = $d7 * $d7;

     label108:
        $d6 = $d6 - $d5;

        $d6 = $d7 * $d6;

        $d5 = $d6 + $d5;

        $r3[$i2] = $d5;

     label109:
        $d5 = $r3[$i2];

        goto label103;

     label110:
        $i3 = $i2 - $i7;

        $d9 = $r2[$i3];

        $i3 = $i2 - $i7;

        $i3 = $i3 + -1;

        $d0 = $r2[$i3];

        $b8 = $d9 cmpl $d9;

        if $b8 != 0 goto label111;

        $b8 = $d0 cmpl $d0;

        if $b8 != 0 goto label111;

        $d0 = $d9 - $d0;

        $d0 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d0);

        $d8 = $d8 + $d0;

     label111:
        $i7 = $i7 + 1;

        goto label106;

     label112:
        $d6 = $d6 * $d3;

        $d5 = $d5 * $d4;

        $d5 = $d6 + $d5;

        $r3[$i2] = $d5;

        goto label109;

     label113:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i2 <= 0 goto label114;

        if $i2 < $i0 goto label115;

     label114:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label115:
        $i1 = $i1 + 101;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,int,int,int,com.metrictrade.and.fs,int,int,int)>($i1, $i2, 0, 0, 0, $r1, 0, $i5, $i6);

        $i1 = $i6 + -1;

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i3 = $i1 + 3;

        $r2 = $r4[$i3];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i3 = $i1 + 4;

        $r3 = $r4[$i3];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r4[$i6];

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i3 = lengthof $r4;

        if $i5 < $i3 goto label117;

        $r6 = null;

     label116:
        if $r6 != null goto label118;

        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label117:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r4[$i5];

        goto label116;

     label118:
        $d1 = (double) $i7;

        if $i7 < 10 goto label119;

        $d1 = $d1 / 100.0;

     label119:
        $i7 = $i2;

     label120:
        if $i7 < $i0 goto label121;

        $i0 = $i1 + 3;

        $i1 = $i1 + 4;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int,int,int)>($i2, $r6, $i6, $i0, $i1);

        return;

     label121:
        $i3 = $i7 - $i2;

        $i4 = $i3 + 1;

        $i3 = 0;

        $d3 = 0.0;

        $d2 = 0.0;

     label122:
        if $i4 <= $i7 goto label125;

        if $i3 == 0 goto label230;

        $d4 = (double) $i3;

        $d3 = $d3 / $d4;

        $d4 = (double) $i3;

        $d2 = $d2 / $d4;

        $d3 = $d3 * $d3;

        $d2 = $d2 - $d3;

        $d2 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d2);

        $d3 = staticinvoke <com.metrictrade.and.dc: double k(double)>($d2);

     label123:
        $d2 = $r5[$i7];

        $b8 = $d2 cmpl $d2;

        if $b8 == 0 goto label127;

        $r3[$i7] = #NaN;

        $r2[$i7] = #NaN;

     label124:
        $i7 = $i7 + 1;

        goto label120;

     label125:
        $d4 = $r6[$i4];

        $b8 = $d4 cmpl 0.0;

        if $b8 == 0 goto label126;

        $b8 = $d4 cmpl $d4;

        if $b8 != 0 goto label126;

        $d5 = $d4 * $d4;

        $d2 = $d2 + $d5;

        $d3 = $d3 + $d4;

        $i3 = $i3 + 1;

     label126:
        $i4 = $i4 + 1;

        goto label122;

     label127:
        $d4 = $d1 * $d3;

        $d4 = $d4 + $d2;

        $r2[$i7] = $d4;

        $d3 = $d3 * $d1;

        $d2 = $d2 - $d3;

        $r3[$i7] = $d2;

        goto label124;

     label128:
        if $i2 <= 0 goto label129;

        if $i7 <= 0 goto label129;

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i7 < $i0 goto label130;

     label129:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label130:
        if $i2 <= $i7 goto label131;

        $i7 = $i2;

     label131:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[4];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r4[1];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[3];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r4[4];

        $i0 = $i1 + -1;

     label132:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label133;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i7, $r2);

        return;

     label133:
        $d1 = 0.0;

        $d4 = 0.0;

        $d5 = 0.0;

        $d3 = 0.0;

        $d6 = 0.0;

        $d2 = 0.0;

        $i3 = $i0 - $i1;

        $i3 = $i3 + 1;

        if $i3 >= 0 goto label134;

        $i3 = 0;

     label134:
        if $i3 <= $i0 goto label136;

        $d4 = $d4 + $d6;

        $d4 = $d4 + $d5;

        $d2 = $d2 + $d4;

        $d2 = $d2 / 4.0;

        $r3[$i0] = $d2;

        $d1 = $d1 + $d3;

        $d1 = $d1 / 2.0;

        $r7[$i0] = $d1;

        $d1 = $r3[$i0];

        $d2 = $r7[$i0];

        $b8 = $d1 cmpl $d2;

        $i3 = (int) $b8;

        if $i3 <= 0 goto label149;

        $d1 = $r3[$i0];

     label135:
        $r6[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label132;

     label136:
        $d7 = $r5[$i3];

        $d8 = $r2[$i3];

        $b8 = $d7 cmpl $d7;

        if $b8 != 0 goto label229;

        $b8 = $d8 cmpl $d8;

        if $b8 != 0 goto label229;

        $b8 = $d8 cmpl 0.0;

        $i4 = (int) $b8;

        if $i4 <= 0 goto label229;

        $b8 = $d7 cmpl 0.0;

        $i4 = (int) $b8;

        if $i4 <= 0 goto label229;

        $b8 = $d1 cmpl 0.0;

        if $b8 == 0 goto label137;

        $b8 = $d1 cmpg $d7;

        $i4 = (int) $b8;

        if $i4 >= 0 goto label138;

     label137:
        $d1 = $d7;

     label138:
        $b8 = $d3 cmpl 0.0;

        if $b8 == 0 goto label139;

        $b8 = $d3 cmpl $d8;

        $i4 = (int) $b8;

        if $i4 <= 0 goto label140;

     label139:
        $d3 = $d8;

     label140:
        $i4 = $i0 - $i7;

        $i4 = $i4 + 1;

        if $i3 < $i4 goto label144;

        $b8 = $d4 cmpl 0.0;

        if $b8 == 0 goto label141;

        $b8 = $d4 cmpg $d7;

        $i4 = (int) $b8;

        if $i4 >= 0 goto label142;

     label141:
        $d4 = $d7;

     label142:
        $b8 = $d6 cmpl 0.0;

        if $b8 == 0 goto label143;

        $b8 = $d6 cmpl $d8;

        $i4 = (int) $b8;

        if $i4 <= 0 goto label144;

     label143:
        $d6 = $d8;

     label144:
        $i4 = $i0 - $i2;

        $i4 = $i4 + 1;

        if $i3 < $i4 goto label229;

        $b8 = $d5 cmpl 0.0;

        if $b8 == 0 goto label145;

        $b8 = $d5 cmpg $d7;

        $i4 = (int) $b8;

        if $i4 >= 0 goto label146;

     label145:
        $d5 = $d7;

     label146:
        $b8 = $d2 cmpl 0.0;

        if $b8 == 0 goto label147;

        $b8 = $d2 cmpl $d8;

        $i4 = (int) $b8;

        if $i4 <= 0 goto label229;

     label147:
        $d2 = $d8;

     label148:
        $i3 = $i3 + 1;

        goto label134;

     label149:
        $d1 = $r7[$i0];

        goto label135;

     label150:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i2 <= 0 goto label151;

        if $i2 < $i0 goto label152;

     label151:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label152:
        $d1 = (double) $i7;

        $d1 = $d1 / 10.0;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,int,int,int,com.metrictrade.and.fs,int,int,int)>(102, $i2, 0, 0, 0, $r1, 0, $i5, $i6);

        specialinvoke r0.<com.metrictrade.and.fs: void b(com.metrictrade.and.fs,int,int,int)>($r1, $i1, 1, 2);

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[2];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[1];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r4[3];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r4[4];

        $i1 = $i2;

     label153:
        if $i1 < $i0 goto label154;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i2, $r2);

        return;

     label154:
        $d2 = $r3[$i1];

        $d3 = $r2[$i1];

        $b8 = $d2 cmpl $d2;

        if $b8 != 0 goto label156;

        $b8 = $d3 cmpl $d3;

        if $b8 != 0 goto label156;

        $d4 = $d1 * $d3;

        $d4 = $d4 + $d2;

        $r5[$i1] = $d4;

        $d3 = $d3 * $d1;

        $d2 = $d2 - $d3;

        $r6[$i1] = $d2;

     label155:
        $i1 = $i1 + 1;

        goto label153;

     label156:
        $r5[$i1] = #NaN;

        $r6[$i1] = #NaN;

        goto label155;

     label157:
        $d1 = (double) $i2;

        $d3 = $d1 / 100.0;

        $d1 = (double) $i7;

        $d1 = $d1 / 100.0;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r4[4];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i6];

        $d5 = 0.0;

        $b8 = $d3 cmpl $d1;

        $i0 = (int) $b8;

        if $i0 <= 0 goto label228;

        $d3 = $d1;

        $d2 = $d1;

     label158:
        $d4 = 0.0;

        $d6 = 0.0;

        $i0 = 0;

        $z0 = 0;

        $i1 = 0;

        $d0 = 0.0;

     label159:
        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i2 goto label160;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>(9, $r2, $i6);

        return;

     label160:
        $d7 = $r3[$i0];

        $d8 = $r3[$i0];

        $b8 = $d7 cmpl $d8;

        if $b8 != 0 goto label177;

        $d7 = $r5[$i0];

        $d8 = $r5[$i0];

        $b8 = $d7 cmpl $d8;

        if $b8 != 0 goto label177;

        $d7 = $r3[$i0];

        $d8 = $r5[$i0];

        $b8 = $d7 cmpl $d8;

        $i2 = (int) $b8;

        if $i2 < 0 goto label177;

        $d7 = $r5[$i0];

        $b8 = $d7 cmpl 0.0;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label177;

        $d7 = $r5[$i0];

        $d8 = $r3[$i0];

        $i1 = $i1 + 1;

        if $i1 > 2 goto label163;

        $b8 = $d4 cmpl $d7;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label162;

        $d5 = $d8 - $d6;

        $d4 = $d4 - $d7;

        $b8 = $d5 cmpg $d4;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label162;

        $z0 = 1;

        $d0 = $d7;

        $d5 = $d8;

        $d4 = $d7;

        $d6 = $d8;

     label161:
        $i0 = $i0 + 1;

        goto label159;

     label162:
        $z0 = 0;

        $d0 = $d8;

        $d5 = $d7;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label163:
        if $z0 != 1 goto label170;

        $b8 = $d7 cmpg $d0;

        $i2 = (int) $b8;

        if $i2 > 0 goto label167;

        $z0 = 0;

        $b8 = $d5 cmpg $d6;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label227;

        $d3 = $d6;

     label164:
        $b8 = $d3 cmpg $d8;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label165;

        $d3 = $d8;

     label165:
        $r2[$i0] = $d3;

        $d4 = $d7 - $d3;

        $d4 = $d4 * $d2;

        $d0 = $d4 + $d3;

        $b8 = $d0 cmpg $d6;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label166;

        $d0 = $d6;

     label166:
        $b8 = $d0 cmpg $d8;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label226;

        $d0 = $d8;

        $d5 = $d7;

        $d3 = $d2;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label167:
        $r2[$i0] = $d0;

        $b8 = $d8 cmpl $d5;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label168;

        $d3 = $d3 + $d2;

        $b8 = $d3 cmpl $d1;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label225;

        $d5 = $d8;

        $d3 = $d1;

     label168:
        $d6 = $d5 - $d0;

        $d6 = $d6 * $d3;

        $d0 = $d0 + $d6;

        $b8 = $d0 cmpl $d4;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label169;

        $d0 = $d4;

     label169:
        $b8 = $d0 cmpl $d7;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label221;

        $d0 = $d7;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label170:
        $b8 = $d8 cmpl $d0;

        $i2 = (int) $b8;

        if $i2 < 0 goto label174;

        $z0 = 1;

        $b8 = $d5 cmpl $d4;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label224;

        $d3 = $d4;

     label171:
        $b8 = $d3 cmpl $d7;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label172;

        $d3 = $d7;

     label172:
        $r2[$i0] = $d3;

        $d5 = $d8 - $d3;

        $d5 = $d5 * $d2;

        $d0 = $d5 + $d3;

        $b8 = $d0 cmpl $d4;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label173;

        $d0 = $d4;

     label173:
        $b8 = $d0 cmpl $d7;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label223;

        $d0 = $d7;

        $d5 = $d8;

        $d3 = $d2;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label174:
        $r2[$i0] = $d0;

        $b8 = $d7 cmpg $d5;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label175;

        $d3 = $d3 + $d2;

        $b8 = $d3 cmpl $d1;

        $i2 = (int) $b8;

        if $i2 <= 0 goto label222;

        $d5 = $d7;

        $d3 = $d1;

     label175:
        $d4 = $d5 - $d0;

        $d4 = $d4 * $d3;

        $d0 = $d0 + $d4;

        $b8 = $d0 cmpg $d6;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label176;

        $d0 = $d6;

     label176:
        $b8 = $d0 cmpg $d8;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label221;

        $d0 = $d8;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label177:
        $r2[$i0] = #NaN;

        goto label161;

     label178:
        $r8 = $r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        if $r8 == null goto label179;

        $i0 = $r8.<com.metrictrade.and.fs: int h>;

        if $i0 > 0 goto label187;

     label179:
        if $i4 <= 0 goto label182;

        if $r8 != null goto label182;

        $r9 = staticinvoke <com.metrictrade.and.fs: com.metrictrade.and.fr b(com.metrictrade.and.fs)>($r1);

        if $r9 == null goto label186;

        $i0 = staticinvoke <com.metrictrade.and.ga: int e(int)>($i4);

        if $i0 == 0 goto label186;

        virtualinvoke $r9.<com.metrictrade.and.fr: void k(int)>(1);

        if $i0 == 8 goto label185;

        if $i0 == 7 goto label184;

        $b8 = 1;

     label180:
        $r16 = new com.metrictrade.and.fs;

        $r10 = virtualinvoke $r9.<com.metrictrade.and.fr: java.lang.String a()>();

        specialinvoke $r16.<com.metrictrade.and.fs: void <init>(com.metrictrade.and.fr,java.lang.String,int)>($r9, $r10, $b8);

        $r8 = $r16;

     label181:
        if $r8 == null goto label182;

        $r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E> = $r8;

     label182:
        if $r8 == null goto label183;

        $i0 = $r8.<com.metrictrade.and.fs: int h>;

        if $i0 > 0 goto label187;

     label183:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label184:
        $b8 = 7;

        goto label180;

     label185:
        $b8 = 8;

        goto label180;

     label186:
        $r8 = null;

        goto label181;

     label187:
        $i0 = $r8.<com.metrictrade.and.fs: int h>;

        $i0 = $i0 + -1;

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[$i6];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i6 + 3;

        $i1 = $i1 + -1;

        $r5 = $r4[$i1];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i6 + 4;

        $i1 = $i1 + -1;

        $r6 = $r4[$i1];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i6 + 2;

        $i1 = $i1 + -1;

        $r7 = $r4[$i1];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i6 + 5;

        $i1 = $i1 + -1;

        $r11 = $r4[$i1];

        $r4 = $r8.<com.metrictrade.and.fs: double[][] i>;

        $r12 = $r4[1];

        $r4 = $r8.<com.metrictrade.and.fs: double[][] i>;

        $r13 = $r4[3];

        $r4 = $r8.<com.metrictrade.and.fs: double[][] i>;

        $r14 = $r4[4];

        $r4 = $r8.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[0];

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r15 = $r4[0];

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $i1 = $i1 + -1;

     label188:
        if $i1 < 0 goto label233;

        $d1 = $r15[$i1];

        $b8 = $d1 cmpl $d1;

        if $b8 != 0 goto label192;

        $z0 = 0;

        $i2 = $i0;

     label189:
        if $i2 >= 0 goto label193;

     label190:
        $z0 = 1;

     label191:
        if $z0 == 0 goto label192;

        $r11[$i1] = #NaN;

        $r7[$i1] = #NaN;

        $r6[$i1] = #NaN;

        $r5[$i1] = #NaN;

        $r3[$i1] = #NaN;

     label192:
        $i1 = $i1 + -1;

        goto label188;

     label193:
        if $z0 == 0 goto label198;

        $d3 = $r12[$i2];

        $b8 = $d3 cmpl $d3;

        if $b8 != 0 goto label190;

        $b8 = $d3 cmpl 0.0;

        $i7 = (int) $b8;

        if $i7 <= 0 goto label190;

        $d1 = $r13[$i2];

        $d2 = $r14[$i2];

        $b8 = $d1 cmpl $d1;

        if $b8 != 0 goto label194;

        $b8 = $d1 cmpg 0.0;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label195;

     label194:
        $d1 = $d3;

     label195:
        $b8 = $d2 cmpl $d2;

        if $b8 != 0 goto label196;

        $b8 = $d2 cmpg 0.0;

        $i2 = (int) $b8;

        if $i2 >= 0 goto label197;

     label196:
        $d2 = $d3;

     label197:
        $d3 = $d3 + $d1;

        $d3 = $d3 + $d2;

        $d3 = $d3 / 3.0;

        $r3[$i1] = $d3;

        $d4 = $d1 - $d2;

        $d4 = 0.382 * $d4;

        $d4 = $d3 - $d4;

        $r5[$i1] = $d4;

        $d4 = $d1 - $d2;

        $d4 = 0.618 * $d4;

        $d4 = $d3 - $d4;

        $r7[$i1] = $d4;

        $d4 = $d1 - $d2;

        $d4 = 0.382 * $d4;

        $d4 = $d4 + $d3;

        $r6[$i1] = $d4;

        $d1 = $d1 - $d2;

        $d1 = $d1 * 0.618;

        $d1 = $d1 + $d3;

        $r11[$i1] = $d1;

        $z0 = 0;

        goto label191;

     label198:
        $d2 = $r2[$i2];

        $b8 = $d2 cmpg $d1;

        $i7 = (int) $b8;

        if $i7 > 0 goto label200;

        if $i2 == $i0 goto label199;

        $i7 = $i2 + 1;

        $d2 = $r2[$i7];

        $b8 = $d2 cmpl $d1;

        $i7 = (int) $b8;

        if $i7 <= 0 goto label200;

     label199:
        $z0 = 1;

     label200:
        $i2 = $i2 + -1;

        goto label189;

     label201:
        $d1 = (double) $i7;

        $d1 = 100.0 + $d1;

        $d2 = (double) $i7;

        $d2 = 100.0 - $d2;

        $i0 = $i1 + 101;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,int,int,int,com.metrictrade.and.fs,int,int,int)>($i0, $i2, 0, 0, 0, $r1, 0, $i5, $i6);

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[$i6];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i0 = $i6 + 3;

        $i0 = $i0 + -1;

        $r3 = $r4[$i0];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i0 = $i6 + 4;

        $i0 = $i0 + -1;

        $r5 = $r4[$i0];

        $i0 = $i2;

     label202:
        $i7 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i7 goto label204;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[1];

        $i0 = $i6 + 3;

        $i0 = $i0 + -1;

        $i7 = $i6 + 4;

        $i7 = $i7 + -1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int,int,int)>($i2, $r2, $i6, $i0, $i7);

     label203:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,boolean,com.metrictrade.and.fs,int,int)>($i1, 0, $r1, $i5, $i6);

        return;

     label204:
        $d3 = $r2[$i0];

        $b8 = $d3 cmpl $d3;

        if $b8 != 0 goto label205;

        $d4 = $d1 * $d3;

        $d4 = $d4 / 100.0;

        $r3[$i0] = $d4;

        $d3 = $d3 * $d2;

        $d3 = $d3 / 100.0;

        $r5[$i0] = $d3;

     label205:
        $i0 = $i0 + 1;

        goto label202;

     label206:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[4];

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r4[$i6];

        $d1 = (double) $i1;

        $d1 = $d1 / 100.0;

        $d1 = 1.0 + $d1;

        $d2 = (double) $i1;

        $d2 = $d2 / 100.0;

        $d2 = 1.0 - $d2;

        $b8 = -1;

        $d3 = 0.0;

        $i0 = 0;

        $i1 = 0;

        $i2 = 0;

        $d4 = 0.0;

     label207:
        $i7 = r0.<com.metrictrade.and.fs: int h>;

        if $i2 < $i7 goto label208;

        $i0 = r0.<com.metrictrade.and.fs: int h>;

        $r1.<com.metrictrade.and.fs: int h> = $i0;

        return;

     label208:
        $d5 = $r2[$i2];

        $d6 = $r2[$i2];

        $b9 = $d5 cmpl $d6;

        if $b9 != 0 goto label216;

        $d5 = $r3[$i2];

        $d6 = $r3[$i2];

        $b9 = $d5 cmpl $d6;

        if $b9 != 0 goto label216;

        $d5 = $r2[$i2];

        $d6 = $r3[$i2];

        $b9 = $d5 cmpl $d6;

        $i7 = (int) $b9;

        if $i7 < 0 goto label216;

        $d5 = $r3[$i2];

        $b9 = $d5 cmpl 0.0;

        $i7 = (int) $b9;

        if $i7 <= 0 goto label216;

        $d5 = $r3[$i2];

        $d6 = $r2[$i2];

        $b9 = $d4 cmpl 0.0;

        if $b9 != 0 goto label210;

        $r5[$i2] = $d6;

        $i1 = $i2;

        $i0 = $i2;

        $d3 = $d5;

        $d4 = $d6;

     label209:
        $i2 = $i2 + 1;

        goto label207;

     label210:
        if $b8 == 1 goto label211;

        $d7 = $d3 * $d1;

        $b9 = $d6 cmpl $d7;

        $i7 = (int) $b9;

        if $i7 <= 0 goto label211;

        $b8 = 1;

        $r5[$i2] = $d6;

        $i1 = $i2;

        $i0 = $i2;

        $d3 = $d5;

        $d4 = $d6;

        goto label209;

     label211:
        if $b8 != 1 goto label213;

        $b9 = $d6 cmpl $d4;

        $i7 = (int) $b9;

        if $i7 <= 0 goto label213;

        if $i0 <= 0 goto label212;

        $r5[$i0] = #NaN;

     label212:
        $r5[$i2] = $d6;

        $i0 = $i2;

        $d4 = $d6;

        goto label209;

     label213:
        if $b8 == 0 goto label214;

        $d7 = $d4 * $d2;

        $b9 = $d5 cmpg $d7;

        $i7 = (int) $b9;

        if $i7 >= 0 goto label214;

        $b8 = 0;

        $r5[$i2] = $d5;

        $i1 = $i2;

        $i0 = $i2;

        $d3 = $d5;

        $d4 = $d6;

        goto label209;

     label214:
        if $b8 != 0 goto label216;

        $b9 = $d5 cmpg $d3;

        $i7 = (int) $b9;

        if $i7 >= 0 goto label216;

        if $i1 <= 0 goto label215;

        $r5[$i1] = #NaN;

     label215:
        $r5[$i2] = $d5;

        $i1 = $i2;

        $d3 = $d5;

        goto label209;

     label216:
        $i7 = r0.<com.metrictrade.and.fs: int h>;

        $i7 = $i7 + -1;

        if $i2 != $i7 goto label220;

        if $b8 != 1 goto label218;

        $d5 = $r3[$i2];

     label217:
        $r5[$i2] = $d5;

        goto label209;

     label218:
        if $b8 != 0 goto label219;

        $d5 = $r2[$i2];

        goto label217;

     label219:
        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r4[1];

        $d5 = $r6[$i2];

        goto label217;

     label220:
        $r5[$i2] = #NaN;

        goto label209;

     label221:
        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label222:
        $d5 = $d7;

        goto label175;

     label223:
        $d5 = $d8;

        $d3 = $d2;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label224:
        $d3 = $d5;

        goto label171;

     label225:
        $d5 = $d8;

        goto label168;

     label226:
        $d5 = $d7;

        $d3 = $d2;

        $d4 = $d7;

        $d6 = $d8;

        goto label161;

     label227:
        $d3 = $d5;

        goto label164;

     label228:
        $d2 = $d3;

        goto label158;

     label229:
        goto label148;

     label230:
        $d3 = 0.0;

        goto label123;

     label231:
        $d7 = 0.0;

        goto label108;

     label232:
        goto label103;

     label233:
        return;
    }

    private void a(int, int, com.metrictrade.and.fs, int, int)
    {
        double[] $r2, $r4;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i7;
        double $d0, $d1, $d2, $d3;
        boolean $z0;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: com.metrictrade.and.fs;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = $i0 + 1;

        $d0 = (double) $i4;

        $d0 = 2.0 / $d0;

        $i4 = $r1.<com.metrictrade.and.fs: int h>;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i5 = lengthof $r3;

        if $i2 < $i5 goto label03;

        $r4 = null;

     label01:
        if $r4 == null goto label02;

        if $i4 >= $i0 goto label04;

     label02:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label03:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[$i2];

        goto label01;

     label04:
        $i2 = lengthof $r4;

        if $i4 <= $i2 goto label05;

        $i4 = lengthof $r4;

     label05:
        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i3];

        $d1 = $r4[0];

        $d2 = $r4[0];

        $b6 = $d1 cmpl $d2;

        if $b6 != 0 goto label08;

        $d1 = $r4[0];

     label06:
        $r2[0] = $d1;

        $z0 = 0;

        $d1 = 0.0;

        $i2 = 0;

     label07:
        if $i2 < $i4 goto label09;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r4, $i3);

        return;

     label08:
        $d1 = #NaN;

        goto label06;

     label09:
        $d2 = $r4[$i2];

        $d3 = $r4[$i2];

        $b6 = $d2 cmpl $d3;

        if $b6 != 0 goto label11;

        if $z0 != 0 goto label12;

        $d1 = $r4[$i2];

        $z0 = 1;

     label10:
        if $i1 != 0 goto label13;

        $r2[$i2] = $d1;

     label11:
        $i2 = $i2 + 1;

        goto label07;

     label12:
        $d2 = $r4[$i2];

        $d2 = $d2 * $d0;

        $d3 = 1.0 - $d0;

        $d1 = $d1 * $d3;

        $d1 = $d1 + $d2;

        goto label10;

     label13:
        $i5 = $i1 + $i2;

        $i7 = lengthof $r2;

        if $i5 >= $i7 goto label11;

        $i5 = $i2 + $i1;

        $r2[$i5] = $d1;

        goto label11;
    }

    private void a(int, com.metrictrade.and.fs, int, int)
    {
        double[] $r2, $r4;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6, $i7;
        double $d0, $d1, $d2;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.fs;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label01;

        if $i0 < $i3 goto label02;

     label01:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label02:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i4 = lengthof $r3;

        if $i1 < $i4 goto label04;

        $r4 = null;

     label03:
        if $r4 != null goto label05;

        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label04:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[$i1];

        goto label03;

     label05:
        $i1 = lengthof $r4;

        if $i3 <= $i1 goto label06;

        $i3 = lengthof $r4;

     label06:
        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i2];

        $d1 = $r4[0];

        $d0 = $r4[0];

        $b5 = $d1 cmpl $d0;

        if $b5 != 0 goto label09;

        $d1 = $r4[0];

     label07:
        $r2[0] = $d1;

        $i1 = $i0 + -1;

     label08:
        if $i1 < $i3 goto label10;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r4, $i2);

        return;

     label09:
        $d1 = 0.0;

        goto label07;

     label10:
        $d1 = $r4[$i1];

        $d0 = $r4[$i1];

        $b5 = $d1 cmpl $d0;

        if $b5 != 0 goto label13;

        $i4 = 0;

        $d1 = 0.0;

        $i6 = 0;

     label11:
        if $i6 < $i0 goto label14;

        if $i4 != 0 goto label17;

        if $i1 <= 0 goto label16;

        $i4 = $i1 + -1;

        $d1 = $r2[$i4];

     label12:
        $r2[$i1] = $d1;

     label13:
        $i1 = $i1 + 1;

        goto label08;

     label14:
        $i7 = $i1 - $i6;

        $d2 = $r4[$i7];

        $i7 = $i1 - $i6;

        $d0 = $r4[$i7];

        $b5 = $d2 cmpl $d0;

        if $b5 != 0 goto label15;

        $i7 = $i1 - $i6;

        $d0 = $r4[$i7];

        $d1 = $d1 + $d0;

        $i4 = $i4 + 1;

     label15:
        $i6 = $i6 + 1;

        goto label11;

     label16:
        $d1 = 0.0;

        goto label12;

     label17:
        $d0 = (double) $i4;

        $d1 = $d1 / $d0;

        $r2[$i1] = $d1;

        goto label13;
    }

    private void a(int, com.metrictrade.and.fs, com.metrictrade.and.fy)
    {
        byte $b8;
        com.metrictrade.and.fy $r2;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r9;
        double[] $r3, $r4, $r5, $r6, $r7, $r8, $r10;
        long $l10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i9, $i11, $i12, $i13;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.fs;

        $r2 := @parameter2: com.metrictrade.and.fy;

        $i3 = 0;

        $i4 = r0.<com.metrictrade.and.fs: int h>;

        $i5 = 0;

        $i6 = 0;

        $i1 = $i0 >> 1;

        $i1 = $i1 + -1;

        if $r2 == null goto label01;

        $i5 = $r2.<com.metrictrade.and.fy: int w>;

        $i6 = $r2.<com.metrictrade.and.fy: int x>;

     label01:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[0];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r9[2];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r8 = $r9[5];

        $i7 = 0;

     label02:
        if $i7 < $i4 goto label05;

     label03:
        $i0 = $i3;

     label04:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[0];

        $i4 = lengthof $r3;

        if $i0 < $i4 goto label16;

        $r1.<com.metrictrade.and.fs: int h> = $i3;

        return;

     label05:
        $d0 = $r3[$i7];

        $b8 = $d0 cmpl 0.0;

        if $b8 == 0 goto label03;

        $b8 = $d0 cmpl $d0;

        if $b8 != 0 goto label03;

        $d1 = 5.0E-5 + $d0;

        $i9 = (int) $d1;

        $l10 = (long) $d0;

        $d1 = (double) $l10;

        $d0 = $d0 - $d1;

        $d0 = $d0 * 10000.0;

        $d0 = $d0 + 0.50001;

        $i2 = (int) $d0;

        $i11 = $i2 / 100;

        $i11 = $i11 * 60;

        $i2 = $i2 % 100;

        $i2 = $i2 + $i11;

        if $i2 >= $i5 goto label06;

        $i11 = $i2 + $i1;

        if $i11 <= $i5 goto label06;

        $i2 = $i5;

     label06:
        if $i6 <= 0 goto label07;

        if $i2 <= $i6 goto label07;

        $i11 = $i2 + $i1;

        if $i11 >= $i6 goto label07;

        $i2 = $i6;

     label07:
        $i2 = $i2 - $i5;

        $i2 = $i2 / $i0;

        $i2 = $i2 * $i0;

        $i2 = $i5 + $i2;

        $d0 = (double) $i9;

        $i11 = $i2 / 60;

        $i11 = $i11 * 100;

        $i12 = $i2 % 60;

        $i11 = $i11 + $i12;

        $d1 = (double) $i11;

        $d1 = $d1 / 10000.0;

        $d0 = $d0 + $d1;

        $d1 = $r7[$i7];

        $d5 = $r8[$i7];

        $d4 = $r6[$i7];

        $d3 = $r5[$i7];

        $d2 = $r4[$i7];

        $i11 = $i7 + 1;

     label08:
        if $i11 < $i4 goto label12;

     label09:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[0];

        $i9 = lengthof $r10;

        if $i3 < $i9 goto label11;

        $i9 = 5;

     label10:
        if $i9 >= 0 goto label15;

     label11:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[2];

        $r10[$i3] = $d1;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[1];

        $r10[$i3] = $d2;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[3];

        $r10[$i3] = $d3;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[4];

        $r10[$i3] = $d4;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[5];

        $r10[$i3] = $d5;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[0];

        $r10[$i3] = $d0;

        $i3 = $i3 + 1;

        $i7 = $i7 + 1;

        goto label02;

     label12:
        $d6 = $r3[$i11];

        $b8 = $d6 cmpl 0.0;

        if $b8 == 0 goto label09;

        $b8 = $d6 cmpl $d6;

        if $b8 != 0 goto label09;

        $d7 = 5.0E-5 + $d6;

        $i13 = (int) $d7;

        $l10 = (long) $d6;

        $d7 = (double) $l10;

        $d6 = $d6 - $d7;

        $d6 = $d6 * 10000.0;

        $d6 = $d6 + 0.50001;

        $i12 = (int) $d6;

        if $i9 != $i13 goto label09;

        $i13 = $i12 / 100;

        $i13 = $i13 * 60;

        $i12 = $i12 % 100;

        $i12 = $i13 + $i12;

        if $i12 >= $i5 goto label13;

        $i13 = $i12 + $i1;

        if $i13 <= $i5 goto label13;

        $i12 = $i5;

     label13:
        if $i6 <= 0 goto label14;

        if $i12 <= $i6 goto label14;

        $i13 = $i12 + $i1;

        if $i13 >= $i6 goto label14;

        $i12 = $i6;

     label14:
        $i13 = $i0 + $i2;

        if $i12 >= $i13 goto label09;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r10 = $r9[1];

        $d2 = $r10[$i11];

        $d6 = $r5[$i11];

        $d3 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d3, $d6);

        $d6 = $r6[$i11];

        $d4 = staticinvoke <com.metrictrade.and.dc: double c(double,double)>($d4, $d6);

        $d6 = $r8[$i11];

        $d5 = $d5 + $d6;

        $i7 = $i11;

        $i11 = $i11 + 1;

        goto label08;

     label15:
        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i3);

        $i9 = $i9 + -1;

        goto label10;

     label16:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[0];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r4[$i0] = #NaN;

        $r3[$i0] = #NaN;

        $i0 = $i0 + 1;

        goto label04;
    }

    private void a(int, boolean, com.metrictrade.and.fs, int, int)
    {
        double[] $r2, $r4;
        byte $b3;
        int $i0, $i1, $i2, $i4, $i5;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: com.metrictrade.and.fs;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i4 = lengthof $r3;

        if $i1 < $i4 goto label03;

        $r4 = null;

     label01:
        if $r4 == null goto label02;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i0 goto label04;

     label02:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label03:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[$i1];

        goto label01;

     label04:
        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i2];

        $i1 = $i0;

     label05:
        $i4 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 < $i4 goto label06;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r4, $i2);

        return;

     label06:
        $d1 = 0.0;

        $d2 = 0.0;

        $d3 = 0.0;

        $d4 = 0.0;

        $d5 = 0.0;

        $d6 = 0.0;

        $i4 = 0;

        $z1 = 1;

     label07:
        if $i4 < $i0 goto label09;

        $b3 = $d5 cmpl 0.0;

        if $b3 == 0 goto label15;

        $b3 = $d5 cmpg 4.9E-323;

        $i4 = (int) $b3;

        if $i4 >= 0 goto label13;

        $r2[$i1] = #NaN;

     label08:
        $i1 = $i1 + 1;

        goto label05;

     label09:
        $d7 = (double) $i4;

        $i5 = $i1 - $i4;

        $d8 = $r4[$i5];

        $b3 = $d8 cmpl $d8;

        if $b3 != 0 goto label16;

        if $z1 == 0 goto label12;

        $z1 = 0;

        $d2 = $d8;

        $d1 = $d7;

     label10:
        $d4 = $d8 + $d4;

        $d3 = $d7 + $d3;

        $d8 = $d1;

     label11:
        $i4 = $i4 + 1;

        $d1 = $d8;

        goto label07;

     label12:
        $d9 = $d7 - $d1;

        $d0 = $d8 - $d2;

        $d10 = $d9 * $d9;

        $d11 = (double) $i4;

        $d10 = $d10 * $d11;

        $d11 = (double) $i4;

        $d11 = $d11 + 1.0;

        $d10 = $d10 / $d11;

        $d5 = $d5 + $d10;

        $d10 = $d9 * $d0;

        $d11 = (double) $i4;

        $d10 = $d10 * $d11;

        $d11 = (double) $i4;

        $d11 = $d11 + 1.0;

        $d10 = $d10 / $d11;

        $d6 = $d6 + $d10;

        $d10 = (double) $i4;

        $d10 = $d10 + 1.0;

        $d9 = $d9 / $d10;

        $d1 = $d1 + $d9;

        $d9 = (double) $i4;

        $d9 = $d9 + 1.0;

        $d0 = $d0 / $d9;

        $d2 = $d2 + $d0;

        goto label10;

     label13:
        if $z0 == 0 goto label14;

        $d4 = neg $d6;

        $d5 = $d4 / $d5;

        $r2[$i1] = $d5;

        goto label08;

     label14:
        $d5 = $d6 / $d5;

        $d5 = $d5 * $d3;

        $d5 = $d4 - $d5;

        $d4 = (double) $i0;

        $d5 = $d5 / $d4;

        $r2[$i1] = $d5;

        goto label08;

     label15:
        $r2[$i1] = #NaN;

        goto label08;

     label16:
        $d8 = $d1;

        goto label11;
    }

    private void a(int, boolean, boolean, com.metrictrade.and.fs, int, int)
    {
        double[] $r2, $r4;
        com.metrictrade.and.fs r0, $r1;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        double[][] $r3;
        boolean $z0, $z1;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $z0 := @parameter1: boolean;

        $z1 := @parameter2: boolean;

        $r1 := @parameter3: com.metrictrade.and.fs;

        $i1 := @parameter4: int;

        $i2 := @parameter5: int;

        if $i0 <= 0 goto label01;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label02;

     label01:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label02:
        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i2];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i3 = lengthof $r3;

        if $i1 < $i3 goto label05;

        $r4 = null;

     label03:
        $i1 = $i0;

     label04:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i3 goto label06;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r4, $i2);

        return;

     label05:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[$i1];

        goto label03;

     label06:
        $d0 = $r4[$i1];

        $d1 = $r4[$i1];

        $b4 = $d0 cmpl $d1;

        if $b4 != 0 goto label07;

        $i3 = $i1 - $i0;

        $d0 = $r4[$i3];

        $i3 = $i1 - $i0;

        $d1 = $r4[$i3];

        $b4 = $d0 cmpl $d1;

        if $b4 != 0 goto label07;

        $i3 = $i1 - $i0;

        $d0 = $r4[$i3];

        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label09;

     label07:
        $r2[$i1] = #NaN;

     label08:
        $i1 = $i1 + 1;

        goto label04;

     label09:
        if $z0 == 0 goto label10;

        $d1 = $r4[$i1];

        $i3 = $i1 - $i0;

        $d0 = $r4[$i3];

        $d0 = $d1 - $d0;

        $d0 = 100.0 * $d0;

        $i3 = $i1 - $i0;

        $d1 = $r4[$i3];

        $d0 = $d0 / $d1;

        $r2[$i1] = $d0;

        goto label08;

     label10:
        if $z1 == 0 goto label11;

        $d0 = $r4[$i1];

        $i3 = $i1 - $i0;

        $d1 = $r4[$i3];

        $d0 = $d0 - $d1;

        $r2[$i1] = $d0;

        goto label08;

     label11:
        $d0 = $r4[$i1];

        $d0 = 100.0 * $d0;

        $i3 = $i1 - $i0;

        $d1 = $r4[$i3];

        $d1 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d1);

        $d0 = $d0 / $d1;

        $r2[$i1] = $d0;

        goto label08;
    }

    private void a(int, double[])
    {
        double[] $r1, $r3, $r4;
        com.metrictrade.and.fs r0;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        double[][] $r2;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: double[];

        $i1 = 0;

        if $r1 == null goto label09;

        $i2 = 0;

        $i3 = 0;

     label01:
        $i4 = r0.<com.metrictrade.and.fs: int h>;

        if $i2 >= $i4 goto label02;

        $i4 = lengthof $r1;

        if $i2 < $i4 goto label04;

     label02:
        $i0 = $i0 + $i3;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r2[1];

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[3];

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r2[4];

     label03:
        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label10;

        if $i1 < $i0 goto label06;

        return;

     label04:
        $d0 = $r1[$i2];

        $d1 = $r1[$i2];

        $b5 = $d0 cmpl $d1;

        if $b5 != 0 goto label05;

        $d0 = $r1[$i2];

        $b5 = $d0 cmpl 0.0;

        if $b5 != 0 goto label02;

     label05:
        $i3 = $i3 + 1;

        $i2 = $i2 + 1;

        goto label01;

     label06:
        $r1[$i1] = #NaN;

        if $r3 == null goto label07;

        $i2 = lengthof $r3;

        if $i1 >= $i2 goto label07;

        $d0 = $r1[$i1];

        $r3[$i1] = $d0;

     label07:
        if $r4 == null goto label08;

        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label08;

        $d0 = $r1[$i1];

        $r4[$i1] = $d0;

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $i3 = 0;

        goto label02;

     label10:
        return;
    }

    private void a(int, double[], int)
    {
        double[] $r1;
        com.metrictrade.and.fs r0;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double[][] $r2;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: double[];

        $i1 := @parameter2: int;

        $i2 = 0;

        if $r1 == null goto label7;

        $i3 = 0;

        $i4 = 0;

     label1:
        $i5 = r0.<com.metrictrade.and.fs: int h>;

        if $i3 >= $i5 goto label2;

        $i5 = lengthof $r1;

        if $i3 < $i5 goto label4;

     label2:
        $i0 = $i0 + $i4;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r2[$i1];

     label3:
        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i2 >= $i1 goto label8;

        if $i2 < $i0 goto label6;

        return;

     label4:
        $d0 = $r1[$i3];

        $d1 = $r1[$i3];

        $b6 = $d0 cmpl $d1;

        if $b6 != 0 goto label5;

        $d0 = $r1[$i3];

        $b6 = $d0 cmpl 0.0;

        if $b6 != 0 goto label2;

     label5:
        $i4 = $i4 + 1;

        $i3 = $i3 + 1;

        goto label1;

     label6:
        $r1[$i2] = #NaN;

        $i2 = $i2 + 1;

        goto label3;

     label7:
        $i4 = 0;

        goto label2;

     label8:
        return;
    }

    private void a(int, double[], int, int, int)
    {
        double[] $r1;
        com.metrictrade.and.fs r0;
        byte $b8;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7;
        double[][] $r2;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: double[];

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 := @parameter4: int;

        $i4 = 0;

        if $r1 == null goto label13;

        $i5 = 0;

        $i6 = 0;

     label01:
        $i7 = r0.<com.metrictrade.and.fs: int h>;

        if $i5 >= $i7 goto label02;

        $i7 = lengthof $r1;

        if $i5 < $i7 goto label08;

     label02:
        $i0 = $i6 + $i0;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r2[$i1];

        $i1 = 0;

     label03:
        $i5 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i5 goto label04;

        if $i1 < $i0 goto label10;

     label04:
        if $i2 <= 0 goto label06;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r2[$i2];

        $i1 = 0;

     label05:
        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label06;

        if $i1 < $i0 goto label11;

     label06:
        if $i3 <= 0 goto label14;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r2[$i3];

     label07:
        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i4 >= $i1 goto label14;

        if $i4 < $i0 goto label12;

        return;

     label08:
        $d0 = $r1[$i5];

        $d1 = $r1[$i5];

        $b8 = $d0 cmpl $d1;

        if $b8 != 0 goto label09;

        $d0 = $r1[$i5];

        $b8 = $d0 cmpl 0.0;

        if $b8 != 0 goto label02;

     label09:
        $i6 = $i6 + 1;

        $i5 = $i5 + 1;

        goto label01;

     label10:
        $r1[$i1] = #NaN;

        $i1 = $i1 + 1;

        goto label03;

     label11:
        $r1[$i1] = #NaN;

        $i1 = $i1 + 1;

        goto label05;

     label12:
        $r1[$i4] = #NaN;

        $i4 = $i4 + 1;

        goto label07;

     label13:
        $i6 = 0;

        goto label02;

     label14:
        return;
    }

    private void a(com.metrictrade.and.fs, int)
    {
        double[] $r2, $r4;
        com.metrictrade.and.fs r0, $r1;
        int $i0, $i1, $i2;
        double[][] $r3;
        double $d0;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $i2 = r0.<com.metrictrade.and.fs: int h>;

        $r2 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i0, $i2);

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[4];

        if $r4 == null goto label3;

        $i0 = 0;

     label1:
        if $i0 < $i1 goto label2;

        return;

     label2:
        $d0 = $r4[$i0];

        $r2[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }

    private void a(com.metrictrade.and.fs, int, int)
    {
        double[] $r3;
        com.metrictrade.and.fs r0, $r1;
        byte $b3;
        int $i0, $i1, $i2;
        double[][] $r2;
        double $d0, $d1, $d2, $d3, $d4, $d5;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i0 = $i0 + 1;

        $d0 = (double) $i0;

        $d0 = 2.0 / $d0;

        $d2 = 0.0;

        $i0 = $i1 + 1;

        $d1 = (double) $i0;

        $d1 = 2.0 / $d1;

        $d3 = 0.0;

        $i0 = 0;

     label1:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i2 goto label2;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i1, $r3);

        return;

     label2:
        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d4 = $r3[$i0];

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d5 = $r3[$i0];

        $b3 = $d4 cmpl $d5;

        if $b3 != 0 goto label5;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d4 = $r3[$i0];

        $b3 = $d4 cmpl 0.0;

        if $b3 == 0 goto label5;

        $b3 = $d2 cmpl 0.0;

        if $b3 != 0 goto label6;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d2 = $r3[$i0];

     label3:
        $b3 = $d3 cmpl 0.0;

        if $b3 != 0 goto label7;

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d3 = $r3[$i0];

     label4:
        $b3 = $d3 cmpl 0.0;

        if $b3 != 0 goto label8;

        $r2 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $r3[$i0] = #NaN;

     label5:
        $i0 = $i0 + 1;

        goto label1;

     label6:
        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d4 = $r3[$i0];

        $d4 = $d4 * $d0;

        $d5 = 1.0 - $d0;

        $d2 = $d2 * $d5;

        $d2 = $d2 + $d4;

        goto label3;

     label7:
        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d4 = $r3[$i0];

        $d4 = $d4 * $d1;

        $d5 = 1.0 - $d1;

        $d3 = $d3 * $d5;

        $d3 = $d3 + $d4;

        goto label4;

     label8:
        $r2 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $d4 = $d2 / $d3;

        $r3[$i0] = $d4;

        goto label5;
    }

    private void a(com.metrictrade.and.fs, int, int, int)
    {
        double[] $r2, $r4;
        com.metrictrade.and.fs r0, $r1;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        double[][] $r3;
        double $d0, $d1, $d2;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label1;

        if $i0 < $i3 goto label2;

     label1:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label2:
        $i4 = $i2 + 3;

        $i4 = $i4 + -1;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i0, 0, $r1, $i1, $i4);

        $i1 = $i2 + 3;

        $i1 = $i1 + -1;

        $i4 = $i2 + 4;

        $i4 = $i4 + -1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i0, 0, $r1, $i1, $i4);

        $i1 = $i2 + 4;

        $i1 = $i1 + -1;

        $i4 = $i2 + 2;

        $i4 = $i4 + -1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i0, 0, $r1, $i1, $i4);

        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i2 + 2;

        $i1 = $i1 + -1;

        $r4 = $r3[$i1];

        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i2];

        $d1 = 0.0;

        $i1 = 0;

     label3:
        if $i1 < $i3 goto label4;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r2, $i2);

        return;

     label4:
        $d2 = $r4[$i1];

        $b5 = $d2 cmpl $d2;

        if $b5 != 0 goto label6;

        $b5 = $d1 cmpl 0.0;

        if $b5 == 0 goto label6;

        $b5 = $d1 cmpl $d1;

        if $b5 != 0 goto label6;

        $d0 = $d2 - $d1;

        $d0 = 100.0 * $d0;

        $d1 = $d0 / $d1;

        $r2[$i1] = $d1;

     label5:
        $i1 = $i1 + 1;

        $d1 = $d2;

        goto label3;

     label6:
        $r2[$i1] = #NaN;

        goto label5;
    }

    private void a(com.metrictrade.and.fs, boolean)
    {
        double[] $r3, $r4, $r5;
        com.metrictrade.and.fs r0, $r1;
        byte $b2;
        int $i0, $i1;
        double[][] $r2;
        boolean $z0;
        double $d0, $d1, $d2, $d3, $d4;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $z0 := @parameter1: boolean;

        $d0 = 1000.0;

        $d1 = 0.0;

        $d2 = 0.0;

        $r2 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[1];

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r2[1];

        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r2[5];

        $i0 = 0;

     label1:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label2;

        return;

     label2:
        $d3 = $r4[$i0];

        $d4 = $r4[$i0];

        $b2 = $d3 cmpl $d4;

        if $b2 != 0 goto label6;

        $d3 = $r5[$i0];

        $d4 = $r5[$i0];

        $b2 = $d3 cmpl $d4;

        if $b2 != 0 goto label6;

        $b2 = $d1 cmpl 0.0;

        if $b2 != 0 goto label3;

        $d1 = $r4[$i0];

     label3:
        $b2 = $d2 cmpl 0.0;

        if $b2 != 0 goto label4;

        $d2 = $r5[$i0];

     label4:
        if $z0 == 0 goto label7;

        $d3 = $r5[$i0];

        $b2 = $d3 cmpl $d2;

        $i1 = (int) $b2;

        if $i1 <= 0 goto label7;

        $d2 = $r4[$i0];

        $d2 = $d2 - $d1;

        $d2 = $d2 * $d0;

        $d1 = $d2 / $d1;

        $d0 = $d0 + $d1;

     label5:
        $d1 = $r4[$i0];

        $d2 = $r5[$i0];

        $r3[$i0] = $d0;

     label6:
        $i0 = $i0 + 1;

        goto label1;

     label7:
        if $z0 != 0 goto label5;

        $d3 = $r5[$i0];

        $b2 = $d3 cmpg $d2;

        $i1 = (int) $b2;

        if $i1 >= 0 goto label5;

        $d2 = $r4[$i0];

        $d2 = $d2 - $d1;

        $d2 = $d2 * $d0;

        $d1 = $d2 / $d1;

        $d0 = $d0 + $d1;

        goto label5;
    }

    public static boolean a(com.metrictrade.and.fs)
    {
        int $i0;
        com.metrictrade.and.fs $r0;

        $r0 := @parameter0: com.metrictrade.and.fs;

        if $r0 == null goto label2;

        $i0 = $r0.<com.metrictrade.and.fs: int o>;

        if $i0 == 204 goto label1;

        $i0 = $r0.<com.metrictrade.and.fs: int o>;

        if $i0 != 205 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public static com.metrictrade.and.fr b(com.metrictrade.and.fs)
    {
        com.metrictrade.and.dd $r1;
        com.metrictrade.and.fs $r0;
        com.metrictrade.and.fr $r2;
        boolean $z0;

        $r0 := @parameter0: com.metrictrade.and.fs;

     label1:
        if $r0 != null goto label3;

     label2:
        return null;

     label3:
        $r1 = $r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $z0 = $r1 instanceof com.metrictrade.and.fr;

        if $z0 == 0 goto label4;

        $r2 = (com.metrictrade.and.fr) $r1;

        return $r2;

     label4:
        $z0 = $r1 instanceof com.metrictrade.and.fs;

        if $z0 == 0 goto label2;

        $r0 = (com.metrictrade.and.fs) $r1;

        goto label1;
    }

    private void b(int, com.metrictrade.and.fs, int, int)
    {
        double[] $r2, $r4;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.fs;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label01;

        if $i0 < $i3 goto label02;

     label01:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label02:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i4 = lengthof $r3;

        if $i1 < $i4 goto label04;

        $r4 = null;

     label03:
        if $r4 != null goto label05;

        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label04:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[$i1];

        goto label03;

     label05:
        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i2];

        $i1 = $i0;

     label06:
        if $i1 < $i3 goto label07;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r4, $i2);

        return;

     label07:
        $i4 = $i1 - $i0;

        $d0 = 0.0;

        $i4 = $i4 + 1;

        $i5 = 0;

        $d1 = 0.0;

     label08:
        if $i4 <= $i1 goto label10;

        if $i5 == 0 goto label12;

        $d2 = (double) $i5;

        $d1 = $d1 / $d2;

        $d2 = (double) $i5;

        $d0 = $d0 / $d2;

        $d1 = $d1 * $d1;

        $d0 = $d0 - $d1;

        $d0 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d0);

        $d0 = staticinvoke <com.metrictrade.and.dc: double k(double)>($d0);

        $r2[$i1] = $d0;

     label09:
        $i1 = $i1 + 1;

        goto label06;

     label10:
        $d2 = $r4[$i4];

        $b6 = $d2 cmpl 0.0;

        if $b6 == 0 goto label11;

        $b6 = $d2 cmpl $d2;

        if $b6 != 0 goto label11;

        $d3 = $d2 * $d2;

        $d0 = $d0 + $d3;

        $d1 = $d1 + $d2;

        $i5 = $i5 + 1;

     label11:
        $i4 = $i4 + 1;

        goto label08;

     label12:
        $r2[$i1] = #NaN;

        goto label09;
    }

    private void b(com.metrictrade.and.fs, int)
    {
        double[] $r2, $r4, $r5, $r6, $r7;
        byte $b2;
        int $i0, $i1;
        double $d0, $d1, $d2, $d3, $d4;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $d1 = 0.0;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[3];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r3[4];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r3[5];

        $r3 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r3[$i0];

        $i0 = 0;

     label1:
        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label2;

        return;

     label2:
        $d2 = $r4[$i0];

        $d0 = $r5[$i0];

        $b2 = $d2 cmpl $d0;

        if $b2 == 0 goto label3;

        $d3 = $r6[$i0];

        $d4 = $r6[$i0];

        $b2 = $d3 cmpl $d4;

        if $b2 != 0 goto label3;

        $d3 = $r6[$i0];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r3[1];

        $d4 = $r7[$i0];

        $d4 = 2.0 * $d4;

        $d4 = $d4 - $d0;

        $d4 = $d4 - $d2;

        $d3 = $d3 * $d4;

        $d0 = $d2 - $d0;

        $d0 = $d3 / $d0;

        $d1 = $d1 + $d0;

     label3:
        $r2[$i0] = $d1;

        $i0 = $i0 + 1;

        goto label1;
    }

    private void b(com.metrictrade.and.fs, int, int, int)
    {
        double[] $r2, $r3, $r4, $r6;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r5;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        $d1 = 0.0;

        $d2 = 0.0;

        $d3 = 0.0;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r5[$i1];

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i4 = $i1 + 3;

        $i4 = $i4 + -1;

        $r3 = $r5[$i4];

        $r5 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i1 + 4;

        $i1 = $i1 + -1;

        $r4 = $r5[$i1];

        $r6 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i2, $i3);

        $i1 = 0;

     label1:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i3 goto label2;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r2, $i2);

        return;

     label2:
        $d4 = $r3[$i1];

        $d0 = $r4[$i1];

        $d5 = $r2[$i1];

        $b5 = $d5 cmpl $d5;

        if $b5 != 0 goto label8;

        $b5 = $d3 cmpl 0.0;

        if $b5 != 0 goto label3;

        $d3 = $d5;

     label3:
        $b5 = $d4 cmpl $d4;

        if $b5 != 0 goto label4;

        $b5 = $d0 cmpl $d0;

        if $b5 != 0 goto label4;

        $d1 = $d4 - $d0;

        $d4 = $d3 - $d4;

        $d4 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d4);

        $d0 = $d3 - $d0;

        $d0 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d0);

        $d0 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d4, $d0);

        $d1 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d1, $d0);

     label4:
        if $i1 >= $i0 goto label7;

        $d2 = $d2 + $d1;

        $i3 = $i0 + -1;

        if $i1 != $i3 goto label6;

        $d0 = (double) $i0;

        $d2 = $d2 / $d0;

        $r6[$i1] = $d2;

     label5:
        $i1 = $i1 + 1;

        $d3 = $d5;

        goto label1;

     label6:
        $r6[$i1] = #NaN;

        goto label5;

     label7:
        $i3 = $i0 + -1;

        $d0 = (double) $i3;

        $d2 = $d0 * $d2;

        $d2 = $d2 + $d1;

        $d0 = (double) $i0;

        $d2 = $d2 / $d0;

        $r6[$i1] = $d2;

        goto label5;

     label8:
        $d5 = $d3;

        goto label5;
    }

    private void c(com.metrictrade.and.fs)
    {
        double[] $r2, $r4, $r5;
        com.metrictrade.and.fs r0, $r1;
        byte $b3;
        int $i0, $i1, $i2;
        double[][] $r3;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        $r2 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>(1, $i0);

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r3[4];

        if $r4 == null goto label5;

        if $r5 == null goto label5;

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        return;

     label2:
        $i2 = lengthof $r4;

        if $i1 >= $i2 goto label4;

        $i2 = lengthof $r5;

        if $i1 >= $i2 goto label4;

        $d0 = $r4[$i1];

        $d1 = $r4[$i1];

        $b3 = $d0 cmpl $d1;

        if $b3 != 0 goto label4;

        $d0 = $r5[$i1];

        $d1 = $r5[$i1];

        $b3 = $d0 cmpl $d1;

        if $b3 != 0 goto label4;

        $d0 = $r4[$i1];

        $d1 = $r5[$i1];

        $d0 = $d0 - $d1;

        $r2[$i1] = $d0;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        $r2[$i1] = #NaN;

        goto label3;

     label5:
        return;
    }

    private void c(com.metrictrade.and.fs, int)
    {
        double[] $r2, $r3;
        com.metrictrade.and.fs r0, $r1;
        byte $b1;
        int $i0, $i2, $i3, $i4;
        double[][] $r4;
        double $d0, $d1, $d2;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $r4 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r4[1];

        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i2 goto label2;

        $r4 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r4[1];

        $i2 = $i0 + -1;

     label1:
        $i3 = r0.<com.metrictrade.and.fs: int h>;

        if $i2 < $i3 goto label3;

     label2:
        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r2);

        return;

     label3:
        $i3 = $i2 - $i0;

        $i4 = $i3 + 1;

        $i3 = 0;

        $d1 = 0.0;

     label4:
        if $i4 <= $i2 goto label6;

        if $i3 <= 0 goto label8;

        $d0 = (double) $i3;

        $d1 = $d1 / $d0;

        $r3[$i2] = $d1;

     label5:
        $i2 = $i2 + 1;

        goto label1;

     label6:
        $d2 = $r2[$i4];

        $d0 = $r2[$i4];

        $b1 = $d2 cmpl $d0;

        if $b1 != 0 goto label7;

        $d0 = $r2[$i4];

        $d1 = $d1 + $d0;

        $i3 = $i3 + 1;

     label7:
        $i4 = $i4 + 1;

        goto label4;

     label8:
        $r3[$i2] = #NaN;

        goto label5;
    }

    private void c(com.metrictrade.and.fs, int, int, int)
    {
        double[] $r2, $r3, $r4, $r5, $r6;
        byte $b4;
        int $i0, $i1, $i2, $i3, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        com.metrictrade.and.fs r0, $r1;
        double[][] $r7;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 := @parameter3: int;

        if $i0 <= 0 goto label01;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label02;

     label01:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        return;

     label02:
        $d0 = (double) $i1;

        $d0 = $d0 / 10.0;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i0, 0, $r1, 0, 6);

        specialinvoke r0.<com.metrictrade.and.fs: void b(com.metrictrade.and.fs,int,int,int)>($r1, 10, 1, 2);

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,boolean,com.metrictrade.and.fs,int,int)>($i0, 0, $r1, 1, 4);

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,boolean,boolean,com.metrictrade.and.fs,int,int)>(12, 1, 1, $r1, 4, 5);

        $r7 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r7[6];

        $r7 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r7[2];

        $r7 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r7[1];

        $r7 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r7[3];

        $r7 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r7[5];

        $i1 = $i0;

        $d3 = 0.0;

        $d4 = 0.0;

     label03:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i3 goto label04;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>(1, 0, $r1, 5, 1);

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int,int,int)>($i0, $r4, 1, 3, 4);

        return;

     label04:
        $d5 = $r2[$i1];

        $d1 = $r3[$i1];

        $b4 = $d5 cmpl 0.0;

        if $b4 == 0 goto label15;

        $b4 = $d5 cmpl $d5;

        if $b4 != 0 goto label15;

        $b4 = $d1 cmpl $d1;

        if $b4 != 0 goto label15;

        $d6 = 0.0;

        $i3 = $i1 - $i0;

        $i3 = $i3 + 1;

        $i5 = 0;

        $d5 = 0.0;

     label05:
        if $i3 <= $i1 goto label11;

        if $i5 == 0 goto label16;

        $d2 = (double) $i5;

        $d6 = $d6 / $d2;

        $d2 = (double) $i5;

        $d5 = $d5 / $d2;

        $d6 = $d6 * $d6;

        $d5 = $d5 - $d6;

        $d5 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d5);

        $d5 = staticinvoke <com.metrictrade.and.dc: double k(double)>($d5);

     label06:
        $d1 = $d0 * $d1;

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label07;

        $d4 = (double) $i2;

        $d4 = $d4 * $d5;

        $d4 = $d4 / $d1;

     label07:
        $b4 = $d4 cmpg 1.0;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label14;

        $b4 = $d3 cmpg 1.0;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label13;

        $r5[$i1] = -1.0;

     label08:
        $r6[$i1] = 0.0;

     label09:
        $d3 = $d4;

     label10:
        $i1 = $i1 + 1;

        goto label03;

     label11:
        $d2 = $r4[$i3];

        $b4 = $d2 cmpl 0.0;

        if $b4 == 0 goto label12;

        $b4 = $d2 cmpl $d2;

        if $b4 != 0 goto label12;

        $d7 = $d2 * $d2;

        $d5 = $d5 + $d7;

        $d6 = $d6 + $d2;

        $i5 = $i5 + 1;

     label12:
        $i3 = $i3 + 1;

        goto label05;

     label13:
        $r5[$i1] = 0.0;

        goto label08;

     label14:
        $r5[$i1] = 1.0;

        goto label09;

     label15:
        $r6[$i1] = #NaN;

        $r5[$i1] = #NaN;

        goto label10;

     label16:
        $d5 = 0.0;

        goto label06;
    }

    public static boolean f(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 == 204 goto label1;

        if $i0 == 205 goto label1;

        return 0;

     label1:
        return 1;
    }

    public final double a(int, int)
    {
        com.metrictrade.and.fs r0;
        int $i0, $i1;
        double[] $r2;
        double[][] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r1[$i0];

        if $r2 == null goto label1;

        if $i1 < 0 goto label1;

        $i0 = lengthof $r2;

        if $i1 <= $i0 goto label2;

     label1:
        return #NaN;

     label2:
        $d0 = $r2[$i1];

        return $d0;
    }

    public final java.lang.String a(boolean)
    {
        com.metrictrade.and.fs r0;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r1, $r2;
        boolean $z0;

        r0 := @this: com.metrictrade.and.fs;

        $z0 := @parameter0: boolean;

        $i0 = r0.<com.metrictrade.and.fs: int o>;

        if $i0 >= 100 goto label1;

        $r1 = r0.<com.metrictrade.and.fs: java.lang.String a>;

        return $r1;

     label1:
        $i3 = r0.<com.metrictrade.and.fs: int o>;

        $i4 = r0.<com.metrictrade.and.fs: int q>;

        $i0 = r0.<com.metrictrade.and.fs: int r>;

        $i1 = r0.<com.metrictrade.and.fs: int s>;

        $i2 = r0.<com.metrictrade.and.fs: int w>;

        $r1 = virtualinvoke r0.<com.metrictrade.and.fs: java.lang.String b(int)>(2);

        $r2 = virtualinvoke r0.<com.metrictrade.and.fs: java.lang.String b(int)>(32);

        $r1 = staticinvoke <com.metrictrade.and.ga: java.lang.String a(int,int,int,int,int,java.lang.String,java.lang.String,boolean)>($i3, $i4, $i0, $i1, $i2, $r1, $r2, $z0);

        return $r1;
    }

    public final void a(double, boolean, com.metrictrade.and.am)
    {
        double[] $r4;
        java.lang.String[] $r2;
        long $l3;
        com.metrictrade.and.fs r0;
        byte $b2;
        com.metrictrade.and.am $r1;
        int $i0, $i1;
        java.lang.String $r5;
        double[][] $r3;
        double $d0, $d1, $d2, $d3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.fs;

        $d0 := @parameter0: double;

        $z0 := @parameter1: boolean;

        $r1 := @parameter2: com.metrictrade.and.am;

        $d1 = 0.0;

        $i0 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 != 0 goto label01;

        return;

     label01:
        $i0 = r0.<com.metrictrade.and.fs: int h>;

        $r2 = newarray (java.lang.String)[$i0];

        r0.<com.metrictrade.and.fs: java.lang.String[] L> = $r2;

        $i0 = 0;

     label02:
        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label07;

        $d0 = $d1 + $d0;

        $b2 = $d0 cmpg 0.0;

        $i0 = (int) $b2;

        if $i0 > 0 goto label12;

        $d0 = 1.0;

     label03:
        $i0 = 0;

     label04:
        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i1 goto label13;

        if $z0 == 0 goto label11;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d1 = $r4[$i0];

        $d1 = 100.0 * $d1;

        $d1 = $d1 / $d0;

        $l3 = staticinvoke <com.metrictrade.and.dc: long d(double)>($d1);

        $i1 = (int) $l3;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d1 = $r4[$i0];

        $d1 = 100.0 * $d1;

        $d1 = $d1 / $d0;

        if $i1 == 0 goto label10;

        $b2 = 0;

     label05:
        staticinvoke <com.metrictrade.and.fj: void a(double,int,boolean,com.metrictrade.and.am,boolean)>($d1, $b2, 1, $r1, 0);

     label06:
        $r2 = r0.<com.metrictrade.and.fs: java.lang.String[] L>;

        $r5 = virtualinvoke $r1.<com.metrictrade.and.am: java.lang.String toString()>();

        $r2[$i0] = $r5;

        $i0 = $i0 + 1;

        goto label04;

     label07:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d2 = $r4[$i0];

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d3 = $r4[$i0];

        $b2 = $d2 cmpl $d3;

        if $b2 != 0 goto label09;

        if $z0 == 0 goto label08;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d2 = $r4[$i0];

        $b2 = $d2 cmpl 0.0;

        $i1 = (int) $b2;

        if $i1 <= 0 goto label09;

     label08:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d2 = $r4[$i0];

        $d1 = $d1 + $d2;

     label09:
        $i0 = $i0 + 1;

        goto label02;

     label10:
        $b2 = 1;

        goto label05;

     label11:
        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r3[1];

        $d1 = $r4[$i0];

        staticinvoke <com.metrictrade.and.fj: void a(double,int,boolean,com.metrictrade.and.am,boolean)>($d1, 2, 1, $r1, 0);

        goto label06;

     label12:
        goto label03;

     label13:
        return;
    }

    public final void a(int)
    {
        double[] $r1, $r4, $r9;
        char[][] $r5, $r7;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[][][] $r2;
        double $d0, $d1;
        com.metrictrade.and.fs r0;
        char[] $r6, $r8;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label16;

        $r2 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $i1 = lengthof $r2;

        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $i2 = lengthof $r3;

        $r3 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1 = $r3[0];

        $i3 = 0;

     label01:
        $i4 = r0.<com.metrictrade.and.fs: int h>;

        $i4 = $i4 + -1;

        if $i3 < $i4 goto label03;

        $i0 = 0;

     label02:
        $i3 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label07;

        return;

     label03:
        $i4 = $i3 + 1;

     label04:
        $i5 = r0.<com.metrictrade.and.fs: int h>;

        if $i4 < $i5 goto label05;

        $i3 = $i3 + 1;

        goto label01;

     label05:
        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r4 = $r3[$i0];

        $d0 = $r1[$i3];

        $i5 = (int) $d0;

        $d0 = $r4[$i5];

        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r4 = $r3[$i0];

        $d1 = $r1[$i4];

        $i5 = (int) $d1;

        $d1 = $r4[$i5];

        $b6 = $d0 cmpg $d1;

        $i5 = (int) $b6;

        if $i5 >= 0 goto label06;

        $d0 = $r1[$i3];

        $d1 = $r1[$i4];

        $r1[$i3] = $d1;

        $r1[$i4] = $d0;

     label06:
        $i4 = $i4 + 1;

        goto label04;

     label07:
        $i3 = 0;

     label08:
        if $i3 < $i1 goto label12;

        $i3 = 0;

     label09:
        if $i3 < $i2 goto label13;

        $i3 = $i0 + 1;

     label10:
        $i4 = r0.<com.metrictrade.and.fs: int h>;

        if $i3 < $i4 goto label14;

     label11:
        $d0 = (double) $i0;

        $r1[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label02;

     label12:
        $r2 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r5 = $r2[$i3];

        $r6 = $r5[$i0];

        $r2 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r5 = $r2[$i3];

        $r2 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r7 = $r2[$i3];

        $d0 = $r1[$i0];

        $i4 = (int) $d0;

        $r8 = $r7[$i4];

        $r5[$i0] = $r8;

        $r2 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r5 = $r2[$i3];

        $d0 = $r1[$i0];

        $i4 = (int) $d0;

        $r5[$i4] = $r6;

        $i3 = $i3 + 1;

        goto label08;

     label13:
        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r4 = $r3[$i3];

        $d0 = $r4[$i0];

        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r4 = $r3[$i3];

        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r9 = $r3[$i3];

        $d1 = $r1[$i0];

        $i4 = (int) $d1;

        $d1 = $r9[$i4];

        $r4[$i0] = $d1;

        $r3 = r0.<com.metrictrade.and.fs: double[][] C>;

        $r4 = $r3[$i3];

        $d1 = $r1[$i0];

        $i4 = (int) $d1;

        $r4[$i4] = $d0;

        $i3 = $i3 + 1;

        goto label09;

     label14:
        $d0 = $r1[$i3];

        $d1 = (double) $i0;

        $b6 = $d0 cmpl $d1;

        if $b6 != 0 goto label15;

        $d0 = $r1[$i0];

        $r1[$i3] = $d0;

        goto label11;

     label15:
        $i3 = $i3 + 1;

        goto label10;

     label16:
        return;
    }

    public final void a(com.metrictrade.and.fs, int, int, int, int, int, boolean, com.metrictrade.and.fy, int, int)
    {
        byte $b10;
        boolean $z0, $z1, $z2;
        com.metrictrade.and.fy $r2;
        com.metrictrade.and.fs r0, $r1, $r13;
        com.metrictrade.and.fp $r8, $r17;
        double[][] $r9, $r10;
        double[] $r3, $r4, $r5, $r6, $r7, $r14, $r15, $r16;
        long $l11;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9;
        java.lang.String $r11, $r12;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11;

        r0 := @this: com.metrictrade.and.fs;

        $r1 := @parameter0: com.metrictrade.and.fs;

        $i6 := @parameter1: int;

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $i2 := @parameter4: int;

        $i3 := @parameter5: int;

        $z0 := @parameter6: boolean;

        $r2 := @parameter7: com.metrictrade.and.fy;

        $i4 := @parameter8: int;

        $i5 := @parameter9: int;

        $z1 = staticinvoke <com.metrictrade.and.ga: boolean d(int)>($i6);

        if $i6 < 400 goto label301;

        $i0 = r0.<com.metrictrade.and.fs: int q>;

        $i1 = r0.<com.metrictrade.and.fs: int r>;

        $i2 = r0.<com.metrictrade.and.fs: int s>;

        r0.<com.metrictrade.and.fs: int w> = $i3;

     label001:
        if $i6 <= 500 goto label005;

        if $i0 != 0 goto label005;

        $r8 = $r1.<com.metrictrade.and.fs: com.metrictrade.and.fp J>;

        if $r8 != null goto label002;

        $r17 = new com.metrictrade.and.fp;

        $i0 = $i6 + -501;

        specialinvoke $r17.<com.metrictrade.and.fp: void <init>(int)>($i0);

        $r1.<com.metrictrade.and.fs: com.metrictrade.and.fp J> = $r17;

     label002:
        $r1.<com.metrictrade.and.fs: int c> = 3377152;

        $r1.<com.metrictrade.and.fs: int o> = $i6;

        $r1.<com.metrictrade.and.fs: int q> = 0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r10[0];

        $r9[0] = $r3;

        $r8 = $r1.<com.metrictrade.and.fs: com.metrictrade.and.fp J>;

        virtualinvoke $r8.<com.metrictrade.and.fp: void a(com.metrictrade.and.fs,com.metrictrade.and.fs,com.metrictrade.and.fy)>(r0, $r1, $r2);

     label003:
        if $i6 != 411 goto label302;

        $i6 = r0.<com.metrictrade.and.fs: int o>;

        if $i6 != 221 goto label302;

        if $r1 == null goto label302;

        $i6 = r0.<com.metrictrade.and.fs: int h>;

        virtualinvoke r0.<com.metrictrade.and.fs: double[] b(int,int)>(4, $i6);

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[4];

        if $r3 == null goto label302;

        $i0 = 0;

     label004:
        if $i0 < $i6 goto label289;

        return;

     label005:
        $r8 = r0.<com.metrictrade.and.fs: com.metrictrade.and.fp J>;

        if $r8 != null goto label023;

        if $z1 != 0 goto label007;

        $z2 = staticinvoke <com.metrictrade.and.ga: boolean b(int)>($i6);

        if $z2 != 0 goto label007;

        $i7 = r0.<com.metrictrade.and.fs: int h>;

        $r1.<com.metrictrade.and.fs: int h> = $i7;

        if $z0 != 0 goto label006;

        $i7 = $r1.<com.metrictrade.and.fs: int o>;

        if $i7 != $i6 goto label006;

        $i7 = $r1.<com.metrictrade.and.fs: int q>;

        if $i7 != $i0 goto label006;

        $i7 = $r1.<com.metrictrade.and.fs: int r>;

        if $i7 != $i1 goto label006;

        $i7 = $r1.<com.metrictrade.and.fs: int s>;

        if $i7 != $i2 goto label006;

        $i7 = $r1.<com.metrictrade.and.fs: int w>;

        if $i7 == $i3 goto label007;

     label006:
        $r11 = virtualinvoke r0.<com.metrictrade.and.fs: java.lang.String b(int)>(2);

        $r12 = $r1.<com.metrictrade.and.fs: java.lang.String F>;

        $r11 = staticinvoke <com.metrictrade.and.ga: java.lang.String a(int,int,int,int,int,java.lang.String,java.lang.String,boolean)>($i6, $i0, $i1, $i2, $i3, $r11, $r12, 0);

        $r1.<com.metrictrade.and.fs: java.lang.String a> = $r11;

     label007:
        if $i6 == 221 goto label008;

        if $i6 == 223 goto label008;

        if $i6 == 228 goto label008;

        if $i6 == 238 goto label008;

        if $i6 == 280 goto label008;

        if $i6 != 281 goto label022;

     label008:
        $i7 = $i2;

     label009:
        $i7 = staticinvoke <com.metrictrade.and.dc: int a(int,int)>(0, $i7);

        $r1.<com.metrictrade.and.fs: int z> = $i7;

        $r1.<com.metrictrade.and.fs: int o> = $i6;

        $r1.<com.metrictrade.and.fs: int q> = $i0;

        $r1.<com.metrictrade.and.fs: int r> = $i1;

        $r1.<com.metrictrade.and.fs: int s> = $i2;

        $r1.<com.metrictrade.and.fs: int w> = $i3;

        $r1.<com.metrictrade.and.fs: int u> = $i4;

        $r1.<com.metrictrade.and.fs: int v> = $i5;

     label010:
        if $z1 != 0 goto label019;

        $i7 = r0.<com.metrictrade.and.fs: int h>;

        $z0 = staticinvoke <com.metrictrade.and.ga: boolean b(int)>($i6);

        if $z0 == 0 goto label011;

        if $i6 != 64 goto label024;

        $i7 = $i7 / 24;

        $i7 = $i7 + 24;

     label011:
        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i5, $i7);

        $i8 = $i5 + -1;

        if $z0 != 0 goto label012;

        if $i6 == 109 goto label012;

        if $i6 == 110 goto label012;

        if $i6 == 111 goto label012;

        if $i6 == 114 goto label012;

        if $i6 == 221 goto label012;

        if $i6 == 224 goto label012;

        if $i6 == 225 goto label012;

        if $i6 == 227 goto label012;

        if $i6 == 228 goto label012;

        if $i6 == 229 goto label012;

        if $i6 == 232 goto label012;

        if $i6 == 236 goto label012;

        if $i6 == 238 goto label012;

        if $i6 == 204 goto label012;

        if $i6 == 113 goto label012;

        if $i6 != 281 goto label013;

     label012:
        $i9 = $i8 + 3;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

     label013:
        if $z0 != 0 goto label014;

        if $i6 == 109 goto label014;

        if $i6 == 110 goto label014;

        if $i6 == 111 goto label014;

        if $i6 == 114 goto label014;

        if $i6 == 225 goto label014;

        if $i6 == 227 goto label014;

        if $i6 == 237 goto label014;

        if $i6 == 238 goto label014;

        if $i6 == 204 goto label014;

        if $i6 == 113 goto label014;

        if $i6 != 281 goto label015;

     label014:
        $i9 = $i8 + 4;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

     label015:
        if $i6 == 113 goto label016;

        if $i6 == 110 goto label016;

        if $i6 == 111 goto label016;

        if $i6 == 225 goto label016;

        if $i6 != 204 goto label017;

     label016:
        $i9 = $i8 + 2;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

        $i9 = $i8 + 5;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

        if $i6 != 225 goto label017;

        $i9 = $i8 + 6;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

     label017:
        if $i6 != 281 goto label018;

        $i9 = $i8 + 2;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

     label018:
        if $z0 == 0 goto label031;

        $i9 = $i8 + 2;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

        $i9 = $i8 + 5;

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i9, $i7);

        virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i8, $i7);

     label019:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        if $r3 == null goto label003;

        $z0 = staticinvoke <com.metrictrade.and.ga: boolean c(int)>($i6);

        if $z0 == 0 goto label033;

        if $i6 < 121 goto label300;

        $i7 = $i6 / 10;

        $i7 = $i7 % 10;

        $i7 = $i7 + -1;

        $i4 = $i4 + $i7;

        $i7 = $i4 * 10;

        $i6 = $i6 - $i7;

     label020:
        if $r2 == null goto label032;

        $i7 = $r2.<com.metrictrade.and.fy: int y>;

     label021:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,int,int,int,com.metrictrade.and.fs,int,int,int)>($i6, $i0, $i1, $i2, $i3, $r1, $i7, $i4, $i5);

        goto label003;

     label022:
        $i7 = $i0;

        goto label009;

     label023:
        $i7 = r0.<com.metrictrade.and.fs: int h>;

        $r1.<com.metrictrade.and.fs: int h> = $i7;

        goto label010;

     label024:
        if $i6 != 62 goto label025;

        $i7 = $i7 / 16;

        $i7 = $i7 + 16;

        goto label011;

     label025:
        if $i6 != 60 goto label026;

        $i7 = $i7 / 8;

        $i7 = $i7 + 12;

        goto label011;

     label026:
        if $i6 != 30 goto label027;

        $i7 = $i7 / 6;

        $i7 = $i7 + 12;

        goto label011;

     label027:
        if $i6 != 15 goto label028;

        $i7 = $i7 / 3;

        $i7 = $i7 + 12;

        goto label011;

     label028:
        if $i6 != 10 goto label029;

        $i7 = $i7 / 2;

        $i7 = $i7 + 12;

        goto label011;

     label029:
        if $i6 != 7 goto label030;

        $i7 = $i7 / 5;

        $i7 = $i7 + 12;

        goto label011;

     label030:
        if $i6 != 8 goto label011;

        $i7 = $i7 / 5;

        $i7 = $i7 + 12;

        goto label011;

     label031:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r10 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r10[0];

        $r9[0] = $r3;

        goto label019;

     label032:
        $i7 = 1;

        goto label021;

     label033:
        lookupswitch($i6)
        {
            case 10: goto label035;
            case 15: goto label035;
            case 30: goto label035;
            case 60: goto label035;
            case 62: goto label036;
            case 64: goto label036;
            case 200: goto label037;
            case 201: goto label037;
            case 202: goto label037;
            case 204: goto label044;
            case 205: goto label073;
            case 210: goto label085;
            case 211: goto label090;
            case 212: goto label096;
            case 213: goto label097;
            case 214: goto label098;
            case 221: goto label115;
            case 222: goto label127;
            case 223: goto label115;
            case 224: goto label143;
            case 225: goto label160;
            case 226: goto label161;
            case 227: goto label162;
            case 228: goto label186;
            case 229: goto label193;
            case 231: goto label211;
            case 232: goto label217;
            case 233: goto label218;
            case 234: goto label218;
            case 235: goto label221;
            case 236: goto label233;
            case 237: goto label247;
            case 238: goto label255;
            case 239: goto label276;
            case 279: goto label278;
            case 280: goto label279;
            case 281: goto label280;
            case 290: goto label281;
            case 401: goto label282;
            case 402: goto label284;
            case 403: goto label282;
            case 404: goto label284;
            case 405: goto label282;
            case 406: goto label284;
            case 407: goto label282;
            case 408: goto label284;
            case 409: goto label284;
            case 410: goto label285;
            case 411: goto label286;
            case 412: goto label282;
            case 413: goto label284;
            case 415: goto label277;
            case 416: goto label288;
            default: goto label034;
        };

     label034:
        goto label003;

     label035:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,com.metrictrade.and.fs,com.metrictrade.and.fy)>($i6, $r1, $r2);

        goto label003;

     label036:
        $i0 = $i6 + -60;

        $i0 = $i0 * 60;

        specialinvoke r0.<com.metrictrade.and.fs: void a(int,com.metrictrade.and.fs,com.metrictrade.and.fy)>($i0, $r1, $r2);

        goto label003;

     label037:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i5, $i0);

        if $i6 != 200 goto label041;

        $b10 = 5;

     label038:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i1 = lengthof $r9;

        if $i1 <= $b10 goto label042;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[$b10];

     label039:
        if $r3 == null goto label043;

        $i1 = lengthof $r3;

        $i1 = staticinvoke <com.metrictrade.and.dc: int b(int,int)>($i0, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i1);

     label040:
        $i1 = $i5 + 3;

        $i1 = $i1 + -1;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i1, $i0);

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        if $r5 == null goto label003;

        if $i0 <= 0 goto label003;

        $i1 = lengthof $r3;

        $i0 = staticinvoke <com.metrictrade.and.dc: int b(int,int)>($i0, $i1);

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, 0, $r4, 0, $i0);

        goto label003;

     label041:
        $b10 = 7;

        goto label038;

     label042:
        $r3 = null;

        goto label039;

     label043:
        $i0 = 0;

        goto label040;

     label044:
        $r13 = $r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        if $i0 <= 0 goto label045;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i1 goto label045;

        if $r13 == null goto label045;

        $i1 = $r13.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label046;

     label045:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label046:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[0];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[0];

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $i1 = $i5 + -1;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r9[$i5];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i2 = $i1 + 3;

        $r14 = $r9[$i2];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i2 = $i1 + 4;

        $r15 = $r9[$i2];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i1 + 2;

        $r16 = $r9[$i1];

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        $i2 = $r13.<com.metrictrade.and.fs: int h>;

        $i4 = 0;

        $i3 = 0;

     label047:
        if $i3 < $i1 goto label050;

        $i2 = $i0 + 1;

     label048:
        if $i2 < $i1 goto label060;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 <= 1 goto label049;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $i1 = $i1 + -1;

        $d0 = $r7[$i1];

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $i1 = $i1 + -1;

        $d1 = $r7[$i1];

        $b10 = $d0 cmpl $d1;

        if $b10 == 0 goto label049;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $i1 = $i1 + -1;

        $i2 = r0.<com.metrictrade.and.fs: int h>;

        $i2 = $i2 + -2;

        $d0 = $r7[$i2];

        $r7[$i1] = $d0;

     label049:
        $i0 = $i0 + 1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r4);

        goto label003;

     label050:
        $d0 = $r3[$i3];

        $b10 = $d0 cmpl 0.0;

        $i5 = (int) $b10;

        if $i5 <= 0 goto label052;

        $i5 = $i4;

     label051:
        if $i5 < $i2 goto label056;

     label052:
        $i5 = -1;

     label053:
        if $i5 == -1 goto label059;

        $d0 = $r6[$i5];

        $b10 = $d0 cmpl $d0;

        if $b10 != 0 goto label058;

        $b10 = $d0 cmpl 0.0;

        if $b10 == 0 goto label058;

     label054:
        $r16[$i3] = $d0;

     label055:
        $i3 = $i3 + 1;

        goto label047;

     label056:
        $d1 = $r5[$i5];

        $b10 = $d1 cmpl $d0;

        if $b10 != 0 goto label057;

        $i4 = $i5;

        goto label053;

     label057:
        $i5 = $i5 + 1;

        goto label051;

     label058:
        $d0 = #NaN;

        goto label054;

     label059:
        $r16[$i3] = #NaN;

        goto label055;

     label060:
        $i3 = 0;

        $d0 = 0.0;

        $i4 = 0;

     label061:
        if $i4 < $i0 goto label064;

        if $i3 != 0 goto label069;

        if $i2 <= 0 goto label068;

        $i3 = $i2 + -1;

        $d0 = $r7[$i3];

     label062:
        $r7[$i2] = $d0;

     label063:
        $i2 = $i2 + 1;

        goto label048;

     label064:
        $i5 = $i2 - $i4;

        $d2 = $r4[$i5];

        $i5 = $i2 - $i4;

        $d1 = $r16[$i5];

        $i5 = $i2 - $i4;

        $i5 = $i5 + -1;

        $d3 = $r4[$i5];

        $i5 = $i2 - $i4;

        $i5 = $i5 + -1;

        $d4 = $r16[$i5];

        $b10 = $d2 cmpl $d2;

        if $b10 != 0 goto label065;

        $b10 = $d1 cmpl $d1;

        if $b10 != 0 goto label065;

        $b10 = $d2 cmpl 0.0;

        if $b10 == 0 goto label065;

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label065;

        $b10 = $d3 cmpl 0.0;

        if $b10 == 0 goto label065;

        $b10 = $d4 cmpl 0.0;

        if $b10 != 0 goto label067;

     label065:
        $i5 = $i2 - $i4;

        $i7 = $i2 - $i4;

        $r14[$i7] = #NaN;

        $r15[$i5] = #NaN;

     label066:
        $i4 = $i4 + 1;

        goto label061;

     label067:
        $i5 = $i2 - $i4;

        $d2 = $d2 / $d3;

        $r15[$i5] = $d2;

        $i5 = $i2 - $i4;

        $d1 = $d1 / $d4;

        $r14[$i5] = $d1;

        $i5 = $i2 - $i4;

        $d1 = $r14[$i5];

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

        goto label066;

     label068:
        $d0 = #NaN;

        goto label062;

     label069:
        $d1 = (double) $i3;

        $d0 = $d0 / $d1;

        $d1 = 0.0;

        $i3 = 0;

        $d4 = 0.0;

     label070:
        if $i3 < $i0 goto label071;

        $d0 = $d1 / $d4;

        $r7[$i2] = $d0;

        goto label063;

     label071:
        $i4 = $i2 - $i3;

        $d2 = $r15[$i4];

        $i4 = $i2 - $i3;

        $d3 = $r15[$i4];

        $b10 = $d2 cmpl $d3;

        if $b10 != 0 goto label072;

        $i4 = $i2 - $i3;

        $d2 = $r14[$i4];

        $i4 = $i2 - $i3;

        $d3 = $r14[$i4];

        $b10 = $d2 cmpl $d3;

        if $b10 != 0 goto label072;

        $i4 = $i2 - $i3;

        $d2 = $r14[$i4];

        $d2 = $d2 - $d0;

        $i4 = $i2 - $i3;

        $d3 = $r15[$i4];

        $d3 = $d3 - $d0;

        $d3 = $d3 * $d2;

        $d1 = $d1 + $d3;

        $d2 = $d2 * $d2;

        $d4 = $d4 + $d2;

     label072:
        $i3 = $i3 + 1;

        goto label070;

     label073:
        $r13 = $r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        $i0 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label074;

        if $r13 == null goto label074;

        $i0 = $r13.<com.metrictrade.and.fs: int h>;

        if $i0 > 0 goto label075;

     label074:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label075:
        $i0 = 0;

        $d0 = 0.0;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[0];

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[0];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[$i5];

        $i1 = 0;

     label076:
        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label003;

        $d1 = $r3[$i1];

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label078;

        $b10 = $d1 cmpl $d1;

        if $b10 != 0 goto label078;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d4 = $r6[$i1];

        $b10 = $d4 cmpl 0.0;

        if $b10 == 0 goto label077;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d4 = $r6[$i1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d2 = $r6[$i1];

        $b10 = $d4 cmpl $d2;

        if $b10 == 0 goto label079;

     label077:
        $r5[$i1] = #NaN;

     label078:
        $i1 = $i1 + 1;

        goto label076;

     label079:
        $i2 = $i0;

     label080:
        $i3 = $r13.<com.metrictrade.and.fs: int h>;

        if $i2 < $i3 goto label082;

     label081:
        $b10 = $d0 cmpl 0.0;

        if $b10 != 0 goto label084;

        $r5[$i1] = #NaN;

        goto label078;

     label082:
        $d4 = $r4[$i2];

        $b10 = $d4 cmpl $d1;

        if $b10 != 0 goto label083;

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d1 = $r6[$i2];

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label299;

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d1 = $r6[$i2];

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d4 = $r6[$i2];

        $b10 = $d1 cmpl $d4;

        if $b10 != 0 goto label299;

        $r9 = $r13.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d0 = $r6[$i2];

        $i0 = $i2;

        goto label081;

     label083:
        $i2 = $i2 + 1;

        goto label080;

     label084:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d1 = $r6[$i1];

        $d1 = $d1 / $d0;

        $r5[$i1] = $d1;

        goto label078;

     label085:
        $d0 = 0.0;

        $d1 = 0.0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[$i5];

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label086;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $d1 = $r4[0];

        $d4 = (double) 0L;

        $r3[0] = $d4;

     label086:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[5];

        $d4 = $d1;

        $i0 = 1;

     label087:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i1 goto label003;

        $d1 = $r4[$i0];

        $d2 = $r5[$i0];

        $b10 = $d1 cmpl $d1;

        if $b10 != 0 goto label089;

        $b10 = $d2 cmpl $d2;

        if $b10 != 0 goto label089;

        $b10 = $d1 cmpl $d4;

        if $b10 == 0 goto label088;

        $b10 = $d4 cmpl 0.0;

        if $b10 == 0 goto label088;

        $d3 = $d1 - $d4;

        $d2 = $d2 * $d3;

        $d4 = $d2 / $d4;

        $d0 = $d0 + $d4;

     label088:
        $r3[$i0] = $d0;

        $d4 = $d1;

     label089:
        $i0 = $i0 + 1;

        goto label087;

     label090:
        $d0 = 0.0;

        $d1 = 0.0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[5];

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label091;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $d1 = $r6[0];

        $d4 = (double) 0L;

        $r3[0] = $d4;

     label091:
        $i0 = 1;

     label092:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i1 goto label003;

        $d4 = $r4[$i0];

        $d2 = $r5[$i0];

        $b10 = $d4 cmpl $d4;

        if $b10 != 0 goto label094;

        $b10 = $d2 cmpl $d2;

        if $b10 != 0 goto label094;

        $b10 = $d4 cmpl $d1;

        $i1 = (int) $b10;

        if $i1 <= 0 goto label095;

        $d0 = $d0 + $d2;

     label093:
        $r3[$i0] = $d0;

        $d1 = $d4;

     label094:
        $i0 = $i0 + 1;

        goto label092;

     label095:
        $b10 = $d4 cmpg $d1;

        $i1 = (int) $b10;

        if $i1 >= 0 goto label093;

        $d0 = $d0 - $d2;

        goto label093;

     label096:
        specialinvoke r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,boolean)>($r1, 1);

        goto label003;

     label097:
        specialinvoke r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,boolean)>($r1, 0);

        goto label003;

     label098:
        if $i0 <= 1 goto label099;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label100;

     label099:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label100:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r9[5];

        $i1 = $i0;

     label101:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i2 goto label102;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r4);

        goto label003;

     label102:
        $d4 = 0.0;

        $i2 = $i1 - $i0;

        $d0 = 0.0;

        $d1 = 0.0;

     label103:
        if $i2 <= $i1 goto label105;

        $b10 = $d0 cmpl 0.0;

        if $b10 == 0 goto label114;

        $d0 = $d1 / $d0;

        $d0 = $d0 + 1.0;

        $d0 = 100.0 / $d0;

        $d0 = 100.0 - $d0;

     label104:
        $r3[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label101;

     label105:
        $d2 = $r7[$i2];

        $d3 = $r7[$i2];

        $b10 = $d2 cmpl $d3;

        if $b10 != 0 goto label106;

        $d2 = $r4[$i2];

        $d3 = $r4[$i2];

        $b10 = $d2 cmpl $d3;

        if $b10 == 0 goto label108;

     label106:
        $r3[$i2] = #NaN;

     label107:
        $i2 = $i2 + 1;

        goto label103;

     label108:
        $d2 = $r5[$i2];

        $d3 = $r5[$i2];

        $b10 = $d2 cmpl $d3;

        if $b10 != 0 goto label109;

        $d2 = $r6[$i2];

        $d3 = $r6[$i2];

        $b10 = $d2 cmpl $d3;

        if $b10 == 0 goto label112;

     label109:
        $d2 = $r4[$i2];

     label110:
        $b10 = $d4 cmpl 0.0;

        if $b10 == 0 goto label111;

        $b10 = $d2 cmpl $d4;

        $i3 = (int) $b10;

        if $i3 <= 0 goto label113;

        $d4 = $r7[$i2];

        $d4 = $d4 * $d2;

        $d3 = (double) $i0;

        $d4 = $d4 / $d3;

        $d1 = $d1 + $d4;

     label111:
        $d4 = $d2;

        goto label107;

     label112:
        $d2 = $r5[$i2];

        $d3 = $r6[$i2];

        $d2 = $d2 + $d3;

        $d3 = $r4[$i2];

        $d2 = $d2 + $d3;

        $d2 = $d2 / 3.0;

        goto label110;

     label113:
        $b10 = $d2 cmpg $d4;

        $i3 = (int) $b10;

        if $i3 >= 0 goto label111;

        $d4 = $r7[$i2];

        $d4 = $d4 * $d2;

        $d3 = (double) $i0;

        $d4 = $d4 / $d3;

        $d0 = $d0 + $d4;

        goto label111;

     label114:
        $d0 = #NaN;

        goto label104;

     label115:
        $i0 = $i2 + 1;

        $d0 = (double) $i0;

        $d0 = 2.0 / $d0;

        $i0 = $i1 + 1;

        $d1 = (double) $i0;

        $d1 = 2.0 / $d1;

        if $i6 != 223 goto label118;

        $z0 = 1;

     label116:
        $d4 = 0.0;

        $d2 = 0.0;

        $z1 = 0;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i0 = lengthof $r9;

        if $i4 < $i0 goto label119;

        $r3 = null;

     label117:
        if $r3 != null goto label120;

        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label118:
        $z0 = 0;

        goto label116;

     label119:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[$i4];

        goto label117;

     label120:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[$i4];

        $i0 = 0;

     label121:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label122;

        $i0 = $i2 + -1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r3);

        goto label003;

     label122:
        $d3 = $r3[$i0];

        $b10 = $d3 cmpl $d3;

        if $b10 == 0 goto label124;

        $r4[$i0] = #NaN;

     label123:
        $i0 = $i0 + 1;

        goto label121;

     label124:
        if $z1 != 0 goto label125;

        $z1 = 1;

        $d4 = (double) 9221120237041090560L;

        $r4[$i0] = $d4;

        $d2 = $d3;

        $d4 = $d3;

        goto label123;

     label125:
        $d5 = $d3 * $d0;

        $d6 = 1.0 - $d0;

        $d4 = $d4 * $d6;

        $d4 = $d4 + $d5;

        $d3 = $d3 * $d1;

        $d5 = 1.0 - $d1;

        $d2 = $d2 * $d5;

        $d2 = $d2 + $d3;

        if $i0 < $i2 goto label123;

        if $z0 == 0 goto label126;

        $d3 = $d2 - $d4;

        $d3 = 100.0 * $d3;

        $d3 = $d3 / $d4;

        $r4[$i0] = $d3;

        goto label123;

     label126:
        $d3 = $d2 - $d4;

        $r4[$i0] = $d3;

        goto label123;

     label127:
        if $i0 <= 1 goto label128;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label129;

     label128:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label129:
        $d2 = 0.0;

        $d0 = 0.0;

        $d4 = 0.0;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[$i5];

        $i1 = 0;

     label130:
        if $i1 < $i0 goto label137;

        $i1 = $i0 + -1;

        $d1 = (double) $i1;

        $d2 = $d2 / $d1;

        $i1 = $i0 + -1;

        $d1 = (double) $i1;

        $d1 = $d0 / $d1;

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label131;

        $i1 = $i0 + -1;

        $d0 = $d2 / $d1;

        $d0 = 1.0 + $d0;

        $d0 = 100.0 / $d0;

        $d0 = 100.0 - $d0;

        $r4[$i1] = $d0;

     label131:
        $i1 = $i0;

     label132:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label003;

        $d0 = $r3[$i1];

        $b10 = $d0 cmpl $d0;

        if $b10 != 0 goto label136;

        $d3 = $d0 - $d4;

        $i2 = $i0 + -1;

        $d4 = (double) $i2;

        $d4 = $d4 * $d2;

        $b10 = $d3 cmpl 0.0;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label140;

        $d2 = $d3;

     label133:
        $d4 = $d2 + $d4;

        $d2 = (double) $i0;

        $d4 = $d4 / $d2;

        $i2 = $i0 + -1;

        $d2 = (double) $i2;

        $d1 = $d2 * $d1;

        $b10 = $d3 cmpg 0.0;

        $i2 = (int) $b10;

        if $i2 >= 0 goto label141;

        $d2 = $d3;

     label134:
        $d1 = $d1 - $d2;

        $d2 = (double) $i0;

        $d1 = $d1 / $d2;

        $b10 = $d1 cmpl 0.0;

        if $b10 != 0 goto label142;

        $d2 = 100.0;

     label135:
        $r4[$i1] = $d2;

        $d2 = $d4;

        $d4 = $d0;

     label136:
        $i1 = $i1 + 1;

        goto label132;

     label137:
        $r4[$i1] = #NaN;

        $d1 = $r3[$i1];

        $b10 = $d1 cmpl $d1;

        if $b10 != 0 goto label298;

        $b10 = $d4 cmpl 0.0;

        if $b10 == 0 goto label138;

        $d4 = $d1 - $d4;

        $b10 = $d4 cmpl 0.0;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label139;

        $d2 = $d2 + $d4;

     label138:
        $i1 = $i1 + 1;

        $d4 = $d1;

        goto label130;

     label139:
        $d0 = $d0 - $d4;

        goto label138;

     label140:
        $d2 = 0.0;

        goto label133;

     label141:
        $d2 = 0.0;

        goto label134;

     label142:
        $d2 = $d4 / $d1;

        $d2 = 1.0 + $d2;

        $d2 = 100.0 / $d2;

        $d2 = 100.0 - $d2;

        goto label135;

     label143:
        if $i1 <= 0 goto label144;

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i0 goto label145;

     label144:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label145:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[4];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[$i5];

        $i0 = $i1 + -1;

     label146:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label147;

        $i0 = $i1 + 1;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int)>($i0, $r3, $i5);

        goto label003;

     label147:
        $i3 = $i0 - $i2;

        $i3 = $i3 + 1;

        $d0 = 0.0;

        $d4 = 0.0;

     label148:
        if $i3 < 0 goto label149;

        if $i3 <= $i0 goto label151;

     label149:
        $b10 = $d0 cmpl 0.0;

        if $b10 != 0 goto label159;

        $d0 = #NaN;

     label150:
        $r6[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label146;

     label151:
        $d2 = 0.0;

        $d1 = 0.0;

        $i4 = $i3 - $i1;

        $i4 = $i4 + 1;

     label152:
        if $i4 < 0 goto label153;

        if $i4 <= $i3 goto label154;

     label153:
        $d3 = $r4[$i3];

        $d3 = $d3 - $d1;

        $d1 = $d2 - $d1;

        $i3 = $i3 + 1;

        $d0 = $d1 + $d0;

        $d4 = $d3 + $d4;

        goto label148;

     label154:
        $d3 = $r5[$i4];

        $d5 = $r3[$i4];

        $b10 = $d3 cmpl $d3;

        if $b10 != 0 goto label297;

        $b10 = $d5 cmpl $d5;

        if $b10 != 0 goto label297;

        $b10 = $d2 cmpl 0.0;

        if $b10 == 0 goto label155;

        $b10 = $d3 cmpl $d2;

        $i7 = (int) $b10;

        if $i7 <= 0 goto label156;

     label155:
        $d2 = $d3;

     label156:
        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label157;

        $b10 = $d5 cmpg $d1;

        $i7 = (int) $b10;

        if $i7 >= 0 goto label297;

     label157:
        $d1 = $d5;

     label158:
        $i4 = $i4 + 1;

        goto label152;

     label159:
        $d0 = $d4 / $d0;

        $d0 = 100.0 * $d0;

        goto label150;

     label160:
        specialinvoke r0.<com.metrictrade.and.fs: void c(com.metrictrade.and.fs,int,int,int)>($r1, $i0, $i1, $i2);

        goto label003;

     label161:
        specialinvoke r0.<com.metrictrade.and.fs: void b(com.metrictrade.and.fs,int,int,int)>($r1, $i0, $i4, $i5);

        goto label003;

     label162:
        if $i0 <= 0 goto label163;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label164;

     label163:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label164:
        $d5 = 0.0;

        $d6 = 0.0;

        $d3 = 0.0;

        $d2 = 0.0;

        $d7 = 0.0;

        $d8 = 0.0;

        $d9 = 0.0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r14 = $r9[1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[3];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r9[4];

        $i1 = 0;

     label165:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label003;

        $d0 = $r6[$i1];

        $d1 = $r7[$i1];

        $d4 = $r5[$i1];

        if $i1 != 0 goto label166;

        $r4[$i1] = #NaN;

        $r3[$i1] = #NaN;

        $r14[$i1] = #NaN;

     label166:
        $b10 = $d4 cmpl 0.0;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label176;

        $b10 = $d4 cmpl $d4;

        if $b10 != 0 goto label176;

        $b10 = $d0 cmpl 0.0;

        if $b10 == 0 goto label167;

        $b10 = $d0 cmpl $d0;

        if $b10 == 0 goto label168;

     label167:
        $d0 = $d4;

     label168:
        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label169;

        $b10 = $d1 cmpl $d1;

        if $b10 == 0 goto label170;

     label169:
        $d1 = $d4;

     label170:
        $b10 = $d9 cmpl 0.0;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label296;

        $d7 = $d0 - $d7;

        $d8 = $d8 - $d1;

        $d10 = $d0 - $d1;

        $d11 = $d1 - $d9;

        $d11 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d11);

        $d9 = $d0 - $d9;

        $d9 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d9);

        $d9 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d11, $d9);

        $d10 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d10, $d9);

        $b10 = $d7 cmpg 0.0;

        $i2 = (int) $b10;

        if $i2 >= 0 goto label171;

        $b10 = $d8 cmpg 0.0;

        $i2 = (int) $b10;

        if $i2 < 0 goto label172;

     label171:
        $b10 = $d7 cmpl $d8;

        if $b10 != 0 goto label177;

     label172:
        $d8 = 0.0;

        $d7 = 0.0;

     label173:
        if $i1 >= $i0 goto label179;

        $d3 = $d3 + $d10;

        $d5 = $d7 + $d5;

        $d6 = $d8 + $d6;

        $i2 = $i0 + -1;

        if $i1 != $i2 goto label174;

        $d8 = (double) $i0;

        $d3 = $d3 / $d8;

        $d8 = (double) $i0;

        $d5 = $d5 / $d8;

        $d8 = (double) $i0;

        $d6 = $d6 / $d8;

        $d8 = $d5 + $d6;

        $b10 = $d8 cmpl 0.0;

        if $b10 == 0 goto label174;

        $d8 = $d5 - $d6;

        staticinvoke <com.metrictrade.and.dc: double g(double)>($d8);

     label174:
        $r4[$i1] = #NaN;

        $r3[$i1] = #NaN;

        $r14[$i1] = #NaN;

     label175:
        $d9 = $d4;

        $d8 = $d1;

        $d7 = $d0;

     label176:
        $i1 = $i1 + 1;

        goto label165;

     label177:
        $b10 = $d7 cmpl $d8;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label178;

        $d8 = 0.0;

        goto label173;

     label178:
        $d7 = 0.0;

        goto label173;

     label179:
        $i2 = $i0 + -1;

        $d9 = (double) $i2;

        $d3 = $d9 * $d3;

        $d3 = $d3 + $d10;

        $d10 = (double) $i0;

        $d3 = $d3 / $d10;

        $i2 = $i0 + -1;

        $d10 = (double) $i2;

        $d5 = $d10 * $d5;

        $d5 = $d7 + $d5;

        $d7 = (double) $i0;

        $d5 = $d5 / $d7;

        $i2 = $i0 + -1;

        $d7 = (double) $i2;

        $d6 = $d7 * $d6;

        $d6 = $d8 + $d6;

        $d8 = (double) $i0;

        $d6 = $d6 / $d8;

        $d8 = $d5 + $d6;

        $b10 = $d8 cmpl 0.0;

        if $b10 != 0 goto label182;

        $d8 = 0.0;

     label180:
        $i2 = $i0 * 2;

        if $i1 >= $i2 goto label184;

        $d2 = $d2 + $d8;

        $i2 = $i0 * 2;

        $i2 = $i2 + -1;

        if $i1 != $i2 goto label183;

        $d8 = (double) $i0;

        $d2 = $d2 / $d8;

        $d8 = 1000.0 * $d2;

        $d8 = $d8 + 0.50001;

        $i2 = (int) $d8;

        $d8 = (double) $i2;

        $d8 = $d8 / 10.0;

        $r14[$i1] = $d8;

     label181:
        $b10 = $d3 cmpl 0.0;

        $i2 = (int) $b10;

        if $i2 <= 0 goto label185;

        $d8 = 1000.0 * $d5;

        $d8 = $d8 / $d3;

        $d8 = $d8 + 0.50001;

        $i2 = (int) $d8;

        $d8 = (double) $i2;

        $d8 = $d8 / 10.0;

        $r3[$i1] = $d8;

        $d8 = 1000.0 * $d6;

        $d8 = $d8 / $d3;

        $d8 = $d8 + 0.50001;

        $i2 = (int) $d8;

        $d8 = (double) $i2;

        $d8 = $d8 / 10.0;

        $r4[$i1] = $d8;

        goto label175;

     label182:
        $d8 = $d5 - $d6;

        $d8 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d8);

        $d7 = $d5 + $d6;

        $d8 = $d8 / $d7;

        goto label180;

     label183:
        $r14[$i1] = #NaN;

        goto label181;

     label184:
        $i2 = $i0 + -1;

        $d7 = (double) $i2;

        $d2 = $d2 * $d7;

        $d2 = $d2 + $d8;

        $d8 = (double) $i0;

        $d2 = $d2 / $d8;

        $d8 = 1000.0 * $d2;

        $d8 = $d8 + 0.50001;

        $i2 = (int) $d8;

        $d8 = (double) $i2;

        $d8 = $d8 / 10.0;

        $r14[$i1] = $d8;

        goto label181;

     label185:
        $i2 = $i1 + -1;

        $d8 = $r3[$i2];

        $r3[$i1] = $d8;

        $i2 = $i1 + -1;

        $d8 = $r4[$i2];

        $r4[$i1] = $d8;

        goto label175;

     label186:
        $i0 = $i1 + 1;

        $d0 = (double) $i0;

        $d0 = 2.0 / $d0;

        $i0 = $i2 + 1;

        $d1 = (double) $i0;

        $d1 = 2.0 / $d1;

        $i0 = $i5 + 3;

        $i0 = $i0 + -1;

        specialinvoke r0.<com.metrictrade.and.fs: void b(com.metrictrade.and.fs,int)>($r1, $i0);

        $z0 = 0;

        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label188;

        $d5 = 0.0;

        $d2 = 0.0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $i1 = $i5 + 3;

        $i1 = $i1 + -1;

        $r3 = $r9[$i1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[$i5];

        $i1 = 0;

     label187:
        if $i1 < $i0 goto label189;

        $d0 = (double) 9221120237041090560L;

        $r4[0] = $d0;

     label188:
        $i0 = $i2 + -1;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $i1 = $i5 + 3;

        $i1 = $i1 + -1;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[],int,int,int)>($i0, $r3, $i5, $i1, -1);

        goto label003;

     label189:
        $d4 = $r3[$i1];

        $b10 = $d4 cmpl $d4;

        if $b10 != 0 goto label192;

        if $z0 != 0 goto label191;

        $z0 = 1;

        $d2 = (double) 9221120237041090560L;

        $r4[$i1] = $d2;

        $d2 = $d4;

     label190:
        $i1 = $i1 + 1;

        $d5 = $d2;

        $d2 = $d4;

        goto label187;

     label191:
        $d3 = $d4 * $d0;

        $d6 = 1.0 - $d0;

        $d5 = $d5 * $d6;

        $d3 = $d5 + $d3;

        $d4 = $d4 * $d1;

        $d5 = 1.0 - $d1;

        $d2 = $d2 * $d5;

        $d4 = $d4 + $d2;

        $d2 = $d3 - $d4;

        $r4[$i1] = $d2;

        $d2 = $d3;

        goto label190;

     label192:
        $r4[0] = #NaN;

        $d4 = $d2;

        $d2 = $d5;

        goto label190;

     label193:
        if $i0 < 4 goto label194;

        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i1 goto label195;

     label194:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label195:
        $i1 = $i0 / 2;

        $i1 = $i1 + 1;

        $i2 = $i0 / 2;

        $i2 = $i2 + -1;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        if $i0 <= 0 goto label198;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 >= $i3 goto label198;

        $i3 = 0;

     label196:
        if $i3 < $i0 goto label204;

        $i3 = $i0 + -1;

     label197:
        $i4 = $r1.<com.metrictrade.and.fs: int h>;

        if $i3 < $i4 goto label205;

     label198:
        $i0 = $i2 + -1;

     label199:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        $i3 = $i3 - $i1;

        if $i0 < $i3 goto label208;

        $i0 = 0;

     label200:
        $i3 = $i2 + -1;

        if $i0 >= $i3 goto label201;

        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label209;

     label201:
        $i0 = $r1.<com.metrictrade.and.fs: int h>;

        $i0 = $i0 - $i1;

     label202:
        if $i0 < 0 goto label203;

        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 < $i2 goto label210;

     label203:
        $i0 = r0.<com.metrictrade.and.fs: int h>;

        $i0 = $i0 - $i1;

        $r1.<com.metrictrade.and.fs: int h> = $i0;

        goto label003;

     label204:
        $r4[$i3] = #NaN;

        $i3 = $i3 + 1;

        goto label196;

     label205:
        $d0 = 0.0;

        $i4 = $i3 - $i0;

        $i4 = $i4 + 1;

     label206:
        if $i4 <= $i3 goto label207;

        $d1 = (double) $i0;

        $d0 = $d0 / $d1;

        $r4[$i3] = $d0;

        $i3 = $i3 + 1;

        goto label197;

     label207:
        $d1 = $r5[$i4];

        $d0 = $d0 + $d1;

        $i4 = $i4 + 1;

        goto label206;

     label208:
        $d0 = $r5[$i0];

        $i3 = $i0 + $i1;

        $d1 = $r4[$i3];

        $d0 = $d0 - $d1;

        $r3[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label199;

     label209:
        $r3[$i0] = #NaN;

        $i0 = $i0 + 1;

        goto label200;

     label210:
        $r3[$i0] = #NaN;

        $i0 = $i0 + 1;

        goto label202;

     label211:
        $d1 = 0.0;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 > $i1 goto label003;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $i1 = $i0 + -1;

     label212:
        $i2 = r0.<com.metrictrade.and.fs: int h>;

        if $i1 >= $i2 goto label003;

        $d0 = 0.0;

        $d4 = 0.0;

        $i2 = $i1 - $i0;

        $i2 = $i2 + 1;

     label213:
        if $i2 <= $i1 goto label215;

        $d2 = (double) $i0;

        $d4 = $d4 / $d2;

        $i2 = $i1 - $i0;

        $i2 = $i2 + 1;

     label214:
        if $i2 <= $i1 goto label216;

        $d4 = $d1 - $d4;

        $d2 = (double) $i0;

        $d0 = $d0 / $d2;

        $d0 = $d0 * 0.015;

        $d0 = $d4 / $d0;

        $r6[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label212;

     label215:
        $d2 = $r3[$i2];

        $d3 = $r4[$i2];

        $d2 = $d2 + $d3;

        $d3 = $r5[$i2];

        $d2 = $d2 + $d3;

        $d2 = $d2 / 3.0;

        $d4 = $d4 + $d2;

        $i2 = $i2 + 1;

        goto label213;

     label216:
        $d1 = $r3[$i2];

        $d2 = $r4[$i2];

        $d1 = $d1 + $d2;

        $d2 = $r5[$i2];

        $d1 = $d1 + $d2;

        $d1 = $d1 / 3.0;

        $d2 = $d1 - $d4;

        $d2 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d2);

        $d0 = $d0 + $d2;

        $i2 = $i2 + 1;

        goto label214;

     label217:
        specialinvoke r0.<com.metrictrade.and.fs: void b(com.metrictrade.and.fs,int)>($r1, $i5);

        goto label003;

     label218:
        if $i6 != 234 goto label220;

        $z0 = 1;

     label219:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,boolean,boolean,com.metrictrade.and.fs,int,int)>($i0, $z0, 0, $r1, $i4, $i5);

        goto label003;

     label220:
        $z0 = 0;

        goto label219;

     label221:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i0 <= 0 goto label222;

        if $i0 < $i1 goto label223;

     label222:
        $r1.<com.metrictrade.and.fs: int h> = 0;

        goto label003;

     label223:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[4];

        $i2 = $i0 + -1;

     label224:
        if $i2 < $i1 goto label225;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r4);

        goto label003;

     label225:
        $d0 = $r5[$i2];

        $d1 = $r5[$i2];

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label228;

        $d0 = $r6[$i2];

        $d1 = $r6[$i2];

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label228;

        $i3 = $i2 - $i0;

        $i3 = $i3 + 1;

        $d0 = $r5[$i3];

        $i3 = $i2 - $i0;

        $i3 = $i3 + 1;

        $d1 = $r6[$i3];

        $i3 = $i2 - $i0;

        $i3 = $i3 + 1;

     label226:
        if $i3 <= $i2 goto label229;

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label232;

        $d0 = 0.0;

     label227:
        $r3[$i2] = $d0;

     label228:
        $i2 = $i2 + 1;

        goto label224;

     label229:
        $d4 = $r5[$i3];

        $d2 = $r6[$i3];

        $b10 = $d4 cmpl $d0;

        $i4 = (int) $b10;

        if $i4 <= 0 goto label295;

     label230:
        $b10 = $d2 cmpg $d1;

        $i4 = (int) $b10;

        if $i4 >= 0 goto label294;

     label231:
        $i3 = $i3 + 1;

        $d1 = $d2;

        $d0 = $d4;

        goto label226;

     label232:
        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r7 = $r9[1];

        $d4 = $r7[$i2];

        $d4 = $d0 - $d4;

        $d4 = -100.0 * $d4;

        $d0 = $d0 - $d1;

        $d0 = $d4 / $d0;

        goto label227;

     label233:
        $l11 = (long) $i2;

        $d0 = 0.0;

        $i1 = 0;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[5];

        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        $i2 = $i2 + -12;

        $i2 = staticinvoke <com.metrictrade.and.dc: int a(int,int)>(0, $i2);

     label234:
        $i3 = $r1.<com.metrictrade.and.fs: int h>;

        if $i2 < $i3 goto label238;

        if $i1 == 0 goto label293;

        $d1 = (double) $i1;

        $d0 = $d0 / $d1;

     label235:
        $d1 = (double) $l11;

        $b10 = $d0 cmpl $d1;

        $i1 = (int) $b10;

        if $i1 > 0 goto label240;

     label236:
        $z0 = 0;

        $i1 = 0;

        $d4 = 0.0;

        $d2 = 0.0;

     label237:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i2 goto label241;

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,com.metrictrade.and.fs,int,int)>($i0, $r1, 3, 1);

        goto label003;

     label238:
        $d1 = $r6[$i2];

        $d4 = $r6[$i2];

        $b10 = $d1 cmpl $d4;

        if $b10 != 0 goto label239;

        $d1 = $r6[$i2];

        $b10 = $d1 cmpl 0.0;

        $i3 = (int) $b10;

        if $i3 <= 0 goto label239;

        $d1 = $r6[$i2];

        $d0 = $d0 + $d1;

        $i1 = $i1 + 1;

     label239:
        $i2 = $i2 + 1;

        goto label234;

     label240:
        $l11 = $l11 * 10L;

        goto label235;

     label241:
        $d0 = $r4[$i1];

        $d1 = $r4[$i1];

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label242;

        $d0 = $r5[$i1];

        $d1 = $r5[$i1];

        $b10 = $d0 cmpl $d1;

        if $b10 == 0 goto label244;

     label242:
        $r3[$i1] = #NaN;

     label243:
        $i1 = $i1 + 1;

        goto label237;

     label244:
        $d0 = $r4[$i1];

        $d1 = $r5[$i1];

        if $z0 == 0 goto label245;

        $d3 = $r6[$i1];

        $b10 = $d3 cmpl 0.0;

        if $b10 != 0 goto label246;

        $r3[$i1] = #NaN;

     label245:
        $z0 = 1;

        $d4 = $d1;

        $d2 = $d0;

        goto label243;

     label246:
        $d3 = $d0 - $d1;

        $d5 = (double) $l11;

        $d3 = $d3 * $d5;

        $d5 = $d0 + $d1;

        $d5 = $d5 / 2.0;

        $d4 = $d4 + $d2;

        $d4 = $d4 / 2.0;

        $d4 = $d5 - $d4;

        $d4 = $d3 * $d4;

        $d2 = $r6[$i1];

        $d4 = $d4 / $d2;

        $r3[$i1] = $d4;

        goto label245;

     label247:
        $i1 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i0 goto label003;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[4];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[4];

        $i1 = $i0;

     label248:
        $i2 = $r1.<com.metrictrade.and.fs: int h>;

        if $i1 < $i2 goto label249;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r3);

        goto label003;

     label249:
        $d1 = 0.0;

        $d4 = 0.0;

        $i2 = $i1 - $i0;

        $i3 = 0;

        $i4 = 0;

     label250:
        if $i2 <= $i1 goto label251;

        $d0 = (double) $i4;

        $d0 = 100.0 * $d0;

        $d1 = (double) $i0;

        $d0 = $d0 / $d1;

        $r3[$i1] = $d0;

        $d0 = (double) $i3;

        $d0 = $d0 * 100.0;

        $d1 = (double) $i0;

        $d0 = $d0 / $d1;

        $r4[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label248;

     label251:
        $d2 = $r5[$i2];

        $d0 = $r6[$i2];

        $b10 = $d0 cmpl $d0;

        if $b10 != 0 goto label292;

        $b10 = $d2 cmpl $d2;

        if $b10 != 0 goto label292;

        $b10 = $d1 cmpl 0.0;

        if $b10 != 0 goto label253;

        $d1 = $d2;

     label252:
        $i2 = $i2 + 1;

        $d4 = $d0;

        goto label250;

     label253:
        $b10 = $d2 cmpl $d1;

        $i5 = (int) $b10;

        if $i5 < 0 goto label291;

        $i4 = $i1 - $i0;

        $i4 = $i2 - $i4;

     label254:
        $b10 = $d0 cmpg $d4;

        $i5 = (int) $b10;

        if $i5 > 0 goto label290;

        $i3 = $i1 - $i0;

        $i3 = $i2 - $i3;

        $d1 = $d2;

        goto label252;

     label255:
        $i0 = $i2 + 1;

        $d0 = (double) $i0;

        $d0 = 2.0 / $d0;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[3];

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[4];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[3];

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[4];

        $d1 = 0.0;

        $z0 = 0;

        $i0 = 0;

     label256:
        $i3 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label260;

        $z0 = 0;

        $d1 = 0.0;

        $i0 = 0;

     label257:
        $i3 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label264;

        if $i1 <= 0 goto label259;

        $i0 = $i1 + -1;

     label258:
        $i3 = r0.<com.metrictrade.and.fs: int h>;

        if $i0 < $i3 goto label268;

     label259:
        $i0 = $i2 + -1;

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r9[1];

        specialinvoke $r1.<com.metrictrade.and.fs: void a(int,double[])>($i0, $r3);

        goto label003;

     label260:
        $d4 = $r6[$i0];

        $b10 = $d4 cmpl 0.0;

        $i3 = (int) $b10;

        if $i3 <= 0 goto label262;

        $d4 = $r5[$i0];

        $d2 = $r5[$i0];

        $b10 = $d4 cmpl $d2;

        if $b10 != 0 goto label262;

        $d4 = $r6[$i0];

        $d2 = $r6[$i0];

        $b10 = $d4 cmpl $d2;

        if $b10 != 0 goto label262;

        $d4 = $r5[$i0];

        $d2 = $r6[$i0];

        $b10 = $d4 cmpl $d2;

        $i3 = (int) $b10;

        if $i3 < 0 goto label262;

        if $z0 != 0 goto label263;

        $d1 = $r5[$i0];

        $d4 = $r6[$i0];

        $d1 = $d1 - $d4;

        $z0 = 1;

     label261:
        $r3[$i0] = $d1;

     label262:
        $i0 = $i0 + 1;

        goto label256;

     label263:
        $d4 = $r5[$i0];

        $d2 = $r6[$i0];

        $d4 = $d4 - $d2;

        $d4 = $d4 * $d0;

        $d2 = 1.0 - $d0;

        $d1 = $d1 * $d2;

        $d1 = $d1 + $d4;

        goto label261;

     label264:
        $d4 = $r3[$i0];

        $d2 = $r3[$i0];

        $b10 = $d4 cmpl $d2;

        if $b10 != 0 goto label266;

        if $z0 != 0 goto label267;

        $d1 = $r3[$i0];

        $z0 = 1;

     label265:
        $r4[$i0] = $d1;

     label266:
        $i0 = $i0 + 1;

        goto label257;

     label267:
        $d4 = $r3[$i0];

        $d4 = $d4 * $d0;

        $d2 = 1.0 - $d0;

        $d1 = $d1 * $d2;

        $d1 = $d1 + $d4;

        goto label265;

     label268:
        $d0 = $r3[$i0];

        $d1 = $r3[$i0];

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label271;

        $d0 = $r4[$i0];

        $d1 = $r4[$i0];

        $b10 = $d0 cmpl $d1;

        if $b10 != 0 goto label271;

        $i3 = 0;

        $d0 = 0.0;

        $i4 = 0;

     label269:
        if $i4 < $i1 goto label272;

        if $i3 != 0 goto label275;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        if $i0 <= 0 goto label274;

        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r6 = $r9[1];

        $i3 = $i0 + -1;

        $d0 = $r6[$i3];

     label270:
        $r5[$i0] = $d0;

     label271:
        $i0 = $i0 + 1;

        goto label258;

     label272:
        $i5 = $i0 - $i4;

        $d1 = $r3[$i5];

        $i5 = $i0 - $i4;

        $d4 = $r3[$i5];

        $b10 = $d1 cmpl $d4;

        if $b10 != 0 goto label273;

        $i5 = $i0 - $i4;

        $d1 = $r4[$i5];

        $i5 = $i0 - $i4;

        $d4 = $r4[$i5];

        $b10 = $d1 cmpl $d4;

        if $b10 != 0 goto label273;

        $i5 = $i0 - $i4;

        $d1 = $r3[$i5];

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label273;

        $i5 = $i0 - $i4;

        $d1 = $r3[$i5];

        $i5 = $i0 - $i4;

        $d4 = $r4[$i5];

        $d1 = $d1 / $d4;

        $d0 = $d0 + $d1;

        $i3 = $i3 + 1;

     label273:
        $i4 = $i4 + 1;

        goto label269;

     label274:
        $d0 = 0.0;

        goto label270;

     label275:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r5 = $r9[1];

        $r5[$i0] = $d0;

        goto label271;

     label276:
        specialinvoke r0.<com.metrictrade.and.fs: void c(com.metrictrade.and.fs,int,int,int)>($r1, $i0, $i1, $i2);

        goto label003;

     label277:
        specialinvoke r0.<com.metrictrade.and.fs: void c(com.metrictrade.and.fs)>($r1);

        goto label003;

     label278:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,boolean,com.metrictrade.and.fs,int,int)>($i0, 1, $r1, $i4, $i5);

        goto label003;

     label279:
        specialinvoke r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,int,int)>($r1, $i1, $i2);

        goto label003;

     label280:
        specialinvoke r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,int,int,int)>($r1, $i1, $i4, $i5);

        goto label003;

     label281:
        specialinvoke r0.<com.metrictrade.and.fs: void b(int,com.metrictrade.and.fs,int,int)>($i0, $r1, $i4, $i5);

        goto label003;

     label282:
        $i0 = r0.<com.metrictrade.and.fs: int h>;

        $i1 = r0.<com.metrictrade.and.fs: int h>;

        $r3 = virtualinvoke $r1.<com.metrictrade.and.fs: double[] b(int,int)>($i5, $i1);

        $r9 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[3];

        if $r4 == null goto label003;

        $i1 = 0;

     label283:
        if $i1 >= $i0 goto label003;

        $d0 = $r4[$i1];

        $r3[$i1] = $d0;

        $i1 = $i1 + 1;

        goto label283;

     label284:
        specialinvoke r0.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,int)>($r1, $i5);

        goto label003;

     label285:
        specialinvoke r0.<com.metrictrade.and.fs: void c(com.metrictrade.and.fs,int)>($r1, $i0);

        goto label003;

     label286:
        $i1 = r0.<com.metrictrade.and.fs: int o>;

        if $i1 != 281 goto label287;

        $i0 = r0.<com.metrictrade.and.fs: int s>;

     label287:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,int,com.metrictrade.and.fs,int,int)>($i0, $i3, $r1, $i4, $i5);

        goto label003;

     label288:
        specialinvoke r0.<com.metrictrade.and.fs: void a(int,com.metrictrade.and.fs,int,int)>($i0, $r1, $i4, $i5);

        goto label003;

     label289:
        $r9 = $r1.<com.metrictrade.and.fs: double[][] i>;

        $r4 = $r9[1];

        $d0 = $r4[$i0];

        $r3[$i0] = $d0;

        $i0 = $i0 + 1;

        goto label004;

     label290:
        $d0 = $d4;

        $d1 = $d2;

        goto label252;

     label291:
        $d2 = $d1;

        goto label254;

     label292:
        $d0 = $d4;

        goto label252;

     label293:
        goto label236;

     label294:
        $d2 = $d1;

        goto label231;

     label295:
        $d4 = $d0;

        goto label230;

     label296:
        goto label175;

     label297:
        goto label158;

     label298:
        $d1 = $d4;

        goto label138;

     label299:
        $i0 = $i2;

        goto label081;

     label300:
        goto label020;

     label301:
        goto label001;

     label302:
        return;
    }

    public final void a(boolean, com.metrictrade.and.fy)
    {
        com.metrictrade.and.dd $r3;
        com.metrictrade.and.fy $r1;
        com.metrictrade.and.fs r0, $r2;
        com.metrictrade.and.fr $r4;
        com.metrictrade.and.fp $r5;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6;
        boolean $z0, $z1;

        r0 := @this: com.metrictrade.and.fs;

        $z0 := @parameter0: boolean;

        $r1 := @parameter1: com.metrictrade.and.fy;

        $r2 = r0.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        if $r2 == null goto label1;

        $r2 = r0.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        virtualinvoke $r2.<com.metrictrade.and.fs: void a(boolean,com.metrictrade.and.fy)>($z0, $r1);

     label1:
        $i0 = r0.<com.metrictrade.and.fs: int o>;

        if $i0 < 0 goto label4;

        $i0 = r0.<com.metrictrade.and.fs: int o>;

        if $i0 >= 100 goto label2;

        $r3 = r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $z1 = $r3 instanceof com.metrictrade.and.fr;

        if $z1 == 0 goto label2;

        $r3 = r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $r4 = (com.metrictrade.and.fr) $r3;

        specialinvoke r0.<com.metrictrade.and.fs: com.metrictrade.and.fs a(com.metrictrade.and.fr)>($r4);

        return;

     label2:
        $r3 = r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $z1 = $r3 instanceof com.metrictrade.and.fs;

        if $z1 == 0 goto label4;

        $r5 = r0.<com.metrictrade.and.fs: com.metrictrade.and.fp J>;

        if $r5 == null goto label3;

        $r5 = r0.<com.metrictrade.and.fs: com.metrictrade.and.fp J>;

        $r3 = r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $r2 = (com.metrictrade.and.fs) $r3;

        virtualinvoke $r5.<com.metrictrade.and.fp: void a(com.metrictrade.and.fs,com.metrictrade.and.fs,com.metrictrade.and.fy)>($r2, r0, $r1);

        return;

     label3:
        $r3 = r0.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $r2 = (com.metrictrade.and.fs) $r3;

        $i0 = r0.<com.metrictrade.and.fs: int o>;

        $i1 = r0.<com.metrictrade.and.fs: int q>;

        $i2 = r0.<com.metrictrade.and.fs: int r>;

        $i3 = r0.<com.metrictrade.and.fs: int s>;

        $i4 = r0.<com.metrictrade.and.fs: int w>;

        $i5 = r0.<com.metrictrade.and.fs: int u>;

        $i6 = r0.<com.metrictrade.and.fs: int v>;

        virtualinvoke $r2.<com.metrictrade.and.fs: void a(com.metrictrade.and.fs,int,int,int,int,int,boolean,com.metrictrade.and.fy,int,int)>(r0, $i0, $i1, $i2, $i3, $i4, $z0, $r1, $i5, $i6);

     label4:
        return;
    }

    public final java.lang.String b(int)
    {
        com.metrictrade.and.dd $r3;
        com.metrictrade.and.fs r1, $r2;
        int $i0;
        java.lang.String $r0;

        r1 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

     label1:
        if $i0 != 32 goto label3;

        $r0 = r1.<com.metrictrade.and.fs: java.lang.String F>;

        if $r0 == null goto label2;

        $r0 = r1.<com.metrictrade.and.fs: java.lang.String F>;

        return $r0;

     label2:
        $r2 = r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        if $r2 == null goto label3;

        r1 = r1.<com.metrictrade.and.fs: com.metrictrade.and.fs E>;

        $i0 = 2;

        goto label1;

     label3:
        $r3 = r1.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        if $r3 == null goto label4;

        $r3 = r1.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        if $r3 == r1 goto label4;

        $r3 = r1.<com.metrictrade.and.fs: com.metrictrade.and.dd x>;

        $r0 = interfaceinvoke $r3.<com.metrictrade.and.dd: java.lang.String b(int)>($i0);

        return $r0;

     label4:
        return null;
    }

    public final double[] b(int, int)
    {
        double[] $r3, $r4;
        com.metrictrade.and.fs r0;
        int $i0, $i1, $i2, $i3;
        double[][] $r1, $r2;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i2 = lengthof $r1;

        if $i0 < $i2 goto label2;

        $i2 = $i0 >> 6;

        $i2 = $i2 + 1;

        $i2 = $i2 << 6;

        $r1 = newarray (double[])[$i2];

        $i2 = 0;

     label1:
        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $i3 = lengthof $r2;

        if $i2 < $i3 goto label5;

        r0.<com.metrictrade.and.fs: double[][] i> = $r1;

     label2:
        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r1[$i0];

        $i1 = $i1 >> 9;

        $i1 = $i1 + 1;

        $i1 = $i1 << 9;

        if $r3 == null goto label3;

        $i2 = lengthof $r3;

        if $i1 <= $i2 goto label6;

     label3:
        $r4 = newarray (double)[$i1];

        if $r3 == null goto label4;

        $i1 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i1);

     label4:
        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r1[$i0] = $r4;

        return $r4;

     label5:
        $r2 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r2[$i2];

        $r1[$i2] = $r3;

        $i2 = $i2 + 1;

        goto label1;

     label6:
        return $r3;
    }

    public final int c(int)
    {
        double[] $r2, $r3;
        com.metrictrade.and.fs r0;
        byte $b3;
        int $i0, $i1, $i2;
        double[][] $r1;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $z0 = 0;

        if $i0 >= 0 goto label01;

        $i0 = neg $i0;

        $z0 = 1;

     label01:
        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r2 = $r1[8];

        $r1 = r0.<com.metrictrade.and.fs: double[][] i>;

        $r3 = $r1[9];

        if $r2 == null goto label03;

        $i1 = 0;

     label02:
        $i2 = lengthof $r2;

        if $i1 < $i2 goto label04;

     label03:
        return -1;

     label04:
        $d0 = r0.<com.metrictrade.and.fs: double I>;

        $d1 = $r2[$i1];

        $i2 = (int) $d1;

        $d1 = (double) $i2;

        $b3 = $d0 cmpl $d1;

        if $b3 != 0 goto label11;

        $i2 = r0.<com.metrictrade.and.fs: int o>;

        if $i2 != 8 goto label05;

        $d0 = $r3[$i1];

        $b3 = $d0 cmpl 2.0;

        if $b3 == 0 goto label05;

        $d0 = $r3[$i1];

        $b3 = $d0 cmpl 3.0;

        if $b3 != 0 goto label11;

     label05:
        $i0 = $i0 + -1;

        if $i0 != 0 goto label11;

        if $z0 == 0 goto label10;

        $d0 = $r3[$i1];

        $b3 = $d0 cmpl 6.0;

        if $b3 != 0 goto label07;

        $d0 = 1.0;

     label06:
        $i0 = (int) $d0;

        return $i0;

     label07:
        $d0 = $r3[$i1];

        $b3 = $d0 cmpl 1.0;

        if $b3 != 0 goto label08;

        $d0 = 0.0;

        goto label06;

     label08:
        $d0 = $r3[$i1];

        $b3 = $d0 cmpl 3.0;

        if $b3 != 0 goto label09;

        $d0 = 2.0;

        goto label06;

     label09:
        $d0 = $r3[$i1];

        goto label06;

     label10:
        $d0 = $r2[$i1];

        goto label06;

     label11:
        $i1 = $i1 + 1;

        goto label02;
    }

    public final java.lang.String d(int)
    {
        com.metrictrade.and.fs r0;
        int $i0, $i1;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.fs: java.lang.String[] L>;

        if $r1 == null goto label1;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fs: java.lang.String[] L>;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<com.metrictrade.and.fs: java.lang.String[] L>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final char[] e(int)
    {
        com.metrictrade.and.fs r0;
        int $i0, $i1;
        char[] $r3;
        char[][] $r2;
        char[][][] $r1;

        r0 := @this: com.metrictrade.and.fs;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.fs: char[][][] M>;

        if $r1 == null goto label1;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r2 = $r1[0];

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r1 = r0.<com.metrictrade.and.fs: char[][][] M>;

        $r2 = $r1[0];

        $r3 = $r2[$i0];

        return $r3;
    }

    public final java.lang.String toString()
    {
        java.lang.String r1;
        com.metrictrade.and.fs r0;
        boolean $z0;

        r0 := @this: com.metrictrade.and.fs;

        $z0 = r0.<com.metrictrade.and.fs: boolean f>;

        if $z0 == 0 goto label1;

        return null;

     label1:
        r1 = r0.<com.metrictrade.and.fs: java.lang.String a>;

        return r1;
    }
}
