public final class com.metrictrade.and.eh extends java.lang.Object
{
    public byte[] a;
    public int b;
    public int c;
    public int d;
    public int e;

    public void <init>()
    {
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.metrictrade.and.eh: int b> = 0;

        r0.<com.metrictrade.and.eh: int c> = 0;

        r0.<com.metrictrade.and.eh: int d> = 0;

        r0.<com.metrictrade.and.eh: int e> = 0;

        return;
    }

    public final int a(int)
    {
        byte[] $r1;
        short $s5, $s6;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        $i0 := @parameter0: int;

        $i2 = r0.<com.metrictrade.and.eh: int e>;

        if $i2 >= $i0 goto label2;

        $i2 = r0.<com.metrictrade.and.eh: int b>;

        $i1 = r0.<com.metrictrade.and.eh: int c>;

        if $i2 != $i1 goto label1;

        return -1;

     label1:
        $r1 = r0.<com.metrictrade.and.eh: byte[] a>;

        $i2 = r0.<com.metrictrade.and.eh: int d>;

        $i1 = r0.<com.metrictrade.and.eh: int b>;

        $i3 = $i1 + 1;

        r0.<com.metrictrade.and.eh: int b> = $i3;

        $b4 = $r1[$i1];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = r0.<com.metrictrade.and.eh: int b>;

        $i1 = $i3 + 1;

        r0.<com.metrictrade.and.eh: int b> = $i1;

        $b4 = $r1[$i3];

        $s6 = (short) $b4;

        $s6 = $s6 & 255;

        $i1 = (int) $s6;

        $i1 = $i1 << 8;

        $i3 = (int) $s5;

        $i1 = $i1 | $i3;

        $i3 = r0.<com.metrictrade.and.eh: int e>;

        $i1 = $i1 << $i3;

        $i2 = $i1 | $i2;

        r0.<com.metrictrade.and.eh: int d> = $i2;

        $i2 = r0.<com.metrictrade.and.eh: int e>;

        $i2 = $i2 + 16;

        r0.<com.metrictrade.and.eh: int e> = $i2;

     label2:
        $i2 = r0.<com.metrictrade.and.eh: int d>;

        $i0 = 1 << $i0;

        $i0 = $i0 + -1;

        $i0 = $i2 & $i0;

        return $i0;
    }

    public final int a(byte[], int, int)
    {
        byte[] $r1, $r2;
        java.lang.IllegalStateException $r4;
        java.lang.IllegalArgumentException $r3;
        short $s6;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4;
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i1 >= 0 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("length negative");

        throw $r3;

     label1:
        $i2 = r0.<com.metrictrade.and.eh: int e>;

        $i2 = $i2 & 7;

        if $i2 == 0 goto label2;

        $r4 = new java.lang.IllegalStateException;

        specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Bit buffer is not aligned!");

        throw $r4;

     label2:
        $i2 = 0;

     label3:
        $i3 = r0.<com.metrictrade.and.eh: int e>;

        if $i3 <= 0 goto label4;

        if $i1 > 0 goto label5;

     label4:
        if $i1 != 0 goto label6;

        return $i2;

     label5:
        $i3 = $i0 + 1;

        $i4 = r0.<com.metrictrade.and.eh: int d>;

        $b5 = (byte) $i4;

        $r1[$i0] = $b5;

        $i0 = r0.<com.metrictrade.and.eh: int d>;

        $i0 = $i0 >>> 8;

        r0.<com.metrictrade.and.eh: int d> = $i0;

        $i0 = r0.<com.metrictrade.and.eh: int e>;

        $i0 = $i0 + -8;

        r0.<com.metrictrade.and.eh: int e> = $i0;

        $i1 = $i1 + -1;

        $i2 = $i2 + 1;

        $i0 = $i3;

        goto label3;

     label6:
        $i3 = r0.<com.metrictrade.and.eh: int c>;

        $i4 = r0.<com.metrictrade.and.eh: int b>;

        $i3 = $i3 - $i4;

        if $i1 <= $i3 goto label7;

        $i1 = $i3;

     label7:
        $r2 = r0.<com.metrictrade.and.eh: byte[] a>;

        $i3 = r0.<com.metrictrade.and.eh: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i3, $r1, $i0, $i1);

        $i0 = r0.<com.metrictrade.and.eh: int b>;

        $i0 = $i0 + $i1;

        r0.<com.metrictrade.and.eh: int b> = $i0;

        $i0 = r0.<com.metrictrade.and.eh: int b>;

        $i3 = r0.<com.metrictrade.and.eh: int c>;

        $i0 = $i0 - $i3;

        $i0 = $i0 & 1;

        if $i0 == 0 goto label8;

        $r1 = r0.<com.metrictrade.and.eh: byte[] a>;

        $i3 = r0.<com.metrictrade.and.eh: int b>;

        $i0 = $i3 + 1;

        r0.<com.metrictrade.and.eh: int b> = $i0;

        $b5 = $r1[$i3];

        $s6 = (short) $b5;

        $s6 = $s6 & 255;

        $i0 = (int) $s6;

        r0.<com.metrictrade.and.eh: int d> = $i0;

        r0.<com.metrictrade.and.eh: int e> = 8;

     label8:
        $i0 = $i2 + $i1;

        return $i0;
    }

    public final void a()
    {
        int $i0, $i1;
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        $i0 = r0.<com.metrictrade.and.eh: int d>;

        $i1 = r0.<com.metrictrade.and.eh: int e>;

        $i1 = $i1 & 7;

        $i0 = $i0 >> $i1;

        r0.<com.metrictrade.and.eh: int d> = $i0;

        $i0 = r0.<com.metrictrade.and.eh: int e>;

        $i0 = $i0 & -8;

        r0.<com.metrictrade.and.eh: int e> = $i0;

        return;
    }

    public final void b(int)
    {
        int $i0, $i1;
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.eh: int d>;

        $i1 = $i1 >>> $i0;

        r0.<com.metrictrade.and.eh: int d> = $i1;

        $i1 = r0.<com.metrictrade.and.eh: int e>;

        $i0 = $i1 - $i0;

        r0.<com.metrictrade.and.eh: int e> = $i0;

        return;
    }

    public final boolean b()
    {
        int $i0, $i1;
        com.metrictrade.and.eh r0;

        r0 := @this: com.metrictrade.and.eh;

        $i1 = r0.<com.metrictrade.and.eh: int b>;

        $i0 = r0.<com.metrictrade.and.eh: int c>;

        if $i1 != $i0 goto label1;

        return 1;

     label1:
        return 0;
    }
}
