public final class com.metrictrade.and.fr extends com.metrictrade.and.dh
{
    public static boolean B;
    public static int aA;
    public static int aB;
    public static int aC;
    public static int aD;
    public static int aE;
    public static int aF;
    public static int aG;
    public static int aH;
    private static char[] aR;
    private static int aS;
    private static int aT;
    public static int[] ao;
    public static java.lang.Object ap;
    public double[] C;
    public double[] D;
    public double[][] E;
    public double[] F;
    public double[][] G;
    public java.lang.String[][][] H;
    public double[][][] I;
    public double[] K;
    public com.metrictrade.and.dg L;
    public boolean M;
    public java.lang.String N;
    public boolean O;
    public java.lang.String P;
    public double Q;
    public com.metrictrade.and.dg R;
    public int S;
    public double[][] T;
    public double[][] U;
    public double[][] V;
    public double[][][] W;
    public double[][] X;
    public java.lang.String[] Y;
    public double[] Z;
    private boolean aI;
    private double[][] aJ;
    private double[][] aK;
    private double[][] aL;
    private double[] aM;
    private long aN;
    private boolean aO;
    private java.util.Calendar aP;
    private double aQ;
    public double[][] aa;
    public double[] ab;
    public double[] ac;
    public int ad;
    public long ae;
    public int af;
    public int ag;
    protected int ah;
    public int ai;
    public com.metrictrade.and.dg aj;
    public com.metrictrade.and.ak ak;
    public boolean al;
    public double am;
    public double an;
    public long aq;
    public long ar;
    public long as;
    public double[] at;
    public com.metrictrade.and.fr au;
    public com.metrictrade.and.fr av;
    public com.metrictrade.and.ak aw;
    public int[] ax;
    public java.lang.String ay;
    public boolean az;

    static void <clinit>()
    {
        char[] $r2;
        java.lang.Object $r1;
        int[] $r0;

        $r0 = newarray (int)[7];

        $r0[0] = 1;

        $r0[1] = 4;

        $r0[2] = 13;

        $r0[3] = 26;

        $r0[4] = 52;

        $r0[5] = 100;

        $r0[6] = 101;

        <com.metrictrade.and.fr: int[] ao> = $r0;

        $r1 = new java.lang.Object;

        specialinvoke $r1.<java.lang.Object: void <init>()>();

        <com.metrictrade.and.fr: java.lang.Object ap> = $r1;

        $r2 = newarray (char)[56];

        $r2[0] = 115;

        $r2[1] = 99;

        $r2[2] = 115;

        $r2[3] = 98;

        $r2[4] = 115;

        $r2[5] = 102;

        $r2[6] = 115;

        $r2[7] = 112;

        $r2[8] = 115;

        $r2[9] = 114;

        $r2[10] = 115;

        $r2[11] = 100;

        $r2[12] = 115;

        $r2[13] = 116;

        $r2[14] = 115;

        $r2[15] = 104;

        $r2[16] = 115;

        $r2[17] = 118;

        $r2[18] = 115;

        $r2[19] = 115;

        $r2[20] = 115;

        $r2[21] = 110;

        $r2[22] = 115;

        $r2[23] = 108;

        $r2[24] = 115;

        $r2[25] = 120;

        $r2[26] = 115;

        $r2[27] = 51;

        $r2[28] = 115;

        $r2[29] = 52;

        $r2[30] = 115;

        $r2[31] = 53;

        $r2[32] = 115;

        $r2[33] = 54;

        $r2[34] = 115;

        $r2[35] = 55;

        $r2[36] = 115;

        $r2[37] = 56;

        $r2[38] = 115;

        $r2[39] = 57;

        $r2[40] = 115;

        $r2[41] = 73;

        $r2[42] = 115;

        $r2[43] = 65;

        $r2[44] = 115;

        $r2[45] = 79;

        $r2[46] = 115;

        $r2[47] = 119;

        $r2[48] = 115;

        $r2[49] = 107;

        $r2[50] = 115;

        $r2[51] = 113;

        $r2[52] = 115;

        $r2[53] = 106;

        $r2[54] = 115;

        $r2[55] = 111;

        <com.metrictrade.and.fr: char[] aR> = $r2;

        <com.metrictrade.and.fr: int aA> = 2;

        <com.metrictrade.and.fr: int aS> = 9;

        <com.metrictrade.and.fr: int aT> = 7;

        <com.metrictrade.and.fr: int aB> = 5;

        <com.metrictrade.and.fr: int aC> = 31;

        <com.metrictrade.and.fr: int aD> = 3;

        <com.metrictrade.and.fr: int aE> = 4;

        <com.metrictrade.and.fr: int aF> = 5;

        <com.metrictrade.and.fr: int aG> = 6;

        <com.metrictrade.and.fr: int aH> = 87;

        $r0 = newarray (int)[15];

        $r0[0] = 12;

        $r0[1] = 17;

        $r0[3] = 12;

        $r0[4] = 8;

        $r0[5] = 14;

        $r0[6] = 4;

        $r0[7] = 17;

        $r0[8] = 24;

        $r0[9] = 8;

        $r0[10] = 6;

        $r0[11] = 4;

        $r0[12] = 6;

        $r0[13] = 5;

        $r0[14] = 4;

        $r0 = newarray (int)[14];

        $r0[0] = 10;

        $r0[1] = 16;

        $r0[2] = 54;

        $r0[3] = 31;

        $r0[4] = 14;

        $r0[5] = 9;

        $r0[6] = 17;

        $r0[7] = 12;

        $r0[8] = 8;

        $r0[9] = 6;

        $r0[10] = 4;

        $r0[11] = 6;

        $r0[12] = 5;

        $r0[13] = 4;

        return;
    }

    public void <init>(int, java.lang.String)
    {
        boolean[] $r2;
        double[] $r3;
        java.lang.String[] $r4;
        byte $b1;
        com.metrictrade.and.fr r0;
        int $i0, $i2;
        java.lang.String $r1;
        double[][] $r5;
        boolean $z0;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $b1 = 0;

        specialinvoke r0.<com.metrictrade.and.dh: void <init>(int,java.lang.String)>($i0, $r1);

        $z0 = staticinvoke <com.metrictrade.and.fj: boolean d(int,java.lang.String)>($i0, $r1);

        r0.<com.metrictrade.and.fr: boolean v> = $z0;

        $r2 = newarray (boolean)[56];

        r0.<com.metrictrade.and.dh: boolean[] J> = $r2;

        $r3 = newarray (double)[64];

        r0.<com.metrictrade.and.fr: double[] D> = $r3;

        $r3 = newarray (double)[64];

        r0.<com.metrictrade.and.fr: double[] Z> = $r3;

        $r3 = newarray (double)[64];

        r0.<com.metrictrade.and.fr: double[] C> = $r3;

        $r3 = newarray (double)[36];

        r0.<com.metrictrade.and.fr: double[] at> = $r3;

        $r4 = newarray (java.lang.String)[32];

        r0.<com.metrictrade.and.fr: java.lang.String[] e> = $r4;

        r0.<com.metrictrade.and.fr: double aQ> = 1.0;

        $r3 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = (double) -4616189618054758400L;

        $r3[27] = $d0;

        $r3 = newarray (double)[64];

        r0.<com.metrictrade.and.fr: double[] F> = $r3;

        $r5 = newarray (double[])[13];

        r0.<com.metrictrade.and.fr: double[][] E> = $r5;

        $r5 = newarray (double[])[5];

        r0.<com.metrictrade.and.fr: double[][] aa> = $r5;

        $i2 = 0;

     label1:
        if $i2 < 5 goto label5;

        $r5 = newarray (double[])[7];

        r0.<com.metrictrade.and.fr: double[][] aL> = $r5;

        $i2 = 0;

     label2:
        if $i2 < 7 goto label6;

        $r5 = newarray (double[])[8];

        r0.<com.metrictrade.and.fr: double[][] V> = $r5;

        $r5 = newarray (double[])[8];

        r0.<com.metrictrade.and.fr: double[][] T> = $r5;

        $r5 = newarray (double[])[8];

        r0.<com.metrictrade.and.fr: double[][] U> = $r5;

        $r5 = newarray (double[])[8];

        r0.<com.metrictrade.and.fr: double[][] aJ> = $r5;

        $r5 = newarray (double[])[8];

        r0.<com.metrictrade.and.fr: double[][] aK> = $r5;

        $r3 = newarray (double)[8];

        r0.<com.metrictrade.and.fr: double[] ab> = $r3;

        $z0 = staticinvoke <com.metrictrade.and.fj: boolean v(int)>($i0);

        r0.<com.metrictrade.and.fr: boolean az> = $z0;

        if $r1 == null goto label3;

        $z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>("$$");

        if $z0 == 0 goto label3;

        r0.<com.metrictrade.and.fr: int S> = 115;

     label3:
        $z0 = r0.<com.metrictrade.and.fr: boolean az>;

        if $z0 == 0 goto label4;

        $b1 = -1;

     label4:
        r0.<com.metrictrade.and.fr: int ad> = $b1;

        $z0 = r0.<com.metrictrade.and.fr: boolean v>;

        if $z0 == 0 goto label7;

        virtualinvoke r0.<com.metrictrade.and.fr: java.lang.String a()>();

        return;

     label5:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = newarray (double)[32];

        $r5[$i2] = $r3;

        $i2 = $i2 + 1;

        goto label1;

     label6:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r3 = newarray (double)[32];

        $r5[$i2] = $r3;

        $i2 = $i2 + 1;

        goto label2;

     label7:
        return;
    }

    private static int a(double[], double)
    {
        double[] $r0;
        byte $b2;
        int $i0, $i1, $i3;
        double $d0, $d1, $d2;

        $r0 := @parameter0: double[];

        $d0 := @parameter1: double;

        if $r0 != null goto label1;

        return -1;

     label1:
        $i0 = lengthof $r0;

        $i1 = 0;

     label2:
        if $i1 >= $i0 goto label6;

        $d1 = $r0[$i1];

        $b2 = $d1 cmpl 0.0;

        if $b2 == 0 goto label7;

        $b2 = $d0 cmpl $d1;

        $i3 = (int) $b2;

        if $i3 < 0 goto label3;

        $d2 = $d0 - $d1;

        $b2 = $d2 cmpg 1.0E-5;

        $i3 = (int) $b2;

        if $i3 < 0 goto label4;

     label3:
        $b2 = $d1 cmpl $d0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label5;

        $d1 = $d1 - $d0;

        $b2 = $d1 cmpg 1.0E-5;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label5;

     label4:
        return $i1;

     label5:
        $i1 = $i1 + 1;

        goto label2;

     label6:
        return -1;

     label7:
        return -1;
    }

    private int a(double[][], int, double, int, java.lang.String[], double, int, int)
    {
        double[] $r3, $r4, $r5;
        java.lang.String[] $r2, $r6, $r7, $r8;
        byte $b10;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i11, $i12;
        double $d0, $d1, $d2;
        com.metrictrade.and.fr r0;
        double[][] $r1, $r9;

        r0 := @this: com.metrictrade.and.fr;

        $r1 := @parameter0: double[][];

        $i0 := @parameter1: int;

        $d0 := @parameter2: double;

        $i1 := @parameter3: int;

        $r2 := @parameter4: java.lang.String[];

        $d1 := @parameter5: double;

        $i2 := @parameter6: int;

        $i3 := @parameter7: int;

     label01:
        $r3 = $r1[$i0];

        if $r3 == null goto label32;

        if $i3 != -1 goto label03;

        $i3 = 0;

        $i4 = lengthof $r3;

        $i4 = $i4 + -1;

     label02:
        if $i4 >= 0 goto label07;

     label03:
        $i5 = lengthof $r3;

        if $i3 < $i5 goto label19;

        if $i2 < 0 goto label15;

        $r3 = $r1[$i2];

        $i4 = lengthof $r3;

        if $i4 < 1024 goto label15;

        $i4 = 0;

        $i6 = 0;

        $d1 = 0.01 + $d1;

        $i7 = (int) $d1;

        $i8 = $i7 / 100;

        $i7 = $i8 / 100;

        $i8 = $i8 % 100;

        $r3 = $r1[$i2];

        $i9 = lengthof $r3;

        $i9 = $i9 + -1;

     label04:
        if $i9 >= 0 goto label09;

     label05:
        if $i6 <= 0 goto label15;

        $i2 = 0;

     label06:
        if $i2 < $i1 goto label12;

        $i2 = r0.<com.metrictrade.and.fr: int af>;

        $i2 = $i2 - $i4;

        r0.<com.metrictrade.and.fr: int af> = $i2;

        $d1 = 0.0;

        $i2 = -1;

        $i3 = $i3 - $i4;

        goto label01;

     label07:
        $d2 = $r3[$i4];

        $b10 = $d2 cmpl 0.0;

        if $b10 == 0 goto label08;

        $i3 = $i4 + 1;

        goto label03;

     label08:
        $i4 = $i4 + -1;

        goto label02;

     label09:
        $r3 = $r1[$i2];

        $d1 = $r3[$i9];

        $b10 = $d1 cmpl 0.0;

        if $b10 == 0 goto label11;

        $r3 = $r1[$i2];

        $d1 = $r3[$i9];

        $d1 = $d1 + 0.01;

        $i11 = (int) $d1;

        $i11 = $i11 / 100;

        $i12 = $i11 / 100;

        $i11 = $i11 % 100;

        $i12 = $i7 - $i12;

        $i12 = $i12 * 60;

        $i11 = $i8 - $i11;

        $i11 = $i11 + $i12;

        if $i11 <= 30 goto label10;

        $i6 = $i9 + 1;

        goto label05;

     label10:
        if $i4 != 0 goto label11;

        if $i11 <= 21 goto label11;

        $i4 = $i9 + 1;

     label11:
        $i9 = $i9 + -1;

        goto label04;

     label12:
        $r3 = $r1[$i2];

        $r4 = $r1[$i2];

        $r5 = $r1[$i2];

        $i5 = lengthof $r5;

        $i5 = $i5 - $i4;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i4, $r4, 0, $i5);

        $i5 = $i4 + -1;

     label13:
        if $i5 >= 0 goto label14;

        $i2 = $i2 + 1;

        goto label06;

     label14:
        $r3 = $r1[$i2];

        $r4 = $r1[$i2];

        $i6 = lengthof $r4;

        $i6 = $i6 - $i4;

        $i6 = $i6 + $i5;

        $r3[$i6] = 0.0;

        $i5 = $i5 + -1;

        goto label13;

     label15:
        $i2 = $i5 + 1;

        $i2 = staticinvoke <com.metrictrade.and.fr: int p(int)>($i2);

        if $r2 == null goto label16;

        $i4 = lengthof $r2;

        if $i4 >= $i2 goto label16;

        $r6 = newarray (java.lang.String)[$i2];

        $r2 = $r6;

        $r7 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        $r8 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        $i4 = lengthof $r8;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r7, 0, $r6, 0, $i4);

        r0.<com.metrictrade.and.fr: java.lang.String[] Y> = $r6;

     label16:
        $r9 = newarray (double[])[$i1];

        $i4 = $i1 + -1;

     label17:
        if $i4 >= 0 goto label25;

        $i2 = $i1 + -1;

     label18:
        if $i2 >= 0 goto label26;

     label19:
        $r3 = $r1[$i0];

        $i2 = $i3 + -1;

        $i0 = $i3;

     label20:
        if $i2 >= 0 goto label27;

     label21:
        if $i0 >= $i3 goto label34;

        $i2 = $i3 + -1;

     label22:
        if $i2 >= $i0 goto label28;

        if $r2 == null goto label23;

        $i2 = $i0 + 1;

        $i3 = $i3 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r2, $i2, $i3);

        $r2[$i0] = null;

     label23:
        $i2 = 0;

     label24:
        if $i2 < $i1 goto label31;

        return $i0;

     label25:
        $r3 = newarray (double)[$i2];

        $r9[$i4] = $r3;

        $r3 = $r1[$i4];

        $r4 = $r9[$i4];

        $r5 = $r1[$i4];

        $i5 = lengthof $r5;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r4, 0, $i5);

        $i4 = $i4 + -1;

        goto label17;

     label26:
        $r3 = $r9[$i2];

        $r1[$i2] = $r3;

        $i2 = $i2 + -1;

        goto label18;

     label27:
        $d1 = $r3[$i2];

        $d2 = 1.0E-5 + $d0;

        $b10 = $d1 cmpg $d2;

        $i4 = (int) $b10;

        if $i4 < 0 goto label21;

        $i4 = $i2 + -1;

        $i0 = $i2;

        $i2 = $i4;

        goto label20;

     label28:
        $i4 = $i1 + -1;

     label29:
        if $i4 >= 0 goto label30;

        $i2 = $i2 + -1;

        goto label22;

     label30:
        $r3 = $r1[$i4];

        $i5 = $i2 + 1;

        $r4 = $r1[$i4];

        $d0 = $r4[$i2];

        $r3[$i5] = $d0;

        $i4 = $i4 + -1;

        goto label29;

     label31:
        $r3 = $r1[$i2];

        $r3[$i0] = 0.0;

        $i2 = $i2 + 1;

        goto label24;

     label32:
        $i0 = $i1 + -1;

     label33:
        if $i0 < 0 goto label35;

        $r3 = newarray (double)[512];

        $r1[$i0] = $r3;

        $i0 = $i0 + -1;

        goto label33;

     label34:
        return $i0;

     label35:
        return 0;
    }

    public static com.metrictrade.and.dg a(com.metrictrade.and.fr, java.lang.String, com.metrictrade.and.ct)
    {
        java.lang.Throwable $r9;
        double[] $r6;
        com.metrictrade.and.ct $r2;
        byte $b1;
        com.metrictrade.and.ak $r4;
        int $i0, $i2, $i3;
        java.lang.String $r1;
        double $d0, $d1, $d2, $d3;
        boolean $z0;
        com.metrictrade.and.fr $r0, $r8;
        java.lang.Object $r3, $r7;
        com.metrictrade.and.dg $r5;

        $r0 := @parameter0: com.metrictrade.and.fr;

        $r1 := @parameter1: java.lang.String;

        $r2 := @parameter2: com.metrictrade.and.ct;

        $i0 = $r0.<com.metrictrade.and.fr: int a>;

        if $i0 != 4 goto label04;

        $b1 = 19;

     label01:
        $r5 = virtualinvoke $r2.<com.metrictrade.and.ct: com.metrictrade.and.dg a(int,java.lang.String,boolean,boolean)>($b1, $r1, 1, 1);

        $r3 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r3;

     label02:
        $z0 = virtualinvoke $r5.<com.metrictrade.and.dg: boolean a(java.lang.Object)>($r0);

        if $z0 == 0 goto label05;

        exitmonitor $r3;

     label03:
        return $r5;

     label04:
        $b1 = 18;

        goto label01;

     label05:
        $r4 = $r5.<com.metrictrade.and.dg: com.metrictrade.and.ak B>;

        $r6 = $r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r6[40];

        $r6 = $r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r6[39];

        $i0 = $r4.<com.metrictrade.and.ak: int a>;

        $i2 = 0;

     label06:
        if $i2 < $i0 goto label10;

        $z0 = 0;

     label07:
        if $z0 != 0 goto label08;

        virtualinvoke $r4.<com.metrictrade.and.ak: boolean c(java.lang.Object)>($r0);

        virtualinvoke $r5.<com.metrictrade.and.dg: boolean a(boolean,com.metrictrade.and.df)>(0, $r0);

     label08:
        exitmonitor $r3;

     label09:
        return $r5;

     label10:
        $r7 = virtualinvoke $r4.<com.metrictrade.and.ak: java.lang.Object a(int)>($i2);

        $r8 = (com.metrictrade.and.fr) $r7;

        $r6 = $r8.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r6[40];

        $r6 = $r8.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r6[39];

        $b1 = $d3 cmpl $d0;

        $i3 = (int) $b1;

        if $i3 > 0 goto label11;

        $b1 = $d3 cmpl $d0;

        if $b1 != 0 goto label12;

        $b1 = $d2 cmpl $d1;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label12;

     label11:
        virtualinvoke $r4.<com.metrictrade.and.ak: void b(int,java.lang.Object)>($i2, $r0);

        virtualinvoke $r5.<com.metrictrade.and.dg: boolean a(boolean,com.metrictrade.and.df)>(0, $r0);

        $z0 = 1;

        goto label07;

     label12:
        $i2 = $i2 + 1;

        goto label06;

     label13:
        $r9 := @caughtexception;

        exitmonitor $r3;

     label14:
        throw $r9;

        catch java.lang.Throwable from label02 to label03 with label13;
        catch java.lang.Throwable from label05 to label09 with label13;
        catch java.lang.Throwable from label10 to label14 with label13;
    }

    private void a(int, double, double, double, double, double, double, double, double, double, double, boolean)
    {
        byte $b5;
        boolean $z0, $z1;
        com.metrictrade.and.fr r0;
        double[][] $r1, $r5;
        double[] $r3, $r4;
        long $l3;
        java.util.Calendar $r2;
        int $i0, $i1, $i2, $i4, $i6, $i7, $i8, $i9;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;

        r0 := @this: com.metrictrade.and.fr;

        $i2 := @parameter0: int;

        $d9 := @parameter1: double;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        $d4 := @parameter6: double;

        $d5 := @parameter7: double;

        $d10 := @parameter8: double;

        $d6 := @parameter9: double;

        $d7 := @parameter10: double;

        $z0 := @parameter11: boolean;

        $d11 = $d2;

     label01:
        $r1 = virtualinvoke r0.<com.metrictrade.and.fr: double[][] i(int)>($i2);

        $r2 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        if $r2 != null goto label02;

        $r2 = staticinvoke <com.metrictrade.and.fj: java.util.Calendar c()>();

        r0.<com.metrictrade.and.fr: java.util.Calendar aP> = $r2;

     label02:
        $l3 = (long) $i2;

        $r2 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        $d9 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d9, $l3, $r2);

        $r3 = $r1[0];

        $i4 = staticinvoke <com.metrictrade.and.fr: int a(double[],double)>($r3, $d9);

        $d2 = r0.<com.metrictrade.and.fr: double Q>;

        $d2 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d9, $d2);

        r0.<com.metrictrade.and.fr: double Q> = $d2;

        if $i4 < 0 goto label40;

        if $i2 != 1 goto label06;

        $r3 = $r1[1];

        $r3[$i4] = $d0;

        $r3 = $r1[2];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[3];

        $r3[$i4] = $d2;

        $r3 = $r1[3];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[4];

        $r3[$i4] = $d2;

        $r3 = $r1[4];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[5];

        $r3[$i4] = $d2;

        $r3 = $r1[5];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[6];

        $r3[$i4] = $d2;

        $r3 = $r1[6];

        $r3[$i4] = $d11;

        $r3 = $r1[0];

        $r3[$i4] = $d9;

        $d2 = $d10;

        $d12 = $d1;

        $d10 = $d6;

     label03:
        if $i2 == 1 goto label04;

        if $i2 != 4 goto label45;

     label04:
        if $i2 != 1 goto label39;

        $b5 = 7;

     label05:
        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>($b5, $d9, $d0, $d12, $d11, $d3, $d4, $d5, $d2, $d10, $d7, $z0);

        if $i2 != 1 goto label45;

        $i2 = 8;

        $d6 = $d10;

        $d10 = $d2;

        $d1 = $d12;

        goto label01;

     label06:
        if $i2 != 4 goto label20;

        $r3 = $r1[7];

        $d1 = $r3[$i4];

        $b5 = $d3 cmpg $d1;

        $i1 = (int) $b5;

        if $i1 < 0 goto label45;

        $b5 = $d7 cmpl $d9;

        $i1 = (int) $b5;

        if $i1 <= 0 goto label07;

        return;

     label07:
        $i1 = r0.<com.metrictrade.and.fr: int af>;

        $i6 = r0.<com.metrictrade.and.fr: int ad>;

        if $i6 < 0 goto label09;

        $i6 = (int) $d9;

        $d1 = (double) $i6;

        $d1 = $d9 - $d1;

        $d1 = $d1 * 10000.0;

        $d1 = $d1 + 0.01;

        $i0 = (int) $d1;

        $i6 = $i0 % 100;

        $i0 = $i0 / 100;

        $i7 = $i1 + -1;

     label08:
        if $i7 >= 0 goto label12;

     label09:
        $i6 = (int) $d9;

        $d1 = (double) $i6;

        $d1 = $d9 - $d1;

        $d1 = $d1 * 10000.0;

        $d1 = $d1 + 0.01;

        $i0 = (int) $d1;

        $i6 = $i0 * 100;

        $i6 = $i6 + 60;

        $i0 = $i0 * 100;

        $d10 = 0.0;

        $i1 = $i1 + -1;

        $d6 = 0.0;

        $d11 = 0.0;

        $d2 = 0.0;

        $d5 = 0.0;

        $d1 = 0.0;

     label10:
        if $i1 >= 0 goto label14;

     label11:
        $b5 = $d6 cmpl 0.0;

        $i1 = (int) $b5;

        if $i1 <= 0 goto label44;

        $r3 = $r1[2];

        $r3[$i4] = $d1;

        $r3 = $r1[3];

        $r3[$i4] = $d2;

        $r3 = $r1[4];

        $r3[$i4] = $d11;

        $r3 = $r1[5];

        $r3[$i4] = $d5;

        $r3 = $r1[6];

        $r3[$i4] = 0.0;

        $r3 = $r1[1];

        $r3[$i4] = $d6;

        $r3 = $r1[7];

        $r3[$i4] = $d10;

        $d10 = $d11;

        $d12 = $d5;

        $d5 = $d1;

        $d11 = 0.0;

        goto label03;

     label12:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[1];

        $d1 = $r3[$i7];

        $b5 = $d1 cmpl 0.0;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label13;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[0];

        $d1 = $r3[$i7];

        $d1 = $d1 + 0.01;

        $i8 = (int) $d1;

        $i8 = $i8 / 100;

        $i9 = $i8 / 100;

        $i8 = $i8 % 100;

        $i9 = $i9 - $i0;

        $i9 = $i9 * 60;

        $i8 = $i8 - $i6;

        $i8 = $i8 + $i9;

        if $i8 > 20 goto label45;

     label13:
        $i7 = $i7 + -1;

        goto label08;

     label14:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[0];

        $d12 = $r3[$i1];

        $d13 = (double) $i0;

        $b5 = $d12 cmpl $d13;

        $i7 = (int) $b5;

        if $i7 < 0 goto label19;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[0];

        $d12 = $r3[$i1];

        $d13 = (double) $i6;

        $b5 = $d12 cmpg $d13;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label19;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[4];

        $d12 = $r3[$i1];

        $i7 = (int) $d12;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[1];

        $d12 = $r3[$i1];

        $b5 = $d12 cmpl 0.0;

        $i8 = (int) $b5;

        if $i8 <= 0 goto label17;

        if $i7 < 0 goto label17;

        if $i7 >= 256 goto label17;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[2];

        $d1 = $r3[$i1];

        $b5 = $d1 cmpl 0.0;

        if $b5 == 0 goto label15;

        $b5 = $d6 cmpl 0.0;

        if $b5 != 0 goto label18;

        $d6 = $d1;

        $d11 = $d1;

        $d2 = $d1;

     label15:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[1];

        $d12 = $r3[$i1];

        $b5 = $d10 cmpg $d12;

        $i7 = (int) $b5;

        if $i7 >= 0 goto label16;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[1];

        $d10 = $r3[$i1];

     label16:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r3 = $r5[3];

        $d12 = $r3[$i1];

        $d5 = $d5 + $d12;

     label17:
        $i1 = $i1 + -1;

        goto label10;

     label18:
        $d2 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d1, $d2);

        $d11 = staticinvoke <com.metrictrade.and.dc: double c(double,double)>($d1, $d11);

        goto label15;

     label19:
        $b5 = $d10 cmpl 0.0;

        if $b5 != 0 goto label11;

        goto label17;

     label20:
        if $i2 == 7 goto label21;

        if $i2 == 5 goto label21;

        if $i2 != 8 goto label43;

     label21:
        if $i2 != 5 goto label26;

        $r5 = r0.<com.metrictrade.and.fr: double[][] T>;

     label22:
        $z1 = 0;

        $d2 = 0.0;

        $d14 = 0.0;

        $d11 = 0.0;

        $d12 = 0.0;

        $r3 = $r5[0];

        $i1 = lengthof $r3;

        $i1 = $i1 + -1;

        $d15 = 0.0;

        $d13 = 0.0;

     label23:
        if $i1 >= 0 goto label27;

     label24:
        if $z1 == 0 goto label25;

        $r3 = $r1[2];

        $r3[$i4] = $d2;

        $r3 = $r1[3];

        $r3[$i4] = $d14;

        $r3 = $r1[4];

        $r3[$i4] = $d11;

        $r3 = $r1[1];

        $r3[$i4] = $d13;

        $r3 = $r1[0];

        $r3[$i4] = $d9;

        $r3 = $r1[5];

        $r3[$i4] = $d12;

        $r3 = $r1[6];

        $r3[$i4] = $d15;

     label25:
        $d2 = $d10;

        $d11 = $d15;

        $d10 = $d6;

        $d12 = $d1;

        goto label03;

     label26:
        $r5 = r0.<com.metrictrade.and.fr: double[][] V>;

        goto label22;

     label27:
        $r3 = $r5[0];

        $d16 = $r3[$i1];

        $b5 = $d16 cmpg 0.0;

        $i6 = (int) $b5;

        if $i6 <= 0 goto label38;

        $r3 = $r5[0];

        $d16 = $r3[$i1];

        $l3 = (long) $i2;

        $r2 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        $d16 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d16, $l3, $r2);

        $d16 = $d16 - $d9;

        $d16 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d16);

        $b5 = $d16 cmpg 1.0E-5;

        $i6 = (int) $b5;

        if $i6 >= 0 goto label37;

        $r3 = $r5[2];

        $d17 = $r3[$i1];

        $r3 = $r5[3];

        $d8 = $r3[$i1];

        $r3 = $r5[4];

        $d15 = $r3[$i1];

        $r3 = $r5[1];

        $d18 = $r3[$i1];

        $r3 = $r5[6];

        $d16 = $r3[$i1];

        $b5 = $d17 cmpl 0.0;

        if $b5 == 0 goto label28;

        $d2 = $d17;

     label28:
        if $z1 != 0 goto label35;

        $b5 = $d18 cmpl 0.0;

        if $b5 == 0 goto label35;

        $b5 = $d8 cmpl 0.0;

        if $b5 == 0 goto label33;

        $d13 = $d8;

     label29:
        $b5 = $d15 cmpl 0.0;

        if $b5 == 0 goto label34;

     label30:
        $z1 = 1;

        $d11 = $d18;

        $d14 = $d13;

     label31:
        $r3 = $r5[5];

        $d13 = $r3[$i1];

        $d12 = $d13 + $d12;

        $d13 = $d11;

        $d11 = $d15;

     label32:
        $i1 = $i1 + -1;

        $d15 = $d16;

        goto label23;

     label33:
        $d13 = $d18;

        goto label29;

     label34:
        $d15 = $d18;

        goto label30;

     label35:
        $b5 = $d8 cmpl 0.0;

        if $b5 == 0 goto label42;

        $d14 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>($d14, $d8);

     label36:
        $b5 = $d15 cmpl 0.0;

        if $b5 == 0 goto label41;

        $d15 = staticinvoke <com.metrictrade.and.dc: double c(double,double)>($d11, $d15);

        $d11 = $d13;

        goto label31;

     label37:
        if $z1 != 0 goto label24;

     label38:
        $d16 = $d15;

        goto label32;

     label39:
        $b5 = 5;

        goto label05;

     label40:
        $b5 = $d4 cmpl 0.0;

        $i4 = (int) $b5;

        if $i4 < 0 goto label45;

        $i4 = (int) $d7;

        $d2 = (double) $i4;

        virtualinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,boolean,double)>($i2, $d9, $d0, $d5, $d10, $d6, $d1, $d11, $d3, $z0, $d2);

        return;

     label41:
        $d15 = $d11;

        $d11 = $d13;

        goto label31;

     label42:
        goto label36;

     label43:
        $d2 = $d10;

        $d12 = $d1;

        $d10 = $d6;

        goto label03;

     label44:
        $d10 = $d11;

        $d12 = $d5;

        $d5 = $d1;

        $d11 = 0.0;

        goto label03;

     label45:
        return;
    }

    public static void a(boolean)
    {
        boolean $z0;

        $z0 := @parameter0: boolean;

        <com.metrictrade.and.fr: boolean B> = 1;

        return;
    }

    public static boolean a(double)
    {
        byte $b0;
        double $d0;

        $d0 := @parameter0: double;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    private static boolean a(double, double)
    {
        byte $b0;
        int $i1;
        double $d0, $d1;

        $d0 := @parameter0: double;

        $d1 := @parameter1: double;

        $d0 = $d0 - $d1;

        $b0 = $d0 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label2;

        $b0 = $d0 cmpl 1.0E-5;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label1;

        return 1;

     label1:
        return 0;

     label2:
        $b0 = $d0 cmpg -1.0E-5;

        $i1 = (int) $b0;

        if $i1 < 0 goto label3;

        return 0;

     label3:
        return 1;
    }

    public static java.lang.String j(int)
    {
        int $i0;
        java.lang.String r0;

        $i0 := @parameter0: int;

        if $i0 != 256 goto label1;

        r0 = <com.metrictrade.and.z: java.lang.String ac>;

        return r0;

     label1:
        if $i0 != 2048 goto label2;

        r0 = <com.metrictrade.and.z: java.lang.String ad>;

        return r0;

     label2:
        return null;
    }

    private static int p(int)
    {
        int $i0;

        $i0 := @parameter0: int;

        if $i0 >= 512 goto label1;

        return 512;

     label1:
        if $i0 >= 2048 goto label2;

        return 2048;

     label2:
        if $i0 >= 4096 goto label3;

        return 4096;

     label3:
        if $i0 >= 8192 goto label4;

        return 8192;

     label4:
        if $i0 >= 16384 goto label5;

        return 16384;

     label5:
        if $i0 >= 32768 goto label6;

        return 32768;

     label6:
        $i0 = $i0 / 32768;

        $i0 = $i0 + 1;

        $i0 = $i0 * 32768;

        return $i0;
    }

    private static int q(int)
    {
        int[] $r0;
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        $r0 = <com.metrictrade.and.fr: int[] ao>;

        $i2 = lengthof $r0;

        if $i1 < $i2 goto label2;

        return -1;

     label2:
        $r0 = <com.metrictrade.and.fr: int[] ao>;

        $i2 = $r0[$i1];

        if $i2 == $i0 goto label3;

        $i1 = $i1 + 1;

        goto label1;

     label3:
        return $i1;
    }

    public static double v()
    {
        return 0.0;
    }

    public final double a(int, int)
    {
        double[] $r2;
        byte $b3;
        com.metrictrade.and.fr r0, $r3;
        int $i0, $i1, $i2;
        double[][] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        if $r1 == null goto label2;

        if $i0 < 0 goto label2;

        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $i2 = lengthof $r1;

        if $i0 > $i2 goto label2;

        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = $r1[$i0];

        if $r2 != null goto label4;

     label2:
        $r3 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr av>;

        if $r3 == null goto label3;

        r0 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr av>;

        goto label1;

     label3:
        if $i1 != 5 goto label6;

        $r2 = r0.<com.metrictrade.and.fr: double[] C>;

        if $r2 == null goto label6;

        $r2 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r2[10];

        return $d0;

     label4:
        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = $r1[$i0];

        $d0 = $r2[$i1];

        $b3 = $d0 cmpl 0.0;

        if $b3 != 0 goto label5;

        $r3 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr av>;

        if $r3 == null goto label5;

        r0 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr av>;

        goto label1;

     label5:
        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = $r1[$i0];

        $d0 = $r2[$i1];

        return $d0;

     label6:
        return 0.0;
    }

    public final java.lang.String a(int)
    {
        com.metrictrade.and.fr r0;
        int $i0, $i1;
        java.lang.String[] $r2;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        if $i0 != 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String P>;

        if $r1 == null goto label1;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String P>;

        return $r1;

     label1:
        $r2 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        if $r2 == null goto label4;

        $i1 = r0.<com.metrictrade.and.fr: int a>;

        if $i1 != 4 goto label4;

        if $i0 == 0 goto label2;

        if $i0 != 2 goto label3;

     label2:
        $r2 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $r1 = $r2[29];

        return $r1;

     label3:
        if $i0 != 1 goto label4;

        $r2 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $r1 = $r2[28];

        return $r1;

     label4:
        return null;
    }

    public final void a(char)
    {
        double[] $r1, $r2, $r5;
        char $c0;
        java.util.Calendar $r4;
        com.metrictrade.and.fr r0;
        int $i1, $i2;
        double[][] $r3;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $c0 := @parameter0: char;

        $i2 = 0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] G>;

        if $r3 == null goto label5;

        $r3 = r0.<com.metrictrade.and.fr: double[][] G>;

        $r1 = $r3[0];

        if $r1 == null goto label5;

        $i1 = (int) $c0;

        if $i1 == 118 goto label1;

        $i1 = (int) $c0;

        if $i1 != 115 goto label5;

     label1:
        $r4 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        if $r4 != null goto label2;

        $r4 = staticinvoke <com.metrictrade.and.fj: java.util.Calendar c()>();

        r0.<com.metrictrade.and.fr: java.util.Calendar aP> = $r4;

     label2:
        $r3 = r0.<com.metrictrade.and.fr: double[][] G>;

        $r5 = $r3[0];

        $i1 = lengthof $r5;

        $r1 = newarray (double)[$i1];

        $r2 = newarray (double)[$i1];

     label3:
        if $i2 < $i1 goto label4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] G>;

        $r3[4] = $r1;

        $r3 = r0.<com.metrictrade.and.fr: double[][] G>;

        $r3[5] = $r2;

        return;

     label4:
        $d0 = $r5[$i2];

        $r4 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        $d0 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d0, 7L, $r4);

        $r1[$i2] = $d0;

        $d0 = $r5[$i2];

        $r4 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        $d0 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d0, 8L, $r4);

        $r2[$i2] = $d0;

        $i2 = $i2 + 1;

        goto label3;

     label5:
        return;
    }

    public final void a(char, double[], int, boolean)
    {
        double[] $r1, $r3, $r7;
        byte $b3, $b4, $b8;
        int[] $r5;
        int $i1, $i2, $i5, $i6, $i7, $i9, $i10;
        boolean $z0, $z1;
        double $d0, $d1;
        double[][][] $r4;
        char $c0;
        com.metrictrade.and.fr r0;
        java.lang.Object $r6;
        double[][] $r2;

        r0 := @this: com.metrictrade.and.fr;

        $c0 := @parameter0: char;

        $r1 := @parameter1: double[];

        $i1 := @parameter2: int;

        $z0 := @parameter3: boolean;

        $i2 = 1;

        $b3 = 0;

        $r2 = r0.<com.metrictrade.and.fr: double[][] G>;

        if $r2 != null goto label02;

        $i5 = (int) $c0;

        if $i5 == 118 goto label01;

        $i5 = (int) $c0;

        if $i5 != 115 goto label02;

     label01:
        $r2 = newarray (double[])[6];

        r0.<com.metrictrade.and.fr: double[][] G> = $r2;

     label02:
        $i5 = (int) $c0;

        if $i5 != 118 goto label09;

        $i2 = 128;

        $b3 = 1;

        $b4 = 1;

        $i5 = 1;

        $r2 = r0.<com.metrictrade.and.fr: double[][] G>;

     label03:
        if $i1 < $i2 goto label35;

        $i6 = $i1 / 32;

        $i6 = $i6 + 1;

        $i6 = $i6 * 32;

        $i2 = $i2 + $i6;

     label04:
        if $r2 == null goto label37;

        $i6 = 0;

     label05:
        $i7 = lengthof $r2;

        if $i6 < $i7 goto label18;

        $r3 = $r2[0];

        if $r3 == null goto label37;

        if $i1 < 0 goto label37;

        $r3 = $r2[0];

        $i6 = lengthof $r3;

        if $i1 > $i6 goto label37;

        $i6 = 0;

        $z1 = <com.metrictrade.and.fr: boolean B>;

        if $z1 != 0 goto label07;

        $i7 = (int) $c0;

        if $i7 != 115 goto label07;

        $r3 = $r2[3];

        if $r3 == null goto label07;

        $i7 = 0;

     label06:
        if $i7 < $i2 goto label22;

     label07:
        $i7 = 0;

     label08:
        if $i7 <= $i5 goto label24;

        return;

     label09:
        $i5 = (int) $c0;

        if $i5 != 115 goto label13;

        $r2 = r0.<com.metrictrade.and.fr: double[][] G>;

        $z1 = <com.metrictrade.and.fr: boolean B>;

        if $z1 == 0 goto label11;

        $b8 = 3;

     label10:
        $b3 = 2;

        if $i1 >= 128 goto label12;

        $i2 = 128;

        $b4 = 1;

        $i5 = $b8;

        goto label03;

     label11:
        $b8 = 1;

        goto label10;

     label12:
        $i5 = $i1 / 128;

        $i5 = $i5 + 1;

        $i2 = $i5 * 128;

        $b4 = 1;

        $i5 = $b8;

        goto label03;

     label13:
        $i5 = (int) $c0;

        if $i5 != 114 goto label14;

        $r2 = r0.<com.metrictrade.and.fr: double[][] E>;

        $i5 = <com.metrictrade.and.fr: int aT>;

        $d0 = $r1[0];

        $i1 = (int) $d0;

        $i1 = staticinvoke <com.metrictrade.and.fr: int q(int)>($i1);

        $b4 = 100;

        $i2 = 8;

        goto label03;

     label14:
        $i5 = (int) $c0;

        if $i5 != 100 goto label36;

        $r4 = r0.<com.metrictrade.and.fr: double[][][] W>;

        if $r4 != null goto label15;

        $i5 = <com.metrictrade.and.fr: int aB>;

        $i5 = $i5 + 4;

        $r5 = newarray (int)[2];

        $r5[0] = 2;

        $r5[1] = $i5;

        $r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "[D", $r5);

        $r4 = (double[][][]) $r6;

        r0.<com.metrictrade.and.fr: double[][][] W> = $r4;

     label15:
        $r4 = r0.<com.metrictrade.and.fr: double[][][] W>;

        if $z0 == 0 goto label17;

        $b4 = 1;

     label16:
        $r2 = $r4[$b4];

        $i5 = <com.metrictrade.and.fr: int aB>;

        $i5 = $i5 + -1;

        $i2 = 32;

        $b4 = 1;

        goto label03;

     label17:
        $b4 = 0;

        goto label16;

     label18:
        $r3 = $r2[$i6];

        if $r3 == null goto label19;

        $r3 = $r2[$i6];

        $i7 = lengthof $r3;

        if $i7 >= $i2 goto label21;

     label19:
        $r3 = $r2[$i6];

        $r7 = newarray (double)[$i2];

        if $r3 == null goto label20;

        $i7 = lengthof $r3;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r7, 0, $i7);

     label20:
        $r2[$i6] = $r7;

     label21:
        $i6 = $i6 + 1;

        goto label05;

     label22:
        $r3 = $r2[0];

        $d0 = $r3[$i7];

        $b8 = $d0 cmpl 1.9000101E7;

        $i9 = (int) $b8;

        if $i9 <= 0 goto label23;

        $r3 = $r2[3];

        $d0 = $r3[$i7];

        $b8 = $d0 cmpl 1.0;

        if $b8 != 0 goto label23;

        $i6 = $i7 + 1;

     label23:
        $i7 = $i7 + 1;

        goto label06;

     label24:
        $r3 = $r2[$i7];

        $i9 = $i1 + $i6;

        if $z0 == 0 goto label31;

        if $i7 != 4 goto label31;

        $d0 = $r1[$i7];

        $d0 = $d0 / 4.0;

     label25:
        $r3[$i9] = $d0;

        if $i7 != 0 goto label29;

        $i9 = (int) $c0;

        if $i9 == 118 goto label26;

        $i9 = (int) $c0;

        if $i9 != 115 goto label34;

     label26:
        $z1 = <com.metrictrade.and.fr: boolean B>;

        if $z1 != 0 goto label29;

        $r3 = $r2[3];

        if $r3 != null goto label27;

        $r3 = newarray (double)[$i2];

        $r2[3] = $r3;

     label27:
        $r3 = $r2[3];

        $i9 = $i1 + $i6;

        if $b3 != 2 goto label33;

        $d0 = $r1[$i7];

        $b8 = $d0 cmpg 1.0;

        $i10 = (int) $b8;

        if $i10 >= 0 goto label32;

        $b8 = 3;

     label28:
        $d0 = (double) $b8;

        $r3[$i9] = $d0;

     label29:
        if $b4 <= 1 goto label30;

        if $i7 <= 0 goto label30;

        if $i7 >= 4 goto label30;

        $r3 = $r2[$i7];

        $d0 = $r3[$i1];

        $d1 = (double) $b4;

        $d0 = $d0 / $d1;

        $r3[$i1] = $d0;

     label30:
        $i7 = $i7 + 1;

        goto label08;

     label31:
        $d0 = $r1[$i7];

        goto label25;

     label32:
        $b8 = 2;

        goto label28;

     label33:
        $b8 = $b3;

        goto label28;

     label34:
        $i9 = (int) $c0;

        if $i9 != 100 goto label29;

        $r3 = $r2[$i7];

        $d0 = $r3[$i1];

        $i9 = (int) $d0;

        if $i9 <= 19000101 goto label29;

        $r3 = $r2[$i7];

        $i9 = $i9 / 100;

        $i9 = $i9 * 100;

        $i9 = $i9 + 1;

        $d0 = (double) $i9;

        $r3[$i1] = $d0;

        goto label29;

     label35:
        goto label04;

     label36:
        $b4 = 1;

        $i5 = 0;

        $r2 = null;

        goto label03;

     label37:
        return;
    }

    public final void a(double, double, double, double)
    {
        double[] $r1, $r2, $r4;
        byte $b0;
        int $i1, $i2, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0;
        com.metrictrade.and.fr r0;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fr;

        $d2 := @parameter0: double;

        $d3 := @parameter1: double;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d4 = $r1[8];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[14];

        $b0 = $d5 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label22;

        $z0 = 1;

     label01:
        if $z0 == 0 goto label02;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[2];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r1[2];

        $b0 = $d5 cmpl $d6;

        if $b0 != 0 goto label02;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[2];

        $b0 = $d5 cmpl 0.0;

        if $b0 != 0 goto label23;

     label02:
        $b0 = $d1 cmpl $d1;

        if $b0 != 0 goto label23;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[2];

        $b0 = $d5 cmpl 0.0;

        if $b0 != 0 goto label23;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[2] = $d1;

     label03:
        if $z0 == 0 goto label24;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[1];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r1[1];

        $b0 = $d5 cmpl $d6;

        if $b0 != 0 goto label24;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r1[1];

        $b0 = $d5 cmpl 0.0;

        if $b0 == 0 goto label24;

        $d2 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

     label04:
        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label34;

        $b0 = $d1 cmpl $d1;

        if $b0 != 0 goto label34;

        $b0 = $d1 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label34;

        $d5 = $d1;

     label05:
        $b0 = $d5 cmpl $d5;

        if $b0 != 0 goto label33;

        $b0 = $d5 cmpl 0.0;

        if $b0 == 0 goto label33;

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label06;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $d5 - $d1;

        $r1[9] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $d5 - $d1;

        $d2 = $d2 / $d1;

        $r1[8] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[9];

        $d2 = 100.0 * $d2;

        $r1[11] = $d2;

     label06:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[19];

        $b0 = $d2 cmpl $d2;

        if $b0 != 0 goto label07;

        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label08;

     label07:
        $d2 = 1.0;

     label08:
        $d2 = $d2 * $d4;

        $d2 = $d2 * $d5;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $i1 = <com.metrictrade.and.fr: int aC>;

        $r1[$i1] = $d2;

        $i1 = 0;

     label09:
        if $i1 < 8 goto label26;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d6 = $r1[20];

        $b0 = $d6 cmpl $d6;

        if $b0 != 0 goto label10;

        $b0 = $d6 cmpl 0.0;

        if $b0 != 0 goto label11;

     label10:
        $d6 = 1.0;

     label11:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d7 = $r1[13];

        $b0 = $d7 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label12;

        $b0 = $d5 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label12;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $r2 = r0.<com.metrictrade.and.fr: double[] C>;

        $d7 = $r2[13];

        $d6 = $d6 * $d7;

        $d5 = $d6 / $d5;

        $r1[32] = $d5;

     label12:
        if $z0 == 0 goto label28;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[6];

     label13:
        $b0 = $d3 cmpl $d3;

        if $b0 != 0 goto label15;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $b0 = $d3 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label29;

        $b0 = $d4 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label29;

        $b0 = $d4 cmpl $d4;

        if $b0 != 0 goto label29;

        $d3 = $d3 / $d4;

     label14:
        $r1[26] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[16] = $d0;

     label15:
        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d5 = $r1[4];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d3 = $r1[3];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $r1[2];

        $b0 = $d5 cmpl $d5;

        if $b0 != 0 goto label16;

        $b0 = $d5 cmpl 0.0;

        if $b0 == 0 goto label16;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d4 = $d5 / $d4;

        $r1[25] = $d4;

        $b0 = $d5 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label16;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d4 = $d2 / $d5;

        $r1[26] = $d4;

     label16:
        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label17;

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label17;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $d2 / $d0;

        $r1[30] = $d0;

     label17:
        $b0 = $d3 cmpl $d3;

        if $b0 != 0 goto label18;

        $b0 = $d3 cmpl 0.0;

        if $b0 == 0 goto label18;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d2 = $d2 / $d3;

        $r1[27] = $d2;

     label18:
        $i1 = r0.<com.metrictrade.and.fr: int ag>;

        if $i1 < 3 goto label32;

        $d2 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

     label19:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[30];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b0 = $d2 cmpl 0.0;

        if $b0 == 0 goto label30;

        $b0 = $d3 cmpl 0.0;

        if $b0 == 0 goto label30;

        $b0 = $d3 cmpl $d3;

        if $b0 != 0 goto label30;

        $d0 = $d3 - $d2;

        $d0 = $d0 / $d2;

     label20:
        $r1[32] = $d0;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $b0 = $d3 cmpl 0.0;

        if $b0 != 0 goto label31;

        $d2 = 0.0;

     label21:
        $r1[5] = $d2;

        return;

     label22:
        $z0 = 0;

        goto label01;

     label23:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[2];

        goto label03;

     label24:
        $b0 = $d2 cmpl $d2;

        if $b0 != 0 goto label25;

        $b0 = $d2 cmpl 0.0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label25;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[1] = $d2;

        goto label04;

     label25:
        $b0 = $d2 cmpl 0.0;

        if $b0 != 0 goto label35;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r1[1];

        goto label04;

     label26:
        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[0];

        if $r1 == null goto label27;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[1];

        if $r1 == null goto label27;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[1];

        $d6 = $r1[$i1];

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[1];

        $d7 = $r1[$i1];

        $b0 = $d6 cmpl $d7;

        if $b0 != 0 goto label27;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[1];

        $d6 = $r1[$i1];

        $b0 = $d6 cmpl 0.0;

        $i2 = (int) $b0;

        if $i2 <= 0 goto label27;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r3[0];

        $d6 = $r1[$i1];

        $i2 = (int) $d6;

        $i2 = staticinvoke <com.metrictrade.and.fr: int q(int)>($i2);

        if $i2 < 0 goto label27;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $i3 = <com.metrictrade.and.fr: int aS>;

        $r2 = $r3[$i3];

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r4 = $r3[1];

        $d6 = $r4[$i1];

        $d6 = $d5 - $d6;

        $r3 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r4 = $r3[1];

        $d7 = $r4[$i1];

        $d6 = $d6 / $d7;

        $r2[$i1] = $d6;

        $r1[$i2] = $d6;

     label27:
        $i1 = $i1 + 1;

        goto label09;

     label28:
        $b0 = $d3 cmpl $d3;

        if $b0 != 0 goto label13;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[6] = $d3;

        goto label13;

     label29:
        $d3 = #NaN;

        goto label14;

     label30:
        $d0 = #NaN;

        goto label20;

     label31:
        $d2 = $d3 - $d2;

        goto label21;

     label32:
        $d2 = $d1;

        goto label19;

     label33:
        $d2 = 0.0;

        goto label12;

     label34:
        $d5 = $d2;

        goto label05;

     label35:
        goto label04;
    }

    public final void a(double, double, double, double, double, double, double, double)
    {
        java.lang.Throwable $r6;
        double[] $r2, $r4;
        long $l6;
        byte $b0;
        int $i1, $i2, $i3, $i4, $i5;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0;
        com.metrictrade.and.fr r0;
        java.lang.Object $r1;
        double[][] $r3, $r5;

        r0 := @this: com.metrictrade.and.fr;

        $d7 := @parameter0: double;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $d4 := @parameter5: double;

        $d5 := @parameter6: double;

        $d6 := @parameter7: double;

        $b0 = $d7 cmpg 0.5;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label21;

        $d6 = 0.1 + $d6;

        $i1 = (int) $d6;

        $d6 = (double) $i1;

        $d7 = $d7 + $d6;

     label01:
        $r1 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r1;

     label02:
        $d1 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d1, 1L, null);

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r4 = $r3[5];

        $i1 = 0;

     label03:
        $i2 = lengthof $r2;

        if $i1 < $i2 goto label22;

        $i1 = -1;

     label04:
        if $i1 >= 0 goto label07;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $i1 = lengthof $r2;

        $i2 = $i1 + 1;

        $i2 = staticinvoke <com.metrictrade.and.fr: int p(int)>($i2);

        $r3 = newarray (double[])[7];

        $i3 = 0;

     label05:
        if $i3 < 7 goto label24;

        $i2 = 6;

     label06:
        if $i2 >= 0 goto label25;

     label07:
        $i2 = $i1;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[3];

        $d6 = $r2[$i1];

        $z0 = staticinvoke <com.metrictrade.and.fr: boolean a(double,double)>($d6, $d2);

        if $z0 != 0 goto label26;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[4];

        $d6 = $r2[$i1];

        $z0 = staticinvoke <com.metrictrade.and.fr: boolean a(double,double)>($d6, $d3);

        if $z0 != 0 goto label26;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $d6 = $r2[$i1];

        $z0 = staticinvoke <com.metrictrade.and.fr: boolean a(double,double)>($d6, $d1);

        if $z0 != 0 goto label26;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[5];

        $d6 = $r2[$i1];

        $z0 = staticinvoke <com.metrictrade.and.fr: boolean a(double,double)>($d6, $d4);

        if $z0 != 0 goto label26;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[6];

        $d6 = $r2[$i1];

        $z0 = staticinvoke <com.metrictrade.and.fr: boolean a(double,double)>($d6, $d5);

        if $z0 != 0 goto label26;

        $z0 = 0;

     label08:
        if $z0 == 0 goto label19;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[1];

        $d6 = $r2[$i2];

        $b0 = $d6 cmpg $d0;

        $i1 = (int) $b0;

        if $i1 <= 0 goto label09;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $d6 = $r2[$i2];

        $b0 = $d6 cmpg $d7;

        $i1 = (int) $b0;

        if $i1 > 0 goto label19;

     label09:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[1];

        $r2[$i2] = $d0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[5];

        $r2[$i2] = $d4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[3];

        $r2[$i2] = $d2;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[4];

        $r2[$i2] = $d3;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[6];

        $r2[$i2] = $d5;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $d0 = $r2[$i2];

        $b0 = $d0 cmpg $d7;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label10;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $r2[$i2] = $d7;

     label10:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $r2[$i2] = $d1;

        $r2 = r0.<com.metrictrade.and.fr: double[] ac>;

        if $r2 != null goto label11;

        $r2 = newarray (double)[30];

        r0.<com.metrictrade.and.fr: double[] ac> = $r2;

        $r2 = newarray (double)[30];

        r0.<com.metrictrade.and.fr: double[] aM> = $r2;

     label11:
        $i1 = 0;

     label12:
        if $i1 < 30 goto label27;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[1];

        $i1 = lengthof $r2;

        $i2 = 0;

     label13:
        if $i2 < $i1 goto label28;

        $i1 = 0;

     label14:
        if $i1 < 30 goto label45;

        $i1 = 0;

     label15:
        if $i1 < 10 goto label47;

        $d7 = 0.0;

        $i1 = 0;

     label16:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label48;

     label17:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b0 = $d4 cmpl 1.0;

        if $b0 != 0 goto label51;

        $b0 = 25;

     label18:
        $r2[$b0] = $d7;

     label19:
        exitmonitor $r1;

     label20:
        return;

     label21:
        $b0 = $d7 cmpg 1.8000101E7;

        $i1 = (int) $b0;

        if $i1 >= 0 goto label01;

        $d6 = 0.1 + $d6;

        $i1 = (int) $d6;

        $d6 = (double) $i1;

        $d7 = $d7 / 1000000.0;

        $d7 = $d6 + $d7;

        goto label01;

     label22:
        $d6 = $r2[$i1];

        $b0 = $d6 cmpl 0.0;

        if $b0 == 0 goto label04;

        $d6 = $r2[$i1];

        $d6 = $d6 - $d1;

        $d6 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d6);

        $b0 = $d6 cmpg 1.0E-5;

        $i2 = (int) $b0;

        if $i2 >= 0 goto label23;

        $d6 = $r4[$i1];

        $d6 = $d6 - $d4;

        $d6 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d6);

        $b0 = $d6 cmpg 1.0E-5;

        $i2 = (int) $b0;

        if $i2 < 0 goto label04;

     label23:
        $i1 = $i1 + 1;

        goto label03;

     label24:
        $r2 = newarray (double)[$i2];

        $r3[$i3] = $r2;

        $r5 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r4 = $r5[$i3];

        $r2 = $r3[$i3];

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r2, 0, $i1);

        $i3 = $i3 + 1;

        goto label05;

     label25:
        $r5 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[$i2];

        $r5[$i2] = $r2;

        $i2 = $i2 + -1;

        goto label06;

     label26:
        $z0 = 1;

        goto label08;

     label27:
        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $r2[$i1] = -2.147483648E9;

        $i1 = $i1 + 1;

        goto label12;

     label28:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[4];

        $d7 = $r2[$i2];

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $d0 = $r2[$i2];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label31;

        $b0 = $d7 cmpg 0.0;

        $i3 = (int) $b0;

        if $i3 <= 0 goto label31;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[3];

        $d0 = $r2[$i2];

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[6];

        $d1 = $r2[$i2];

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label52;

        $d1 = $d1 + 0.0;

     label29:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[5];

        $d2 = $r2[$i2];

        $b0 = $d2 cmpl 1.0;

        if $b0 != 0 goto label39;

        $i3 = 0;

     label30:
        if $i3 < 15 goto label32;

     label31:
        $i2 = $i2 + 1;

        goto label13;

     label32:
        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r2[$i3];

        $b0 = $d2 cmpl -2.147483648E9;

        if $b0 == 0 goto label33;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r2[$i3];

        $b0 = $d2 cmpl $d0;

        $i4 = (int) $b0;

        if $i4 <= 0 goto label38;

     label33:
        $i4 = 11;

     label34:
        if $i4 >= $i3 goto label37;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $r2[$i3] = $d0;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i4 = $i3 + 1;

        $r2[$i4] = $d7;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i3 = $i3 + 2;

        $r2[$i3] = $d1;

        goto label31;

     label35:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label36:
        throw $r6;

     label37:
        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i5 = $i4 + 3;

        $r4 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r4[$i4];

        $r2[$i5] = $d2;

        $i4 = $i4 + -1;

        goto label34;

     label38:
        $i3 = $i3 + 3;

        goto label30;

     label39:
        $i3 = 15;

     label40:
        if $i3 >= 30 goto label31;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r2[$i3];

        $b0 = $d2 cmpl -2.147483648E9;

        if $b0 == 0 goto label41;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r2[$i3];

        $b0 = $d2 cmpg $d0;

        $i4 = (int) $b0;

        if $i4 >= 0 goto label44;

     label41:
        $i4 = 26;

     label42:
        if $i4 >= $i3 goto label43;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $r2[$i3] = $d0;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i4 = $i3 + 1;

        $r2[$i4] = $d7;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i3 = $i3 + 2;

        $r2[$i3] = $d1;

        goto label31;

     label43:
        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i5 = $i4 + 3;

        $r4 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d2 = $r4[$i4];

        $r2[$i5] = $d2;

        $i4 = $i4 + -1;

        goto label42;

     label44:
        $i3 = $i3 + 3;

        goto label40;

     label45:
        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $d7 = $r2[$i1];

        $b0 = $d7 cmpl -2.147483648E9;

        if $b0 != 0 goto label46;

        $r2 = r0.<com.metrictrade.and.fr: double[] aM>;

        $r2[$i1] = 0.0;

     label46:
        $i1 = $i1 + 1;

        goto label14;

     label47:
        $r2 = r0.<com.metrictrade.and.fr: double[] ac>;

        $i2 = $i1 * 3;

        $r4 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i3 = $i1 * 3;

        $d7 = $r4[$i3];

        $r2[$i2] = $d7;

        $r2 = r0.<com.metrictrade.and.fr: double[] ac>;

        $i2 = $i1 * 3;

        $i2 = $i2 + 1;

        $r4 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i3 = $i1 * 3;

        $i3 = $i3 + 1;

        $d7 = $r4[$i3];

        $r2[$i2] = $d7;

        $r2 = r0.<com.metrictrade.and.fr: double[] ac>;

        $i2 = $i1 * 3;

        $i2 = $i2 + 2;

        $r4 = r0.<com.metrictrade.and.fr: double[] aM>;

        $i3 = $i1 * 3;

        $i3 = $i3 + 2;

        $d7 = $r4[$i3];

        $r2[$i2] = $d7;

        $i1 = $i1 + 1;

        goto label15;

     label48:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $d0 = $r2[$i1];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label17;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[4];

        $d0 = $r2[$i1];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label50;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[5];

        $d0 = $r2[$i1];

        $b0 = $d0 cmpl $d4;

        if $b0 != 0 goto label50;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[4];

        $d0 = $r2[$i1];

     label49:
        $l6 = (long) $d0;

        $d0 = (double) $l6;

        $d7 = $d7 + $d0;

     label50:
        $i1 = $i1 + 1;

        goto label16;

     label51:
        $b0 = 26;

        goto label18;

     label52:
        goto label29;

        catch java.lang.Throwable from label02 to label20 with label35;
        catch java.lang.Throwable from label22 to label36 with label35;
        catch java.lang.Throwable from label37 to label49 with label35;
    }

    public final void a(double, double, double, double, double, double, double, double, int, double, double, double, double, double, double, int, double, double, double, double, double)
    {
        java.lang.Throwable $r3;
        double[] $r1;
        byte $b2;
        int $i0, $i1, $i3;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13, $d14, $d15, $d16, $d17, $d18;
        boolean $z0, $z1;
        com.metrictrade.and.fr r0;
        java.lang.Object $r2;

        r0 := @this: com.metrictrade.and.fr;

        $d16 := @parameter0: double;

        $d0 := @parameter1: double;

        $d1 := @parameter2: double;

        $d2 := @parameter3: double;

        $d3 := @parameter4: double;

        $d4 := @parameter5: double;

        $d5 := @parameter6: double;

        $d6 := @parameter7: double;

        $i0 := @parameter8: int;

        $d7 := @parameter9: double;

        $d17 := @parameter10: double;

        $d8 := @parameter11: double;

        $d9 := @parameter12: double;

        $d10 := @parameter13: double;

        $d11 := @parameter14: double;

        $i1 := @parameter15: int;

        $d12 := @parameter16: double;

        $d13 := @parameter17: double;

        $d18 := @parameter18: double;

        $d14 := @parameter19: double;

        $d15 := @parameter20: double;

        $b2 = $d1 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label01;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[2] = $d1;

     label01:
        $z0 = r0.<com.metrictrade.and.fr: boolean aO>;

        if $z0 != 0 goto label02;

        $b2 = $d3 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label02;

        $b2 = $d4 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label02;

        r0.<com.metrictrade.and.fr: boolean aO> = 1;

     label02:
        $z0 = 0;

        $b2 = $d16 cmpl 1.9000101E7;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label03;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[0] = $d16;

        $d16 = 0.0;

     label03:
        $r2 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r2;

     label04:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[27];

        $b2 = $d1 cmpg $d12;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label18;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[14];

        $b2 = $d1 cmpg $d16;

        $i3 = (int) $b2;

        if $i3 < 0 goto label18;

        $z1 = 0;

     label05:
        if $z1 == 0 goto label12;

        $b2 = $d16 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label06;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[14] = $d16;

     label06:
        $b2 = $d12 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label07;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[27] = $d12;

     label07:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[12] = $d0;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[1] = $d0;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[3] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[4] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[5] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[6] = $d5;

        $b2 = $d18 cmpl 0.0;

        if $b2 != 0 goto label08;

        $d18 = 1.0;

     label08:
        r0.<com.metrictrade.and.fr: double aQ> = $d18;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[24] = $d6;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d16 = $d18 * $d6;

        $d16 = $d16 * $d5;

        $r1[7] = $d16;

        $b2 = $d17 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label09;

        $d16 = $d17 / 10000.0;

        $d17 = $d16 * $d5;

     label09:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[18] = $d17;

        $i3 = r0.<com.metrictrade.and.fr: int S>;

        if $i3 != 115 goto label19;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[42] = $d7;

     label10:
        if $i0 == 0 goto label11;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d16 = (double) $i0;

        $r1[15] = $d16;

     label11:
        $z0 = 1;

     label12:
        if $i1 == 0 goto label23;

        $i0 = r0.<com.metrictrade.and.fr: int o>;

        $i0 = $i0 & -16;

        if $i1 != 2 goto label22;

        $b2 = 1;

     label13:
        $i0 = $b2 | $i0;

        r0.<com.metrictrade.and.fr: int o> = $i0;

     label14:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d16 = $r1[28];

        $b2 = $d16 cmpg $d13;

        $i0 = (int) $b2;

        if $i0 > 0 goto label15;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[20] = $d8;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[21] = $d9;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[22] = $d10;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[23] = $d11;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[28] = $d13;

        $z0 = 1;

     label15:
        if $z0 == 0 goto label16;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[30] = $d14;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[31] = $d15;

     label16:
        exitmonitor $r2;

     label17:
        return;

     label18:
        $z1 = 1;

        goto label05;

     label19:
        $b2 = $d7 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label10;

        $b2 = $d5 cmpl $d17;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label10;

        $d16 = $d7 / 10000.0;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r1[16] = $d16;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $d5 - $d17;

        $d16 = $d16 * $d0;

        $r1[17] = $d16;

        goto label10;

     label20:
        $r3 := @caughtexception;

        exitmonitor $r2;

     label21:
        throw $r3;

     label22:
        $b2 = 2;

        goto label13;

     label23:
        $i0 = r0.<com.metrictrade.and.fr: int o>;

        if $i0 == 0 goto label14;

        $i0 = r0.<com.metrictrade.and.fr: int o>;

        $i0 = $i0 & -16;

        r0.<com.metrictrade.and.fr: int o> = $i0;

     label24:
        goto label14;

        catch java.lang.Throwable from label04 to label17 with label20;
        catch java.lang.Throwable from label18 to label21 with label20;
        catch java.lang.Throwable from label23 to label24 with label20;
    }

    public final void a(int, double, double, double, double, double, double, double, double, boolean, double)
    {
        java.lang.Throwable $r5;
        double[] $r4;
        long $l3;
        java.util.Calendar $r2;
        byte $b1;
        int $i0, $i2, $i4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9;
        boolean $z0;
        com.metrictrade.and.fr r0;
        java.lang.Object $r1;
        double[][] $r3;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $d8 := @parameter1: double;

        $d0 := @parameter2: double;

        $d1 := @parameter3: double;

        $d2 := @parameter4: double;

        $d3 := @parameter5: double;

        $d4 := @parameter6: double;

        $d5 := @parameter7: double;

        $d6 := @parameter8: double;

        $z0 := @parameter9: boolean;

        $d7 := @parameter10: double;

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label23;

        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label23;

        $b1 = $d8 cmpl 0.0;

        if $b1 == 0 goto label23;

        $b1 = $d0 cmpg 0.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label02;

        $d9 = neg $d0;

     label01:
        $b1 = $d9 cmpg 1.0E-5;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label03;

        return;

     label02:
        $d9 = $d0;

        goto label01;

     label03:
        $r2 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        if $r2 != null goto label04;

        $r2 = staticinvoke <com.metrictrade.and.fj: java.util.Calendar c()>();

        r0.<com.metrictrade.and.fr: java.util.Calendar aP> = $r2;

     label04:
        $b1 = $d8 cmpg 2000.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label05;

        $d7 = 0.1 + $d7;

        $i2 = (int) $d7;

        $d7 = (double) $i2;

        $d8 = $d8 + $d7;

     label05:
        $r1 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r1;

     label06:
        $r3 = virtualinvoke r0.<com.metrictrade.and.fr: double[][] i(int)>($i0);

        $l3 = (long) $i0;

        $r2 = r0.<com.metrictrade.and.fr: java.util.Calendar aP>;

        $d8 = staticinvoke <com.metrictrade.and.fj: double a(double,long,java.util.Calendar)>($d8, $l3, $r2);

        $r4 = $r3[0];

        $i4 = staticinvoke <com.metrictrade.and.fr: int a(double[],double)>($r4, $d8);

        $i2 = $i4;

        if $i4 >= 0 goto label07;

        $i2 = specialinvoke r0.<com.metrictrade.and.fr: int a(double[][],int,double,int,java.lang.String[],double,int,int)>($r3, 0, $d8, 8, null, 0.0, -1, -1);

     label07:
        if $i2 < 0 goto label11;

        if $z0 == 0 goto label16;

        $b1 = $d6 cmpl 0.0;

        if $b1 == 0 goto label08;

        $r4 = $r3[7];

        $d7 = $r4[$i2];

        $b1 = $d7 cmpg $d6;

        $i4 = (int) $b1;

        if $i4 > 0 goto label11;

     label08:
        $r4 = $r3[0];

        $r4[$i2] = $d8;

        $r4 = $r3[1];

        $r4[$i2] = $d0;

        $r4 = $r3[2];

        $r4[$i2] = $d1;

        $r4 = $r3[3];

        $r4[$i2] = $d2;

        $r4 = $r3[4];

        $r4[$i2] = $d3;

        $r4 = $r3[5];

        $r4[$i2] = $d4;

        $r4 = $r3[6];

        $r4[$i2] = $d5;

        $r4 = $r3[7];

        $r4[$i2] = $d6;

        if $i0 == 4 goto label09;

        if $i0 != 1 goto label11;

     label09:
        if $i0 != 1 goto label17;

        $b1 = 7;

     label10:
        $d7 = 0.01 + $d8;

        $i4 = (int) $d7;

        $d7 = (double) $i4;

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>($b1, $d8, $d0, $d4, $d5, $d6, 0.0, $d1, $d2, $d3, $d7, $z0);

        if $i0 != 1 goto label11;

        $d7 = 0.01 + $d8;

        $i4 = (int) $d7;

        $d7 = (double) $i4;

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(8, $d8, $d0, $d4, $d5, $d6, 0.0, $d1, $d2, $d3, $d7, $z0);

     label11:
        if $i0 == 4 goto label12;

        if $i0 != 1 goto label14;

     label12:
        if $i2 < 0 goto label14;

     label13:
        $r4 = $r3[0];

        $i4 = lengthof $r4;

        if $i2 < $i4 goto label18;

     label14:
        exitmonitor $r1;

     label15:
        $l3 = <com.metrictrade.and.ct: long y>;

        $l3 = $l3 + 1L;

        <com.metrictrade.and.ct: long y> = $l3;

        r0.<com.metrictrade.and.fr: long ar> = $l3;

        return;

     label16:
        $r4 = $r3[7];

        $d7 = $r4[$i2];

        $b1 = $d7 cmpg $d6;

        $i4 = (int) $b1;

        if $i4 >= 0 goto label11;

        goto label08;

     label17:
        $b1 = 5;

        goto label10;

     label18:
        $r4 = $r3[0];

        $d8 = $r4[$i2];

        $b1 = $d8 cmpl 0.0;

        if $b1 == 0 goto label14;

        if $i0 != 4 goto label20;

        $i4 = r0.<com.metrictrade.and.fr: int ah>;

        if $i4 > $i2 goto label19;

        $i4 = $i2 + 1;

        r0.<com.metrictrade.and.fr: int ah> = $i4;

     label19:
        $i2 = $i2 + 1;

        goto label13;

     label20:
        $i4 = r0.<com.metrictrade.and.fr: int ai>;

        if $i4 > $i2 goto label19;

        $i4 = $i2 + 1;

        r0.<com.metrictrade.and.fr: int ai> = $i4;

        goto label19;

     label21:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label22:
        throw $r5;

     label23:
        return;

        catch java.lang.Throwable from label06 to label15 with label21;
        catch java.lang.Throwable from label16 to label22 with label21;
    }

    public final void a(long)
    {
        double[] $r5;
        long $l0;
        byte $b3;
        com.metrictrade.and.fr r0, $r4, $r6;
        com.metrictrade.and.ak $r1;
        int $i1, $i2;
        java.lang.Object $r3;
        com.metrictrade.and.dg $r2;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.metrictrade.and.fr;

        $l0 := @parameter0: long;

        $r1 = r0.<com.metrictrade.and.fr: com.metrictrade.and.ak ak>;

        if $r1 == null goto label9;

        $i1 = 0;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: com.metrictrade.and.ak ak>;

        $i2 = $r1.<com.metrictrade.and.ak: int a>;

        if $i1 < $i2 goto label2;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg aj>;

        if $r2 == null goto label9;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg aj>;

        $r2.<com.metrictrade.and.df: long k> = $l0;

        return;

     label2:
        $r1 = r0.<com.metrictrade.and.fr: com.metrictrade.and.ak ak>;

        $r3 = virtualinvoke $r1.<com.metrictrade.and.ak: java.lang.Object a(int)>($i1);

        $r4 = (com.metrictrade.and.fr) $r3;

        if $r4 == null goto label6;

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r5[1];

        $b3 = $d1 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label7;

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r5[1];

     label3:
        $r6 = $r4.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        if $r6 == null goto label5;

        $b3 = $d2 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label5;

        $r6 = $r4.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        $d1 = virtualinvoke $r6.<com.metrictrade.and.fr: double k()>();

        $b3 = $d1 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label5;

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r5[40];

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r5[22];

        $b3 = $d3 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label4;

        $d2 = $d3;

     label4:
        $i2 = $r4.<com.metrictrade.and.fr: int S>;

        if $i2 != 67 goto label8;

        $b3 = $d0 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label8;

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $d2 + $d0;

        $d0 = $d0 - $d1;

        $d1 = $d0 / $d1;

        $r5[41] = $d1;

     label5:
        $b3 = $l0 cmp 0L;

        if $b3 == 0 goto label6;

        $r4.<com.metrictrade.and.df: long k> = $l0;

     label6:
        $i1 = $i1 + 1;

        goto label1;

     label7:
        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r5[2];

        goto label3;

     label8:
        $i2 = $r4.<com.metrictrade.and.fr: int S>;

        if $i2 != 80 goto label5;

        $b3 = $d0 cmpl 0.0;

        $i2 = (int) $b3;

        if $i2 <= 0 goto label5;

        $r5 = $r4.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $d0 - $d2;

        $d0 = $d0 - $d1;

        $d1 = $d0 / $d1;

        $r5[41] = $d1;

        goto label5;

     label9:
        return;
    }

    public final void a(long, long, double, double, int, double, double, double, double, double, double, java.lang.String, int)
    {
        byte $b4, $b10;
        boolean $z0, $z1, $z2, $z3, $z4, $z5, $z6, $z7, $z8;
        com.metrictrade.and.fr r0;
        double[][] $r3;
        java.lang.Throwable $r6;
        double[] $r4, $r5;
        long $l0, $l1, $l6;
        java.lang.String[] $r7, $r8;
        int $i2, $i3, $i5, $i7, $i8, $i9;
        java.lang.String $r1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7, $d8, $d9, $d10, $d11, $d12, $d13;
        java.lang.Object $r2;

        r0 := @this: com.metrictrade.and.fr;

        $l0 := @parameter0: long;

        $l1 := @parameter1: long;

        $d4 := @parameter2: double;

        $d5 := @parameter3: double;

        $i3 := @parameter4: int;

        $d0 := @parameter5: double;

        $d6 := @parameter6: double;

        $d1 := @parameter7: double;

        $d2 := @parameter8: double;

        $d7 := @parameter9: double;

        $d3 := @parameter10: double;

        $r1 := @parameter11: java.lang.String;

        $i2 := @parameter12: int;

        $b4 = $d4 cmpl $d4;

        if $b4 == 0 goto label001;

        $d4 = 0.0;

     label001:
        $b4 = $d6 cmpl $d6;

        if $b4 == 0 goto label002;

        $d6 = 0.0;

     label002:
        $b4 = $d2 cmpl $d2;

        if $b4 == 0 goto label176;

        $d2 = 0.0;

     label003:
        $b4 = $d7 cmpl $d7;

        if $b4 == 0 goto label004;

        $d7 = 0.0;

     label004:
        $i5 = $i3 & 512;

        if $i5 == 0 goto label014;

        $z0 = 1;

     label005:
        $i5 = <com.metrictrade.and.fr: int aA>;

        $i5 = $i5 & $i3;

        if $i5 == 0 goto label015;

        $z1 = 1;

     label006:
        $i5 = $i3 & 128;

        if $i5 != 0 goto label016;

        $z2 = 1;

     label007:
        $i5 = $i3 & 256;

        if $i5 != 0 goto label017;

        $z3 = 1;

     label008:
        $i5 = $i3 & 4096;

        if $i5 == 0 goto label018;

        $z4 = 1;

     label009:
        if $z4 != 0 goto label019;

        if $z2 == 0 goto label010;

        if $z0 != 0 goto label019;

        if $z3 == 0 goto label019;

     label010:
        $z5 = 0;

     label011:
        if $z0 != 0 goto label012;

        if $z3 == 0 goto label012;

        if $z2 != 0 goto label013;

     label012:
        $z1 = 0;

     label013:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        if $r3 != null goto label020;

        return;

     label014:
        $z0 = 0;

        goto label005;

     label015:
        $z1 = 0;

        goto label006;

     label016:
        $z2 = 0;

        goto label007;

     label017:
        $z3 = 0;

        goto label008;

     label018:
        $z4 = 0;

        goto label009;

     label019:
        $z5 = 1;

        goto label011;

     label020:
        if $i3 < 2048 goto label030;

        if $z4 != 0 goto label030;

        $z5 = 0;

        $z3 = 0;

        $z2 = 0;

        $z1 = 0;

        $z6 = 0;

     label021:
        $i5 = r0.<com.metrictrade.and.fr: int S>;

        if $i5 == 73 goto label031;

        $i5 = r0.<com.metrictrade.and.fr: int S>;

        if $i5 == 89 goto label031;

        $i5 = r0.<com.metrictrade.and.fr: int S>;

        if $i5 == 66 goto label031;

        $i5 = r0.<com.metrictrade.and.fr: int S>;

        if $i5 == 71 goto label031;

        $z0 = 1;

     label022:
        $r2 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r2;

     label023:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[1];

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r5[27];

        $d9 = (double) $l1;

        $b4 = $d8 cmpg $d9;

        $i5 = (int) $b4;

        if $i5 < 0 goto label032;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r5[14];

        $d9 = (double) $l0;

        $b4 = $d8 cmpg $d9;

        $i5 = (int) $b4;

        if $i5 < 0 goto label032;

        $z7 = 0;

     label024:
        $l6 = r0.<com.metrictrade.and.fr: long ae>;

        $b4 = $l1 cmp $l6;

        $i5 = (int) $b4;

        if $i5 > 0 goto label066;

        $i5 = r0.<com.metrictrade.and.fr: int af>;

        $i5 = $i5 + -1;

     label025:
        if $i5 >= 0 goto label033;

        $i5 = -1;

     label026:
        if $i5 < 0 goto label066;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[3];

        $d0 = $r4[$i5];

        $b4 = $d0 cmpl $d5;

        if $b4 != 0 goto label035;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d0 = $r4[$i5];

        $d0 = $d0 - $d4;

        $d0 = staticinvoke <com.metrictrade.and.dc: double g(double)>($d0);

        $b4 = $d0 cmpg 1.0E-5;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label035;

        exitmonitor $r2;

     label027:
        return;

     label028:
        $r6 := @caughtexception;

        exitmonitor $r2;

     label029:
        throw $r6;

     label030:
        if $z4 == 0 goto label175;

        $z3 = 0;

        $z6 = $z0;

        goto label021;

     label031:
        $z0 = 0;

        goto label022;

     label032:
        $z7 = 1;

        goto label024;

     label033:
        $d8 = $r4[$i5];

        $l6 = (long) $d8;

        $b4 = $l1 cmp $l6;

        if $b4 != 0 goto label034;

        goto label026;

     label034:
        $i5 = $i5 + -1;

        goto label025;

     label035:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d0 = $r4[$i5];

        $i7 = (int) $d0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $d0 = $r4[$i5];

        $l0 = (long) $d0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[3];

        $d6 = $r4[$i5];

        $b4 = $d4 cmpl 0.0;

        if $b4 != 0 goto label036;

        $d5 = 0.0;

     label036:
        if $i7 < 0 goto label056;

        if $i7 >= 1024 goto label056;

        $i8 = $i7 & 512;

        if $i8 == 0 goto label060;

        $z4 = 1;

     label037:
        $i8 = <com.metrictrade.and.fr: int aA>;

        $i8 = $i8 & $i7;

        if $i8 == 0 goto label061;

        $z6 = 1;

     label038:
        $i8 = $i7 & 128;

        if $i8 != 0 goto label062;

        $z5 = 1;

     label039:
        $i7 = $i7 & 256;

        if $i7 != 0 goto label063;

        $z3 = 1;

     label040:
        if $z5 == 0 goto label064;

        if $z4 != 0 goto label041;

        if $z3 != 0 goto label064;

     label041:
        $z1 = 1;

     label042:
        if $z4 != 0 goto label043;

        if $z3 == 0 goto label043;

        if $z5 != 0 goto label174;

     label043:
        $z6 = 0;

     label044:
        if $i3 != -1 goto label045;

        $z2 = $z5;

     label045:
        $b4 = $d5 cmpg 0.0;

        $i7 = (int) $b4;

        if $i7 > 0 goto label046;

        $b4 = $d6 cmpl 0.0;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label046;

        $i3 = -1;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r5[15];

        $d0 = $d0 - 1.0;

        $d0 = staticinvoke <com.metrictrade.and.dc: double b(double,double)>(0.0, $d0);

        $r4[15] = $d0;

     label046:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[24];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[18];

        $d1 = $d1 - $d2;

        $d0 = $d0 * $d1;

        if $i2 != 0 goto label065;

        if $z0 == 0 goto label065;

        if $z5 == 0 goto label065;

        $d1 = r0.<com.metrictrade.and.fr: double aQ>;

        $d1 = $d1 * $d6;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d2 = $r4[$i5];

        $d1 = $d1 * $d2;

     label047:
        if $z5 == 0 goto label054;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[6];

        $d2 = $d2 - $d6;

        $r4[6] = $d2;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[7];

        $d2 = $d2 - $d1;

        $r4[7] = $d2;

        if $z6 == 0 goto label048;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[17];

        $d2 = $d2 - $d6;

        $r4[17] = $d2;

     label048:
        if $z1 == 0 goto label049;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[18];

        $d6 = $d2 - $d6;

        $r4[18] = $d6;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[42];

        $d6 = $d6 - $d1;

        $r4[42] = $d6;

     label049:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[6];

        $b4 = $d6 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label050;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[6] = 0.0;

     label050:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[7];

        $b4 = $d6 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label051;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[7] = 0.0;

     label051:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[17];

        $b4 = $d6 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label052;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[17] = 0.0;

     label052:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[18];

        $b4 = $d6 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label053;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[18] = 0.0;

     label053:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[42];

        $b4 = $d6 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label054;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[42] = 0.0;

     label054:
        if $z3 == 0 goto label055;

        if $z4 != 0 goto label055;

        $d0 = $d0 - $d1;

        $b4 = $d0 cmpg 0.0;

        $i2 = (int) $b4;

        if $i2 >= 0 goto label055;

        $d0 = 0.0;

     label055:
        if $z2 == 0 goto label056;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[18];

        $b4 = $d6 cmpl $d1;

        $i2 = (int) $b4;

        if $i2 <= 0 goto label056;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r5[6];

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r5[18];

        $d6 = $d6 - $d1;

        $d0 = $d0 / $d6;

        $r4[24] = $d0;

     label056:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[15];

        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label057;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[3] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[4] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[5] = 0.0;

     label057:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d0 = (double) $i3;

        $r4[$i5] = $d0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $r4[$i5] = $d4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[3];

        $r4[$i5] = $d5;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $d4 = (double) $l0;

        $r4[$i5] = $d4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d4 = (double) $i3;

        $r4[$i5] = $d4;

        $z2 = r0.<com.metrictrade.and.fr: boolean O>;

        if $z2 == 0 goto label058;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r4[12];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[36];

        $d6 = (double) $l1;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[4];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d7 = $r4[5];

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(1, $d3, $d4, $d5, $d0, $d6, 0.0, $d1, $d2, $d7, $d3, 0);

     label058:
        $l0 = <com.metrictrade.and.ct: long y>;

        $l0 = $l0 + 1L;

        <com.metrictrade.and.ct: long y> = $l0;

        r0.<com.metrictrade.and.fr: long ar> = $l0;

        exitmonitor $r2;

     label059:
        return;

     label060:
        $z4 = 0;

        goto label037;

     label061:
        $z6 = 0;

        goto label038;

     label062:
        $z5 = 0;

        goto label039;

     label063:
        $z3 = 0;

        goto label040;

     label064:
        $z1 = 0;

        goto label042;

     label065:
        $d1 = 0.0;

        goto label047;

     label066:
        if $i3 >= 0 goto label068;

        exitmonitor $r2;

     label067:
        return;

     label068:
        $z8 = 0;

        $i5 = r0.<com.metrictrade.and.fr: int af>;

        $i7 = lengthof $r4;

        if $i5 >= $i7 goto label073;

        $i5 = r0.<com.metrictrade.and.fr: int af>;

        $z8 = 1;

     label069:
        $l6 = r0.<com.metrictrade.and.fr: long ae>;

        $b4 = $l6 cmp $l1;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label070;

        r0.<com.metrictrade.and.fr: long ae> = $l1;

     label070:
        if $i5 >= 0 goto label173;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $d8 = (double) $l1;

        $r7 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        $d9 = (double) $l0;

        $i5 = r0.<com.metrictrade.and.fr: int ad>;

        $i7 = r0.<com.metrictrade.and.fr: int af>;

        $z8 = 1;

        $i5 = specialinvoke r0.<com.metrictrade.and.fr: int a(double[][],int,double,int,java.lang.String[],double,int,int)>($r3, 1, $d8, 5, $r7, $d9, $i5, $i7);

     label071:
        if $i5 >= 0 goto label074;

        exitmonitor $r2;

     label072:
        return;

     label073:
        $i5 = -1;

        goto label069;

     label074:
        if $r1 == null goto label078;

        $r7 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        if $r7 == null goto label075;

        $r7 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        $i7 = lengthof $r7;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $i8 = lengthof $r4;

        if $i7 == $i8 goto label077;

     label075:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $i7 = lengthof $r4;

        $r7 = newarray (java.lang.String)[$i7];

        $r8 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        if $r8 == null goto label076;

        $r8 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r8, 0, $r7, 0, $i5);

     label076:
        r0.<com.metrictrade.and.fr: java.lang.String[] Y> = $r7;

     label077:
        $r7 = r0.<com.metrictrade.and.fr: java.lang.String[] Y>;

        $r7[$i5] = $r1;

     label078:
        if $i3 < 2048 goto label085;

        if $z4 != 0 goto label085;

        $l6 = staticinvoke <com.metrictrade.and.dc: long d(double)>($d4);

        $i7 = (int) $l6;

        $l6 = staticinvoke <com.metrictrade.and.dc: long d(double)>($d5);

        $i8 = (int) $l6;

        $r4 = r0.<com.metrictrade.and.fr: double[] D>;

        $d8 = $r4[24];

        $d9 = (double) $l1;

        $b4 = $d8 cmpg $d9;

        $i9 = (int) $b4;

        if $i9 >= 0 goto label080;

        lookupswitch($i7)
        {
            case 1: goto label083;
            case 2: goto label083;
            case 3: goto label084;
            default: goto label079;
        };

     label079:
        $r4 = r0.<com.metrictrade.and.fr: double[] D>;

        $d8 = (double) $l1;

        $r4[24] = $d8;

        virtualinvoke r0.<com.metrictrade.and.fr: void u()>();

     label080:
        if $i7 == 1 goto label081;

        if $i7 != 2 goto label094;

     label081:
        $i7 = $i8 / 10;

        if $i7 != 2 goto label094;

        exitmonitor $r2;

     label082:
        return;

     label083:
        $r4 = r0.<com.metrictrade.and.fr: double[] D>;

        $i9 = $i8 / 10;

        $d8 = (double) $i9;

        $r4[26] = $d8;

        $r4 = r0.<com.metrictrade.and.fr: double[] D>;

        $i9 = $i8 % 10;

        $d8 = (double) $i9;

        $r4[25] = $d8;

        goto label079;

     label084:
        $r4 = r0.<com.metrictrade.and.fr: double[] C>;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r5[2];

        $i9 = $i8 / 10000;

        $d9 = (double) $i9;

        $d8 = $d8 * $d9;

        $d8 = $d8 / 100.0;

        $r4[27] = $d8;

        $r4 = r0.<com.metrictrade.and.fr: double[] C>;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r5[2];

        $i9 = $i8 % 10000;

        $d9 = (double) $i9;

        $d8 = $d8 * $d9;

        $d8 = $d8 / 100.0;

        $r4[28] = $d8;

        goto label079;

     label085:
        if $i3 < 1024 goto label094;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[49];

        $d6 = (double) $l1;

        $b4 = $d0 cmpg $d6;

        $i2 = (int) $b4;

        if $i2 < 0 goto label092;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[14];

        $d6 = (double) $l0;

        $b4 = $d0 cmpg $d6;

        $i2 = (int) $b4;

        if $i2 < 0 goto label092;

        $z2 = 0;

     label086:
        if $z2 == 0 goto label090;

        $i3 = $i3 + -1024;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = (double) $l1;

        $r4[49] = $d0;

        if $i3 != 32 goto label087;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[31];

        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label088;

     label087:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[30] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[31] = $d5;

     label088:
        if $i3 == 0 goto label089;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[33] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[34] = $d5;

        $b4 = $d4 cmpl 0.0;

        if $b4 == 0 goto label089;

        $b4 = $d5 cmpl 0.0;

        if $b4 == 0 goto label089;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[30];

        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label089;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[30] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[31] = $d5;

     label089:
        $z2 = r0.<com.metrictrade.and.fr: boolean az>;

        if $z2 != 0 goto label090;

        $i2 = r0.<com.metrictrade.and.fr: int ag>;

        if $i2 != 2 goto label093;

        if $i3 != 0 goto label093;

        $i3 = r0.<com.metrictrade.and.fr: int p>;

        $i3 = $i3 | 32;

        r0.<com.metrictrade.and.fr: int p> = $i3;

     label090:
        exitmonitor $r2;

     label091:
        return;

     label092:
        $z2 = 1;

        goto label086;

     label093:
        if $i3 != 16 goto label090;

        $i3 = r0.<com.metrictrade.and.fr: int p>;

        $i3 = $i3 & -33;

        r0.<com.metrictrade.and.fr: int p> = $i3;

        goto label090;

     label094:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $r4[$i5] = $d4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[3];

        $r4[$i5] = $d5;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $d8 = (double) $l0;

        $r4[$i5] = $d8;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d8 = (double) $i3;

        $r4[$i5] = $d8;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[1];

        $d8 = (double) $l1;

        $r4[$i5] = $d8;

        if $z8 == 0 goto label095;

        $i7 = r0.<com.metrictrade.and.fr: int af>;

        $i7 = $i7 + 1;

        r0.<com.metrictrade.and.fr: int af> = $i7;

     label095:
        $i7 = r0.<com.metrictrade.and.fr: int af>;

        if $i7 > $i5 goto label096;

        $i7 = $i5 + 1;

        r0.<com.metrictrade.and.fr: int af> = $i7;

     label096:
        if $i3 < 1024 goto label097;

        if $z4 == 0 goto label132;

     label097:
        if $z7 == 0 goto label100;

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label134;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[15] = $d1;

     label098:
        $b4 = $l0 cmp 0L;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label099;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = (double) $l0;

        $r4[14] = $d1;

     label099:
        $b4 = $l1 cmp 0L;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label100;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = (double) $l1;

        $r4[27] = $d1;

     label100:
        if $z6 != 0 goto label112;

        if $z7 == 0 goto label101;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[30] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[31] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[33] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[34] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[35] = #NaN;

        if $z3 == 0 goto label101;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[12] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[1] = $d4;

        $i7 = r0.<com.metrictrade.and.fr: int p>;

        $i7 = $i7 & 32;

        if $i7 == 0 goto label101;

        $i7 = r0.<com.metrictrade.and.fr: int p>;

        $i7 = $i7 & -33;

        r0.<com.metrictrade.and.fr: int p> = $i7;

     label101:
        if $z3 == 0 goto label107;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[3];

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label102;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[48];

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label102;

        $d1 = (double) $l0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r4[48];

        $b4 = $d1 cmpg $d8;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label103;

     label102:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[3] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = (double) $l0;

        $r4[48] = $d1;

     label103:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[4];

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label104;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[4];

        $b4 = $d1 cmpg $d4;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label105;

     label104:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[4] = $d4;

     label105:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[5];

        $b4 = $d1 cmpl 0.0;

        if $b4 == 0 goto label106;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[5];

        $b4 = $d1 cmpl $d4;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label107;

     label106:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[5] = $d4;

     label107:
        if $z3 == 0 goto label112;

        if $z2 == 0 goto label112;

        $z8 = r0.<com.metrictrade.and.fr: boolean O>;

        if $z8 == 0 goto label108;

        if $z7 != 0 goto label108;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[12];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d9 = $r4[36];

        $d10 = (double) $l1;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d11 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d12 = $r4[4];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d13 = $r4[5];

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(1, $d3, $d1, $d8, $d9, $d10, 0.0, $d11, $d12, $d13, $d3, 0);

     label108:
        if $z4 != 0 goto label112;

        $z4 = r0.<com.metrictrade.and.fr: boolean aI>;

        if $z4 == 0 goto label112;

        $d1 = (double) $l0;

        $d1 = $d1 + 0.01;

        $i7 = (int) $d1;

        $i7 = $i7 / 100;

        $d1 = (double) $i7;

        $b4 = $d1 cmpg 0.5;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label136;

        $d8 = 0.1 + $d3;

        $i7 = (int) $d8;

        $d8 = (double) $i7;

        $d1 = $d1 / 10000.0;

        $d1 = $d1 + $d8;

     label109:
        $l0 = r0.<com.metrictrade.and.fr: long aN>;

        $b4 = $l0 cmp $l1;

        $i7 = (int) $b4;

        if $i7 < 0 goto label139;

        if $i3 < 0 goto label137;

        if $i3 >= 256 goto label137;

        $i7 = $i3 & 64;

        if $i7 != 0 goto label137;

        $d8 = $d5;

     label110:
        if $z1 == 0 goto label138;

        if $i3 < 0 goto label138;

        if $i3 >= 256 goto label138;

        $i7 = $i3 & 64;

        if $i7 != 0 goto label138;

        $d9 = $d5;

     label111:
        $d10 = (double) $l1;

        $d11 = (double) $i3;

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(4, $d1, $d4, $d8, $d9, $d10, $d11, $d4, $d4, $d4, $d3, 0);

     label112:
        if $z7 == 0 goto label132;

        if $z6 == 0 goto label115;

        if $z3 != 0 goto label113;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[30];

        $b4 = $d1 cmpl 0.0;

        if $b4 != 0 goto label114;

     label113:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[30] = $d4;

     label114:
        if $z2 == 0 goto label115;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[31];

        $d1 = $d1 + $d5;

        $r4[31] = $d1;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[31];

        $b4 = $d1 cmpg 0.0;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label115;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[31] = 0.0;

     label115:
        if $i3 < 0 goto label118;

        if $i3 >= 63 goto label118;

        $i3 = $i3 & 12;

        if $i3 != 0 goto label116;

        if $i5 < 0 goto label116;

        $i3 = r0.<com.metrictrade.and.fr: int af>;

        if $i5 < $i3 goto label146;

     label116:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d1 = $r4[$i5];

        $i3 = (int) $d1;

        $i3 = $i3 & -4;

        if $i3 < 0 goto label118;

        $r4 = r0.<com.metrictrade.and.fr: double[] ab>;

        $i5 = $i3 & 20;

        if $i5 == 0 goto label158;

        $b4 = -1;

     label117:
        $d1 = (double) $b4;

        $r4[2] = $d1;

     label118:
        if $z2 == 0 goto label119;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[13] = $d5;

     label119:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[24];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d9 = $r4[18];

        $d8 = $d8 - $d9;

        $d1 = $d1 * $d8;

        $b4 = $d0 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label160;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[6] = $d0;

     label120:
        $b4 = $d7 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label162;

        $d7 = $d7 / 10000.0;

        $d7 = $d7 * $d0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[18] = $d7;

     label121:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d8 = $r4[6];

        $b4 = $d8 cmpg 0.0;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label122;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = 0.0;

        $r4[6] = 0.0;

     label122:
        $b4 = $d7 cmpg 0.0;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label172;

        $d7 = 0.0;

     label123:
        $b4 = $d6 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label165;

        if $i2 != 0 goto label164;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[24] = $d6;

        if $z2 == 0 goto label125;

        if $z0 == 0 goto label125;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b4 = 7;

        $d6 = $r4[7];

        $d1 = r0.<com.metrictrade.and.fr: double aQ>;

        $d4 = $d1 * $d4;

        $d4 = $d4 * $d5;

        $d4 = $d6 + $d4;

     label124:
        $r4[$b4] = $d4;

     label125:
        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label126;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[7] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[24] = 0.0;

     label126:
        $i3 = r0.<com.metrictrade.and.fr: int S>;

        if $i3 != 115 goto label168;

        $b4 = $d2 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label128;

        $b4 = 42;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $d2;

     label127:
        $r4[$b4] = $d4;

     label128:
        $b4 = $d0 cmpl 0.0;

        if $b4 != 0 goto label129;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[17] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[16] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[42] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[18] = 0.0;

     label129:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r4[18];

        $b4 = $d4 cmpg 0.0;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label130;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[42] = 0.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[18] = 0.0;

     label130:
        $b4 = $d3 cmpl 0.0;

        if $b4 == 0 goto label131;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[0] = $d3;

     label131:
        $z2 = r0.<com.metrictrade.and.fr: boolean O>;

        if $z2 == 0 goto label132;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r4[12];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d5 = $r4[6];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[36];

        $d6 = (double) $l1;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[3];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r4[4];

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d7 = $r4[5];

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(1, $d3, $d4, $d5, $d0, $d6, 0.0, $d1, $d2, $d7, $d3, 0);

     label132:
        exitmonitor $r2;

     label133:
        $l0 = <com.metrictrade.and.ct: long y>;

        $l0 = $l0 + 1L;

        <com.metrictrade.and.ct: long y> = $l0;

        r0.<com.metrictrade.and.fr: long ar> = $l0;

        return;

     label134:
        if $z8 == 0 goto label098;

        if $i3 >= 1024 goto label098;

     label135:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r4[15];

        $d1 = $d1 + 1.0;

        $r4[15] = $d1;

        goto label098;

     label136:
        $b4 = $d1 cmpg 1.8000101E7;

        $i7 = (int) $b4;

        if $i7 >= 0 goto label109;

        $d8 = 0.1 + $d3;

        $i7 = (int) $d8;

        $d8 = (double) $i7;

        $d1 = $d1 / 10000.0;

        $d1 = $d1 + $d8;

        goto label109;

     label137:
        $d8 = 0.0;

        goto label110;

     label138:
        $d9 = 0.0;

        goto label111;

     label139:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[0];

        $i8 = staticinvoke <com.metrictrade.and.fr: int a(double[],double)>($r4, $d1);

        $i7 = $i8;

        if $i8 >= 0 goto label140;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $i7 = specialinvoke r0.<com.metrictrade.and.fr: int a(double[][],int,double,int,java.lang.String[],double,int,int)>($r3, 0, $d1, 8, null, 0.0, -1, -1);

     label140:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[7];

        $d8 = $r4[$i7];

        $d9 = (double) $l1;

        $b4 = $d8 cmpg $d9;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label112;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[2];

        $d8 = $r4[$i7];

        $b4 = $d8 cmpl 0.0;

        if $b4 != 0 goto label141;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[2];

        $r4[$i7] = $d4;

     label141:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[3];

        $d8 = $r4[$i7];

        $b4 = $d8 cmpg $d4;

        $i8 = (int) $b4;

        if $i8 >= 0 goto label142;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[3];

        $r4[$i7] = $d4;

     label142:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[4];

        $d8 = $r4[$i7];

        $b4 = $d8 cmpl $d4;

        $i8 = (int) $b4;

        if $i8 > 0 goto label143;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[4];

        $d8 = $r4[$i7];

        $b4 = $d8 cmpl 0.0;

        if $b4 != 0 goto label144;

     label143:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[4];

        $r4[$i7] = $d4;

     label144:
        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[1];

        $r4[$i7] = $d4;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[5];

        $d8 = $r4[$i7];

        $d8 = $d8 + $d5;

        $r4[$i7] = $d8;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[0];

        $r4[$i7] = $d1;

        $r3 = r0.<com.metrictrade.and.fr: double[][] T>;

        $r4 = $r3[7];

        $d8 = (double) $l1;

        $r4[$i7] = $d8;

        r0.<com.metrictrade.and.fr: long aN> = $l1;

        $i8 = r0.<com.metrictrade.and.fr: int ah>;

        if $i8 > $i7 goto label145;

        $i7 = $i7 + 1;

        r0.<com.metrictrade.and.fr: int ah> = $i7;

     label145:
        $d8 = (double) $l1;

        $d9 = (double) $i3;

        specialinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,double,double,boolean)>(5, $d1, $d4, $d5, 0.0, $d8, $d9, $d4, $d4, $d4, $d3, 0);

        goto label112;

     label146:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d1 = $r4[$i5];

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $d8 = $r4[$i5];

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d9 = $r4[$i5];

        $b4 = $d9 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 < 0 goto label116;

        $b4 = $d9 cmpg 256.0;

        $i3 = (int) $b4;

        if $i3 < 0 goto label147;

        $b4 = $d9 cmpl 512.0;

        if $b4 != 0 goto label116;

     label147:
        $b4 = 0;

        if $i5 != 0 goto label151;

        $d8 = virtualinvoke r0.<com.metrictrade.and.fr: double l()>();

        $b4 = $d1 cmpl $d8;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label149;

        $b4 = 4;

     label148:
        if $b4 == 0 goto label116;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d1 = $r4[$i5];

        $d8 = (double) $b4;

        $d1 = $d1 + $d8;

        $r4[$i5] = $d1;

        goto label116;

     label149:
        $d8 = virtualinvoke r0.<com.metrictrade.and.fr: double l()>();

        $b4 = $d1 cmpg $d8;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label150;

        $b4 = 8;

        goto label148;

     label150:
        $b4 = 0;

        goto label148;

     label151:
        $i3 = $i5 + -1;

     label152:
        if $i3 < 0 goto label148;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[4];

        $d9 = $r4[$i3];

        $b10 = $d9 cmpl 0.0;

        $i7 = (int) $b10;

        if $i7 < 0 goto label157;

        $b10 = $d9 cmpg 256.0;

        $i7 = (int) $b10;

        if $i7 < 0 goto label153;

        $b10 = $d9 cmpl 512.0;

        if $b10 != 0 goto label157;

     label153:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d9 = $r4[$i3];

        $b10 = $d1 cmpl $d9;

        if $b10 != 0 goto label154;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[0];

        $d9 = $r4[$i3];

        $b10 = $d8 cmpl $d9;

        if $b10 == 0 goto label157;

     label154:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d8 = $r4[$i3];

        $b4 = $d1 cmpl $d8;

        $i7 = (int) $b4;

        if $i7 <= 0 goto label155;

        $b4 = 4;

        goto label148;

     label155:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r4 = $r3[2];

        $d8 = $r4[$i3];

        $b4 = $d1 cmpg $d8;

        $i3 = (int) $b4;

        if $i3 >= 0 goto label156;

        $b4 = 8;

        goto label148;

     label156:
        $b4 = 0;

        goto label148;

     label157:
        $i3 = $i3 + -1;

        goto label152;

     label158:
        $i3 = $i3 & 40;

        if $i3 == 0 goto label159;

        $b4 = 1;

        goto label117;

     label159:
        $b4 = 0;

        goto label117;

     label160:
        if $z2 == 0 goto label161;

        if $z7 == 0 goto label161;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[6];

        $d0 = $d0 + $d5;

        $r4[6] = $d0;

     label161:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r4[6];

        $d0 = $d0 + 0.1;

        $l0 = (long) $d0;

        $d0 = (double) $l0;

        goto label120;

     label162:
        if $z5 == 0 goto label163;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d7 = $r4[18];

        $d7 = $d7 + $d5;

        $r4[18] = $d7;

     label163:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d7 = $r4[18];

        goto label121;

     label164:
        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[24] = $d6;

        if $z2 == 0 goto label125;

        if $i2 != 2 goto label125;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b4 = 7;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r5[6];

        $d4 = $d4 * $d6;

        goto label124;

     label165:
        if $z2 == 0 goto label125;

        if $i2 != 0 goto label125;

        if $z0 == 0 goto label166;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r4[7];

        $d8 = r0.<com.metrictrade.and.fr: double aQ>;

        $d8 = $d8 * $d5;

        $d8 = $d8 * $d4;

        $d6 = $d6 + $d8;

        $r4[7] = $d6;

     label166:
        if $z3 == 0 goto label125;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b4 = 24;

        $b10 = $d0 cmpl $d7;

        $i3 = (int) $b10;

        if $i3 <= 0 goto label167;

        $d4 = $d4 * $d5;

        $d4 = $d4 + $d1;

        $d6 = $d0 - $d7;

        $d4 = $d4 / $d6;

        goto label124;

     label167:
        $d4 = 0.0;

        goto label124;

     label168:
        $b4 = $d2 cmpl 0.0;

        $i3 = (int) $b4;

        if $i3 <= 0 goto label169;

        $d4 = $d2 / 10000.0;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r4[16] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b4 = 17;

        $d5 = $d0 - $d7;

        $d4 = $d4 * $d5;

        goto label127;

     label169:
        if $z1 == 0 goto label128;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r4[17];

        $d4 = $d4 + $d5;

        $r4[17] = $d4;

        $r4 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b4 = 16;

        $b10 = $d0 cmpl $d7;

        $i3 = (int) $b10;

        if $i3 <= 0 goto label171;

        $r5 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r5[17];

     label170:
        $d5 = $d0 - $d7;

        $d4 = $d4 / $d5;

        goto label127;

     label171:
        $d4 = 0.0;

        goto label127;

     label172:
        goto label123;

     label173:
        goto label071;

     label174:
        goto label044;

     label175:
        $z6 = $z0;

        goto label021;

     label176:
        goto label003;

        catch java.lang.Throwable from label023 to label027 with label028;
        catch java.lang.Throwable from label028 to label029 with label028;
        catch java.lang.Throwable from label033 to label059 with label028;
        catch java.lang.Throwable from label060 to label067 with label028;
        catch java.lang.Throwable from label068 to label072 with label028;
        catch java.lang.Throwable from label073 to label082 with label028;
        catch java.lang.Throwable from label083 to label091 with label028;
        catch java.lang.Throwable from label092 to label133 with label028;
        catch java.lang.Throwable from label135 to label170 with label028;
    }

    public final void a(long, boolean)
    {
        java.lang.Throwable $r6;
        double[] $r2, $r4, $r5;
        long $l0;
        com.metrictrade.and.fr r0;
        int $i1, $i2, $i3;
        java.lang.Object $r1;
        double[][] $r3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.fr;

        $l0 := @parameter0: long;

        $z0 := @parameter1: boolean;

        $i1 = 0;

        virtualinvoke r0.<com.metrictrade.and.fr: void o()>();

        $r1 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r1;

        $i2 = 0;

     label01:
        if $i2 < 36 goto label06;

        $i2 = 0;

     label02:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $i3 = lengthof $r2;

        if $i2 < $i3 goto label09;

        r0.<com.metrictrade.and.fr: long ae> = 0L;

        r0.<com.metrictrade.and.fr: int af> = 0;

        r0.<com.metrictrade.and.fr: long aN> = 0L;

        $z0 = r0.<com.metrictrade.and.fr: boolean az>;

        if $z0 != 0 goto label03;

        $i2 = r0.<com.metrictrade.and.fr: int p>;

        $i2 = $i2 & -33;

        r0.<com.metrictrade.and.fr: int p> = $i2;

     label03:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2[27] = -1.0;

     label04:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r2 = $r3[0];

        $i2 = lengthof $r2;

        if $i1 < $i2 goto label10;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2[27] = -1.0;

        virtualinvoke r0.<com.metrictrade.and.fr: void t()>();

        $r4 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r5 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2[0] = 0.0;

        $r5[1] = 0.0;

        $r4[2] = 0.0;

        r0.<com.metrictrade.and.fr: long k> = $l0;

        r0.<com.metrictrade.and.fr: long l> = 0L;

        exitmonitor $r1;

     label05:
        return;

     label06:
        if $z0 == 0 goto label07;

        if $i2 == 2 goto label08;

        if $i2 == 1 goto label08;

     label07:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2[$i2] = 0.0;

     label08:
        $i2 = $i2 + 1;

        goto label01;

     label09:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[0];

        $r2[$i2] = 0.0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aL>;

        $r2 = $r3[2];

        $r2[$i2] = 0.0;

        $i2 = $i2 + 1;

        goto label02;

     label10:
        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r2 = $r3[0];

        $r2[$i1] = 0.0;

        $r3 = r0.<com.metrictrade.and.fr: double[][] aa>;

        $r2 = $r3[1];

        $r2[$i1] = 0.0;

        $i1 = $i1 + 1;

        goto label04;

     label11:
        $r6 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r6;

        catch java.lang.Throwable from label02 to label05 with label11;
        catch java.lang.Throwable from label06 to label12 with label11;
    }

    public final void a(double[], int, boolean, double)
    {
        double[] $r1;
        byte $b1;
        com.metrictrade.and.fr r0;
        int $i0, $i2;
        boolean $z0, $z1;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;

        r0 := @this: com.metrictrade.and.fr;

        $r1 := @parameter0: double[];

        $i0 := @parameter1: int;

        $z0 := @parameter2: boolean;

        $d0 := @parameter3: double;

        if $i0 == 1 goto label05;

        if $i0 == 7 goto label05;

        if $i0 == 8 goto label05;

        $z1 = 0;

     label01:
        if $z0 == 0 goto label07;

        $d1 = $r1[6];

        $d2 = $r1[1];

        $b1 = $d2 cmpl 0.0;

        if $b1 != 0 goto label02;

        $d2 = $r1[2];

     label02:
        $d3 = $r1[0];

        $b1 = $d3 cmpl $d0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label03;

        $d3 = $r1[14];

        $b1 = $d3 cmpl 0.0;

        if $b1 != 0 goto label13;

     label03:
        $d3 = $r1[3];

        $d4 = $r1[4];

        $d5 = $r1[5];

        if $z1 == 0 goto label06;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d6 = $r1[36];

     label04:
        virtualinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,boolean,double)>($i0, $d0, $d2, $d3, $d4, $d5, $d1, $d6, 0.0, 1, 0.0);

        return;

     label05:
        $z1 = 1;

        goto label01;

     label06:
        $d6 = 0.0;

        goto label04;

     label07:
        $d3 = $r1[7];

        $b1 = $d3 cmpl 0.0;

        if $b1 != 0 goto label08;

        $d3 = 100.0;

     label08:
        $z0 = <com.metrictrade.and.fr: boolean B>;

        if $z0 == 0 goto label11;

        $d1 = $r1[5];

        $d1 = $d1 * $d3;

     label09:
        $d2 = $r1[0];

        $d4 = $r1[1];

        $d4 = $d4 / $d3;

        $d5 = $r1[2];

        $d5 = $d5 / $d3;

        $d6 = $r1[3];

        $d6 = $d6 / $d3;

        $d7 = $r1[4];

        $d3 = $d7 / $d3;

        if $z1 == 0 goto label12;

        $d7 = $r1[6];

     label10:
        virtualinvoke r0.<com.metrictrade.and.fr: void a(int,double,double,double,double,double,double,double,double,boolean,double)>($i0, $d2, $d4, $d5, $d6, $d3, $d1, $d7, 0.0, 1, $d0);

        return;

     label11:
        $d1 = $r1[5];

        goto label09;

     label12:
        $d7 = 0.0;

        goto label10;

     label13:
        return;
    }

    public final void a(java.lang.String[], double[], int, int, char[])
    {
        java.lang.Throwable $r12;
        double[] $r2, $r15, $r17, $r18;
        java.lang.String[] $r1, $r10, $r13, $r14;
        int[] $r6;
        int $i0, $i1, $i2, $i3, $i4;
        java.lang.String $r8, $r11;
        double $d0;
        java.lang.String[][][] $r5;
        double[][][] $r7;
        com.metrictrade.and.fr r0;
        char[] $r3;
        java.lang.Object $r4;
        java.lang.String[][] $r9;
        double[][] $r16;

        r0 := @this: com.metrictrade.and.fr;

        $r1 := @parameter0: java.lang.String[];

        $r2 := @parameter1: double[];

        $i0 := @parameter2: int;

        $i1 := @parameter3: int;

        $r3 := @parameter4: char[];

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        if $r5 != null goto label01;

        $r6 = newarray (int)[2];

        $r6[0] = 2;

        $r6[1] = 32;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "[D", $r6);

        $r7 = (double[][][]) $r4;

        r0.<com.metrictrade.and.fr: double[][][] I> = $r7;

        $r6 = newarray (int)[2];

        $r6[0] = 2;

        $r6[1] = 2;

        $r4 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>(class "[Ljava/lang/String;", $r6);

        $r5 = (java.lang.String[][][]) $r4;

        r0.<com.metrictrade.and.fr: java.lang.String[][][] H> = $r5;

     label01:
        if $r1 == null goto label21;

        $r8 = $r1[0];

        if $r8 == null goto label21;

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $i2 = lengthof $r5;

        if $i0 <= $i2 goto label02;

        return;

     label02:
        $r4 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r4;

     label03:
        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r10 = $r9[0];

        if $r10 == null goto label04;

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r10 = $r9[0];

        $i2 = lengthof $r10;

        $i3 = $i1 + 1;

        if $i2 >= $i3 goto label08;

     label04:
        if $i1 >= 256 goto label14;

        $i2 = 256;

     label05:
        $i3 = 0;

     label06:
        if $i3 < 2 goto label15;

        $i3 = 0;

     label07:
        if $i3 < 32 goto label17;

     label08:
        $r8 = $r1[0];

        $r8 = staticinvoke <com.metrictrade.and.fj: java.lang.String a(java.lang.String)>($r8);

        $r11 = $r8;

        if $r8 != null goto label09;

        $r11 = $r1[0];

     label09:
        $r8 = staticinvoke <com.metrictrade.and.fj: java.lang.String a(java.lang.String,char[],boolean)>($r11, $r3, 1);

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r10 = $r9[0];

        $r10[$i1] = $r8;

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r10 = $r9[1];

        $r8 = $r1[0];

        $r10[$i1] = $r8;

        $i2 = 0;

     label10:
        if $i2 < 32 goto label19;

        exitmonitor $r4;

     label11:
        return;

     label12:
        $r12 := @caughtexception;

        exitmonitor $r4;

     label13:
        throw $r12;

     label14:
        $i2 = $i1 + 256;

        goto label05;

     label15:
        $r10 = newarray (java.lang.String)[$i2];

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r13 = $r9[$i3];

        if $r13 == null goto label16;

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r13 = $r9[$i3];

        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r14 = $r9[$i3];

        $i4 = lengthof $r14;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r13, 0, $r10, 0, $i4);

     label16:
        $r5 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r9 = $r5[$i0];

        $r9[$i3] = $r10;

        $i3 = $i3 + 1;

        goto label06;

     label17:
        $r15 = newarray (double)[$i2];

        $r7 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r16 = $r7[$i0];

        $r17 = $r16[$i3];

        if $r17 == null goto label18;

        $r7 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r16 = $r7[$i0];

        $r17 = $r16[$i3];

        $r7 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r16 = $r7[$i0];

        $r18 = $r16[$i3];

        $i4 = lengthof $r18;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r17, 0, $r15, 0, $i4);

     label18:
        $r7 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r16 = $r7[$i0];

        $r16[$i3] = $r15;

        $i3 = $i3 + 1;

        goto label07;

     label19:
        $r7 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r16 = $r7[$i0];

        $r15 = $r16[$i2];

        $i3 = $i2 + 2;

        $d0 = $r2[$i3];

        $r15[$i1] = $d0;

     label20:
        $i2 = $i2 + 1;

        goto label10;

     label21:
        return;

        catch java.lang.Throwable from label03 to label11 with label12;
        catch java.lang.Throwable from label12 to label13 with label12;
        catch java.lang.Throwable from label15 to label20 with label12;
    }

    public final int b(int, int)
    {
        java.lang.String[][][] $r1;
        double[][][] $r4;
        double[] $r6;
        java.lang.String[] $r3;
        byte $b4;
        com.metrictrade.and.fr r0;
        int $i0, $i1, $i2, $i3;
        java.lang.String[][] $r2;
        double[][] $r5;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        if $r1 == null goto label2;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $i2 = lengthof $r1;

        if $i0 >= $i2 goto label2;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r2 = $r1[$i0];

        $r3 = $r2[0];

        if $r3 == null goto label2;

        $i2 = 0;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[][][] H>;

        $r2 = $r1[$i0];

        $r3 = $r2[0];

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label3;

     label2:
        return -1;

     label3:
        $r4 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r5 = $r4[$i0];

        $r6 = $r5[0];

        $d0 = $r6[$i2];

        $d1 = (double) $i1;

        $b4 = $d0 cmpl $d1;

        if $b4 != 0 goto label4;

        $r4 = r0.<com.metrictrade.and.fr: double[][][] I>;

        $r5 = $r4[$i0];

        $r6 = $r5[1];

        $d0 = $r6[$i2];

        $b4 = $d0 cmpl 1.0;

        if $b4 == 0 goto label5;

     label4:
        $i2 = $i2 + 1;

        goto label1;

     label5:
        return $i2;
    }

    public final void b(long)
    {
        long $l0;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $l0 := @parameter0: long;

        r0.<com.metrictrade.and.fr: long as> = $l0;

        r0.<com.metrictrade.and.fr: long k> = $l0;

        return;
    }

    public final double c(int, int)
    {
        double[] $r1;
        byte $b2;
        com.metrictrade.and.fr r0;
        int $i0, $i1, $i3, $i4;
        double[][] $r2;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i1 != 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[$i0];

        return $d0;

     label1:
        if $i0 < 3 goto label7;

        if $i0 > 7 goto label7;

        $b2 = 2;

     label2:
        $i0 = $i0 - $b2;

        if $i0 < 0 goto label3;

        if $i0 < 12 goto label4;

     label3:
        $i0 = 11;

     label4:
        $i3 = 0;

     label5:
        $r2 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r2[$i0];

        if $r1 == null goto label6;

        $r2 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r2[$i0];

        $i4 = lengthof $r1;

        if $i3 < $i4 goto label8;

     label6:
        return 0.0;

     label7:
        $b2 = 1;

        goto label2;

     label8:
        $r2 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r2[0];

        $d0 = $r1[$i3];

        $d1 = (double) $i1;

        $b2 = $d0 cmpl $d1;

        if $b2 != 0 goto label9;

        $r2 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r2[$i0];

        $d0 = $r1[$i3];

        return $d0;

     label9:
        $i3 = $i3 + 1;

        goto label5;
    }

    public final int c(int)
    {
        com.metrictrade.and.fr r0;
        int $i0, $i1;
        double[] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        if $i0 >= 0 goto label2;

        $i1 = neg $i0;

     label1:
        $i1 = $i1 + 28;

        $i1 = $i1 + -1;

        $d0 = $r1[$i1];

        $i1 = (int) $d0;

        if $i1 > 0 goto label3;

        return -1;

     label2:
        $i1 = $i0;

        goto label1;

     label3:
        if $i0 >= 0 goto label4;

        $i0 = $i1 + -21;

        return $i0;

     label4:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[$i1];

        $i0 = (int) $d0;

        return $i0;
    }

    public final int e()
    {
        int $i0;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 = r0.<com.metrictrade.and.fr: int S>;

        lookupswitch($i0)
        {
            case 67: goto label4;
            case 70: goto label3;
            case 73: goto label2;
            case 80: goto label5;
            case 89: goto label2;
            default: goto label1;
        };

     label1:
        return 64;

     label2:
        return 32;

     label3:
        return 256;

     label4:
        return 512;

     label5:
        return 1024;
    }

    public final void e(com.metrictrade.and.df)
    {
        byte $b0, $b3;
        com.metrictrade.and.fr r0;
        com.metrictrade.and.ak $r4;
        com.metrictrade.and.dm $r3, $r6;
        int $i1, $i2;
        java.lang.Object $r5;
        com.metrictrade.and.dg $r2;
        com.metrictrade.and.df $r1;
        boolean $z0;
        double $d0, $d1, $d2;

        r0 := @this: com.metrictrade.and.fr;

        $r1 := @parameter0: com.metrictrade.and.df;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        if $r2 != null goto label1;

        $r2 = new com.metrictrade.and.dg;

        specialinvoke $r2.<com.metrictrade.and.dg: void <init>(boolean)>(1);

        r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R> = $r2;

     label1:
        $r3 = (com.metrictrade.and.dm) $r1;

        $z0 = <com.metrictrade.and.fr: boolean B>;

        if $z0 == 0 goto label5;

        $b0 = 2;

     label2:
        $d0 = virtualinvoke $r3.<com.metrictrade.and.dm: double e(int)>(0);

        $d1 = virtualinvoke $r3.<com.metrictrade.and.dm: double e(int)>($b0);

        $i1 = 0;

     label3:
        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        $r4 = $r2.<com.metrictrade.and.dg: com.metrictrade.and.ak B>;

        $i2 = $r4.<com.metrictrade.and.ak: int a>;

        if $i1 < $i2 goto label6;

        $z0 = 0;

     label4:
        if $z0 != 0 goto label8;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        virtualinvoke $r2.<com.metrictrade.and.dg: boolean a(com.metrictrade.and.df,boolean,boolean)>($r3, 0, 1);

        return;

     label5:
        $b0 = 0;

        goto label2;

     label6:
        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        $r5 = virtualinvoke $r2.<com.metrictrade.and.dg: java.lang.Object h(int)>($i1);

        $r6 = (com.metrictrade.and.dm) $r5;

        $d2 = virtualinvoke $r6.<com.metrictrade.and.dm: double e(int)>($b0);

        $b3 = $d2 cmpl $d1;

        if $b3 != 0 goto label7;

        $d2 = virtualinvoke $r6.<com.metrictrade.and.dm: double e(int)>(0);

        $b3 = $d0 cmpl $d2;

        if $b3 != 0 goto label7;

        virtualinvoke $r6.<com.metrictrade.and.dm: void a(com.metrictrade.and.dm)>($r3);

        $r3 = $r6;

        $z0 = 1;

        goto label4;

     label7:
        $i1 = $i1 + 1;

        goto label3;

     label8:
        return;
    }

    public final void f(com.metrictrade.and.df)
    {
        com.metrictrade.and.fr r0;
        com.metrictrade.and.ak $r3;
        int $i0;
        com.metrictrade.and.dg $r2;
        com.metrictrade.and.df $r1;

        r0 := @this: com.metrictrade.and.fr;

        $r1 := @parameter0: com.metrictrade.and.df;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        if $r2 == null goto label1;

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        virtualinvoke $r2.<com.metrictrade.and.dg: boolean b(java.lang.Object)>($r1);

        $r2 = r0.<com.metrictrade.and.fr: com.metrictrade.and.dg R>;

        $r3 = $r2.<com.metrictrade.and.dg: com.metrictrade.and.ak B>;

        $i0 = $r3.<com.metrictrade.and.ak: int a>;

        if $i0 != 0 goto label1;

        $i0 = r0.<com.metrictrade.and.fr: int o>;

        $i0 = $i0 & -2;

        r0.<com.metrictrade.and.fr: int o> = $i0;

     label1:
        return;
    }

    public final void f_(int)
    {
        int $i0, $i1;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.fr: int ag>;

        if $i1 == $i0 goto label1;

        r0.<com.metrictrade.and.fr: int ag> = $i0;

        virtualinvoke r0.<com.metrictrade.and.fr: void t()>();

     label1:
        return;
    }

    public final double[] h(int)
    {
        com.metrictrade.and.fr r0;
        int $i0;
        double[] $r2;
        double[][] $r1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label3;

        if $i0 >= 24 goto label3;

        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        if $r1 != null goto label1;

        $r1 = newarray (double[])[24];

        r0.<com.metrictrade.and.fr: double[][] X> = $r1;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = $r1[$i0];

        if $r2 != null goto label2;

        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = newarray (double)[24];

        $r1[$i0] = $r2;

     label2:
        $r1 = r0.<com.metrictrade.and.fr: double[][] X>;

        $r2 = $r1[$i0];

        return $r2;

     label3:
        return null;
    }

    public final int i()
    {
        byte $b1;
        com.metrictrade.and.fr r0;
        int $i0;
        double[] $r1;
        boolean $z0;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 = r0.<com.metrictrade.and.fr: int af>;

        if $i0 <= 1 goto label1;

        $z0 = r0.<com.metrictrade.and.fr: boolean aO>;

        if $z0 == 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[5];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[4];

        $b1 = $d0 cmpl $d1;

        if $b1 == 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[30];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[12];

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[12];

        $b1 = $d0 cmpg 1.0E-5;

        $i0 = (int) $b1;

        if $i0 > 0 goto label2;

     label1:
        return 0;

     label2:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[4];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[12];

        $b1 = $d0 cmpl $d1;

        if $b1 == 0 goto label4;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[5];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[12];

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label3;

        return -1;

     label3:
        return 0;

     label4:
        return 1;
    }

    public final double[][] i(int)
    {
        int $i0;
        com.metrictrade.and.fr r0;
        double[][] r1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        r1 = r0.<com.metrictrade.and.fr: double[][] T>;

        lookupswitch($i0)
        {
            case 1: goto label5;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label1;
            case 5: goto label2;
            case 6: goto label1;
            case 7: goto label3;
            case 8: goto label4;
            default: goto label1;
        };

     label1:
        return r1;

     label2:
        r1 = r0.<com.metrictrade.and.fr: double[][] U>;

        return r1;

     label3:
        r1 = r0.<com.metrictrade.and.fr: double[][] aJ>;

        return r1;

     label4:
        r1 = r0.<com.metrictrade.and.fr: double[][] aK>;

        return r1;

     label5:
        r1 = r0.<com.metrictrade.and.fr: double[][] V>;

        return r1;
    }

    public final double j()
    {
        byte $b1;
        com.metrictrade.and.fr r0;
        int $i0;
        double[] $r1;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 = r0.<com.metrictrade.and.fr: int ag>;

        if $i0 == 2 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[1];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[1];

        $b1 = $d0 cmpl $d1;

        if $b1 != 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[1];

        $b1 = $d0 cmpl 0.0;

        if $b1 != 0 goto label4;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[2];

     label2:
        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label3;

        $b1 = $d0 cmpl $d0;

        if $b1 == 0 goto label5;

     label3:
        $d0 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

        return $d0;

     label4:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[1];

        goto label2;

     label5:
        return $d0;
    }

    public final double k()
    {
        byte $b0;
        com.metrictrade.and.fr r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[1];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[1];

        return $d0;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[2];

        return $d0;
    }

    public final void k(int)
    {
        int $i0;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label1;
            case 3: goto label1;
            case 4: goto label3;
            case 5: goto label3;
            default: goto label1;
        };

     label1:
        return;

     label2:
        r0.<com.metrictrade.and.fr: boolean O> = 1;

        return;

     label3:
        r0.<com.metrictrade.and.fr: boolean aI> = 1;

        return;
    }

    public final double l()
    {
        byte $b0;
        com.metrictrade.and.fr r0;
        double[] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[2];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b0 = $d0 cmpl $d0;

        if $b0 == 0 goto label2;

     label1:
        $d0 = virtualinvoke r0.<com.metrictrade.and.fr: double j()>();

     label2:
        return $d0;
    }

    public final void l(int)
    {
        int $i0;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        if $i0 <= 0 goto label1;

        r0.<com.metrictrade.and.fr: int S> = $i0;

     label1:
        return;
    }

    public final java.lang.String m()
    {
        java.lang.String[] $r1;
        java.lang.String $r2;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $r2 = $r1[1];

        if $r2 != null goto label1;

        $r2 = r0.<com.metrictrade.and.fr: java.lang.String b>;

        return $r2;

     label1:
        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $r2 = $r1[1];

        return $r2;
    }

    public final void m(int)
    {
        java.lang.Throwable $r5;
        int[] $r3, $r6, $r8;
        com.metrictrade.and.am $r10;
        com.metrictrade.and.ak $r4, $r9;
        int $i0, $i1, $i2, $i3;
        java.lang.String $r2;
        boolean $z0;
        double $d0;
        com.metrictrade.and.fr r0;
        java.lang.Object $r1;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $i1 = 0;

        if $i0 <= 2000 goto label24;

        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        if $r3 != null goto label01;

        $r3 = newarray (int)[64];

        r0.<com.metrictrade.and.fr: int[] ax> = $r3;

        $r9 = new com.metrictrade.and.ak;

        specialinvoke $r9.<com.metrictrade.and.ak: void <init>()>();

        r0.<com.metrictrade.and.fr: com.metrictrade.and.ak aw> = $r9;

     label01:
        $i2 = 0;

     label02:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label05;

     label03:
        $z0 = 0;

     label04:
        if $z0 == 0 goto label07;

        return;

     label05:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = $r3[$i2];

        if $i3 != $i0 goto label06;

        $z0 = 1;

        goto label04;

     label06:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = $r3[$i2];

        if $i3 == 0 goto label03;

        $i2 = $i2 + 1;

        goto label02;

     label07:
        $r1 = <com.metrictrade.and.fr: java.lang.Object ap>;

        entermonitor $r1;

        $i2 = 0;

     label08:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = lengthof $r3;

        if $i2 < $i3 goto label13;

     label09:
        if $z0 == 0 goto label15;

        exitmonitor $r1;

     label10:
        return;

     label11:
        $r5 := @caughtexception;

        exitmonitor $r1;

     label12:
        throw $r5;

     label13:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = $r3[$i2];

        if $i3 != $i0 goto label14;

        $z0 = 1;

        goto label09;

     label14:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = $r3[$i2];

        if $i3 == 0 goto label09;

        $i2 = $i2 + 1;

        goto label08;

     label15:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = lengthof $r3;

        if $i2 != $i3 goto label16;

        $i3 = $i2 + 64;

        $r3 = newarray (int)[$i3];

        $r6 = r0.<com.metrictrade.and.fr: int[] ax>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r6, 0, $r3, 0, $i2);

        r0.<com.metrictrade.and.fr: int[] ax> = $r3;

     label16:
        $r10 = new com.metrictrade.and.am;

        specialinvoke $r10.<com.metrictrade.and.am: void <init>()>();

        $d0 = (double) $i0;

        staticinvoke <com.metrictrade.and.fj: void a(double,com.metrictrade.and.am)>($d0, $r10);

        $r2 = virtualinvoke $r10.<com.metrictrade.and.am: java.lang.String toString()>();

     label17:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i2 = lengthof $r3;

        if $i1 < $i2 goto label20;

     label18:
        exitmonitor $r1;

     label19:
        return;

     label20:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i2 = $r3[$i1];

        if $i2 <= $i0 goto label21;

        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $r6 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i2 = $i1 + 1;

        $r8 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i3 = lengthof $r8;

        $i3 = $i3 - $i1;

        $i3 = $i3 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i1, $r6, $i2, $i3);

        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $r3[$i1] = $i0;

        $r4 = r0.<com.metrictrade.and.fr: com.metrictrade.and.ak aw>;

        virtualinvoke $r4.<com.metrictrade.and.ak: void b(int,java.lang.Object)>($i1, $r2);

        if $i1 != 0 goto label18;

        r0.<com.metrictrade.and.fr: java.lang.String ay> = $r2;

        goto label18;

     label21:
        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $i2 = $r3[$i1];

        if $i2 != 0 goto label23;

        $r3 = r0.<com.metrictrade.and.fr: int[] ax>;

        $r3[$i1] = $i0;

        $r4 = r0.<com.metrictrade.and.fr: com.metrictrade.and.ak aw>;

        virtualinvoke $r4.<com.metrictrade.and.ak: boolean c(java.lang.Object)>($r2);

        if $i1 != 0 goto label18;

        r0.<com.metrictrade.and.fr: java.lang.String ay> = $r2;

     label22:
        goto label18;

     label23:
        $i1 = $i1 + 1;

        goto label17;

     label24:
        return;

        catch java.lang.Throwable from label08 to label10 with label11;
        catch java.lang.Throwable from label11 to label12 with label11;
        catch java.lang.Throwable from label13 to label19 with label11;
        catch java.lang.Throwable from label20 to label22 with label11;
    }

    public final void n(int)
    {
        double[] $r1;
        byte $b2;
        com.metrictrade.and.fr r0;
        int $i0, $i1, $i3;
        double $d0, $d1, $d2, $d3;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        if $i0 != 98 goto label10;

        $i0 = 0;

     label01:
        if $i0 < 3 goto label02;

        return;

     label02:
        $d0 = -1.0;

        $i1 = 21;

        $d1 = -1.0;

     label03:
        if $i1 < 24 goto label04;

        $i0 = $i0 + 1;

        goto label01;

     label04:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $b2 = $d2 cmpl 0.0;

        if $b2 == 0 goto label08;

        if $i0 <= 0 goto label05;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[28];

        $d3 = (double) $i1;

        $b2 = $d2 cmpl $d3;

        if $b2 == 0 goto label08;

     label05:
        if $i0 != 2 goto label06;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[29];

        $d3 = (double) $i1;

        $b2 = $d2 cmpl $d3;

        if $b2 == 0 goto label08;

     label06:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $i3 = <com.metrictrade.and.ct: int V>;

        $d3 = (double) $i3;

        $b2 = $d2 cmpl $d3;

        $i3 = (int) $b2;

        if $i3 < 0 goto label09;

        $b2 = $d0 cmpl -1.0;

        if $b2 == 0 goto label07;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $i3 = <com.metrictrade.and.ct: int U>;

        $d3 = (double) $i3;

        $b2 = $d2 cmpl $d3;

        $i3 = (int) $b2;

        if $i3 < 0 goto label08;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $b2 = $d2 cmpg $d0;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label08;

     label07:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[$i1];

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $i3 = $i0 + 28;

        $d2 = (double) $i1;

        $r1[$i3] = $d2;

     label08:
        $i1 = $i1 + 1;

        goto label03;

     label09:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $b2 = $d2 cmpl 0.0;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label08;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $i3 = <com.metrictrade.and.ct: int U>;

        $d3 = (double) $i3;

        $b2 = $d2 cmpg $d3;

        $i3 = (int) $b2;

        if $i3 >= 0 goto label08;

        $b2 = $d0 cmpl -1.0;

        if $b2 != 0 goto label08;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d2 = $r1[$i1];

        $b2 = $d2 cmpl $d1;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label08;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d1 = $r1[$i1];

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $i3 = $i0 + 28;

        $d2 = (double) $i1;

        $r1[$i3] = $d2;

        goto label08;

     label10:
        return;
    }

    public final char[] n()
    {
        char[] r1;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        r1 = <com.metrictrade.and.fr: char[] aR>;

        return r1;
    }

    public final double[] o(int)
    {
        com.metrictrade.and.fr r0;
        int $i0;
        double[] r1;
        boolean $z0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 := @parameter0: int;

        $z0 = <com.metrictrade.and.fr: boolean B>;

        if $z0 == 0 goto label08;

        lookupswitch($i0)
        {
            case 0: goto label02;
            case 1: goto label02;
            case 2: goto label01;
            case 3: goto label03;
            case 4: goto label03;
            case 5: goto label01;
            case 6: goto label04;
            case 7: goto label05;
            case 8: goto label06;
            case 9: goto label07;
            default: goto label01;
        };

     label01:
        return null;

     label02:
        r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        return r1;

     label03:
        r1 = r0.<com.metrictrade.and.fr: double[] F>;

        return r1;

     label04:
        r1 = r0.<com.metrictrade.and.fr: double[] C>;

        return r1;

     label05:
        r1 = r0.<com.metrictrade.and.fr: double[] at>;

        return r1;

     label06:
        r1 = r0.<com.metrictrade.and.fr: double[] D>;

        return r1;

     label07:
        r1 = r0.<com.metrictrade.and.fr: double[] ac>;

        return r1;

     label08:
        lookupswitch($i0)
        {
            case 0: goto label10;
            case 1: goto label10;
            case 2: goto label01;
            case 3: goto label11;
            case 4: goto label11;
            case 5: goto label09;
            case 6: goto label12;
            case 7: goto label13;
            case 8: goto label14;
            case 9: goto label15;
            default: goto label09;
        };

     label09:
        return null;

     label10:
        r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        return r1;

     label11:
        r1 = r0.<com.metrictrade.and.fr: double[] F>;

        return r1;

     label12:
        r1 = r0.<com.metrictrade.and.fr: double[] C>;

        return r1;

     label13:
        r1 = r0.<com.metrictrade.and.fr: double[] at>;

        return r1;

     label14:
        r1 = r0.<com.metrictrade.and.fr: double[] D>;

        return r1;

     label15:
        r1 = r0.<com.metrictrade.and.fr: double[] ac>;

        return r1;
    }

    public final java.lang.String p()
    {
        com.metrictrade.and.ap $r2;
        com.metrictrade.and.fr r0;
        int $i0;
        java.lang.Object $r1;
        java.lang.String $r3;

        r0 := @this: com.metrictrade.and.fr;

        $i0 = r0.<com.metrictrade.and.fr: int S>;

        if $i0 == 0 goto label1;

        $r2 = <com.metrictrade.and.ct: com.metrictrade.and.ap h>;

        $i0 = r0.<com.metrictrade.and.fr: int S>;

        $r1 = virtualinvoke $r2.<com.metrictrade.and.ap: java.lang.Object a(int)>($i0);

        $r3 = (java.lang.String) $r1;

        return $r3;

     label1:
        return null;
    }

    public final java.lang.String q()
    {
        byte $b1;
        com.metrictrade.and.fr r0;
        double[] $r2;
        int $i0;
        java.lang.String[] $r3;
        java.lang.String $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $r2 = r0.<com.metrictrade.and.fr: double[] C>;

        $i0 = <com.metrictrade.and.fr: int aG>;

        $d0 = $r2[$i0];

        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label1;

        $b1 = $d0 cmpl 0.0;

        if $b1 == 0 goto label1;

        $i0 = (int) $d0;

        $r1 = staticinvoke <com.metrictrade.and.fj: java.lang.String a(int)>($i0);

        return $r1;

     label1:
        $r3 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $i0 = <com.metrictrade.and.fr: int aG>;

        $r1 = $r3[$i0];

        return $r1;
    }

    public final java.lang.String r()
    {
        com.metrictrade.and.fr r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $i0 = <com.metrictrade.and.fr: int aE>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final java.lang.String s()
    {
        com.metrictrade.and.fr r0;
        int $i0;
        java.lang.String[] $r1;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: java.lang.String[] e>;

        $i0 = <com.metrictrade.and.fr: int aD>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public final void t()
    {
        double[] $r1, $r2, $r6, $r7;
        byte $b1;
        int $i0, $i2, $i3, $i4;
        java.lang.String $r4;
        double $d0, $d1, $d2, $d3, $d4, $d5, $d6, $d7;
        boolean $z0, $z1;
        com.metrictrade.and.fr r0, $r3;
        double[][] $r5;

        r0 := @this: com.metrictrade.and.fr;

        $d0 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

        $d1 = virtualinvoke r0.<com.metrictrade.and.fr: double l()>();

        $i0 = r0.<com.metrictrade.and.fr: int ag>;

        if $i0 < 3 goto label66;

        $d2 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

     label01:
        $b1 = $d0 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label34;

        $b1 = $d1 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label34;

        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label34;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[6];

        $b1 = $d3 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 > 0 goto label02;

        $b1 = $d0 cmpl $d1;

        if $b1 == 0 goto label33;

     label02:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $d0 - $d1;

        $r1[9] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[9];

        $d3 = 100.0 * $d3;

        $r1[11] = $d3;

     label03:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[9];

        $d3 = $d3 / $d1;

        $r1[8] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[4];

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r2[5];

        $d3 = $d3 - $d4;

        $d3 = $d3 / $d1;

        $r1[10] = $d3;

     label04:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[30];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b1 = $d2 cmpl 0.0;

        if $b1 == 0 goto label35;

        $b1 = $d3 cmpl 0.0;

        if $b1 == 0 goto label35;

        $b1 = $d3 cmpl $d3;

        if $b1 != 0 goto label35;

        $d4 = $d3 - $d2;

        $d4 = $d4 / $d2;

     label05:
        $r1[32] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $b1 = $d3 cmpl 0.0;

        if $b1 != 0 goto label36;

        $d3 = 0.0;

     label06:
        $r1[5] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[33];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $b1 = $d2 cmpl 0.0;

        if $b1 == 0 goto label37;

        $b1 = $d3 cmpl 0.0;

        if $b1 == 0 goto label37;

        $b1 = $d3 cmpl $d3;

        if $b1 != 0 goto label37;

        $d4 = $d3 - $d2;

        $d4 = $d4 / $d2;

     label07:
        $r1[35] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $b1 = $d3 cmpl 0.0;

        if $b1 != 0 goto label38;

        $d2 = 0.0;

     label08:
        $r1[6] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r1[20];

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d3 = $r1[1];

        $b1 = $d2 cmpl $d3;

        if $b1 == 0 goto label10;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d2 = $r2[1];

        $b1 = $d2 cmpl 0.0;

        if $b1 != 0 goto label39;

        $d2 = 0.0;

     label09:
        $r1[3] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[20];

        $r1[1] = $d2;

     label10:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r1[22];

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d3 = $r1[0];

        $b1 = $d2 cmpl $d3;

        if $b1 == 0 goto label12;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d2 = $r2[0];

        $b1 = $d2 cmpl 0.0;

        if $b1 != 0 goto label40;

        $d2 = 0.0;

     label11:
        $r1[4] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] ab>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[22];

        $r1[0] = $d2;

     label12:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[25];

        $b1 = $d2 cmpg 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label13;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[26];

        $b1 = $d2 cmpg 0.0;

        $i0 = (int) $b1;

        if $i0 > 0 goto label41;

     label13:
        $d2 = #NaN;

     label14:
        $r1[29] = $d2;

        $r3 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        if $r3 == null goto label65;

        $b1 = $d0 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label65;

        $r3 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        $d3 = virtualinvoke $r3.<com.metrictrade.and.fr: double k()>();

        $b1 = $d3 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label65;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d4 = $r1[40];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r1[22];

        $b1 = $d2 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label64;

     label15:
        $i0 = r0.<com.metrictrade.and.fr: int S>;

        if $i0 != 67 goto label42;

        $b1 = $d4 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label42;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $d4 + $d2;

        $d0 = $d0 - $d3;

        $d0 = $d0 / $d3;

        $r1[41] = $d0;

     label16:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r1[6];

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[8];

        $r4 = r0.<com.metrictrade.and.fr: java.lang.String b>;

        $i0 = virtualinvoke $r4.<java.lang.String: int indexOf(java.lang.String)>("$$");

        if $i0 != 0 goto label43;

        $z0 = 1;

     label17:
        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r5[8];

        if $r1 == null goto label19;

        $i0 = 0;

     label18:
        if $i0 < 8 goto label44;

     label19:
        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $b1 = $d3 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label58;

        $b1 = $d0 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label58;

        $b1 = $d0 cmpl $d0;

        if $b1 != 0 goto label58;

        $d3 = $d3 / $d0;

     label20:
        $r1[26] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $b1 = $d1 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label59;

        $b1 = $d1 cmpl $d1;

        if $b1 != 0 goto label59;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[4];

        $b1 = $d3 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label59;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[4];

        $d3 = $d3 - $d1;

        $d3 = $d3 / $d1;

     label21:
        $r1[38] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $b1 = $d1 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label60;

        $b1 = $d1 cmpl $d1;

        if $b1 != 0 goto label60;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[5];

        $b1 = $d3 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label60;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[5];

        $d3 = $d3 - $d1;

        $d1 = $d3 / $d1;

     label22:
        $r1[39] = $d1;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d3 = $r1[3];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d4 = $r1[4];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d1 = $r1[2];

        $b1 = $d3 cmpl 0.0;

        if $b1 == 0 goto label24;

        $b1 = $d3 cmpl $d3;

        if $b1 != 0 goto label24;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $r2 = r0.<com.metrictrade.and.fr: double[] at>;

        $d5 = $r2[5];

        $d5 = $d5 / $d3;

        $r1[33] = $d5;

        $i0 = 0;

     label23:
        if $i0 < 3 goto label61;

     label24:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d5 = $r1[19];

        $b1 = $d5 cmpl $d5;

        if $b1 != 0 goto label25;

        $b1 = $d5 cmpl 0.0;

        if $b1 != 0 goto label26;

     label25:
        $d5 = 1.0;

     label26:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d6 = $r1[20];

        $b1 = $d6 cmpl $d6;

        if $b1 != 0 goto label27;

        $b1 = $d6 cmpl 0.0;

        if $b1 != 0 goto label28;

     label27:
        $d6 = 1.0;

     label28:
        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d7 = $r1[13];

        $b1 = $d7 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label29;

        $b1 = $d2 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label29;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $r2 = r0.<com.metrictrade.and.fr: double[] C>;

        $d7 = $r2[13];

        $d6 = $d6 * $d7;

        $d6 = $d6 / $d2;

        $r1[32] = $d6;

     label29:
        $b1 = $d0 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label67;

        $d5 = $d5 * $d0;

        $d2 = $d2 * $d5;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $i0 = <com.metrictrade.and.fr: int aC>;

        $r1[$i0] = $d2;

        $b1 = $d4 cmpl $d4;

        if $b1 != 0 goto label30;

        $b1 = $d4 cmpl 0.0;

        if $b1 == 0 goto label30;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $d4 / $d0;

        $r1[25] = $d0;

        $b1 = $d4 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label30;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $d2 / $d4;

        $r1[26] = $d0;

     label30:
        $b1 = $d1 cmpl $d1;

        if $b1 != 0 goto label31;

        $b1 = $d1 cmpl 0.0;

        if $b1 == 0 goto label31;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $d2 / $d1;

        $r1[30] = $d0;

     label31:
        $b1 = $d3 cmpl $d3;

        if $b1 != 0 goto label32;

        $b1 = $d3 cmpl 0.0;

        if $b1 == 0 goto label32;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $d2 / $d3;

        $r1[27] = $d0;

     label32:
        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $r1[1];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d3 = $r1[1];

        $b1 = $d0 cmpl $d3;

        if $b1 != 0 goto label67;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $r1[1];

        $b1 = $d0 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label67;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $r2 = r0.<com.metrictrade.and.fr: double[] at>;

        $d0 = $r2[1];

        $d2 = $d2 / $d0;

        $r1[28] = $d2;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $r2 = r0.<com.metrictrade.and.fr: double[] at>;

        $d2 = $r2[1];

        $d1 = $d1 / $d2;

        $r1[29] = $d1;

        return;

     label33:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = (double) 9221120237041090560L;

        $r1[9] = $d3;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = (double) 0L;

        $r1[11] = $d3;

        goto label03;

     label34:
        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r6 = r0.<com.metrictrade.and.fr: double[] Z>;

        $r7 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = (double) 9221120237041090560L;

        $r7[10] = $d3;

        $r6[11] = #NaN;

        $r2[8] = #NaN;

        $r1[9] = #NaN;

        goto label04;

     label35:
        $d4 = #NaN;

        goto label05;

     label36:
        $d3 = $d3 - $d2;

        goto label06;

     label37:
        $d4 = #NaN;

        goto label07;

     label38:
        $d2 = $d3 - $d2;

        goto label08;

     label39:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[20];

        $r2 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d3 = $r2[1];

        $d2 = $d2 - $d3;

        goto label09;

     label40:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[22];

        $r2 = r0.<com.metrictrade.and.fr: double[] ab>;

        $d3 = $r2[0];

        $d2 = $d2 - $d3;

        goto label11;

     label41:
        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d2 = $r2[25];

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[26];

        $d2 = $d2 - $d3;

        $r2 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d3 = $r2[26];

        $d2 = $d2 / $d3;

        goto label14;

     label42:
        $i0 = r0.<com.metrictrade.and.fr: int S>;

        if $i0 != 80 goto label16;

        $b1 = $d4 cmpl 0.0;

        $i0 = (int) $b1;

        if $i0 <= 0 goto label16;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $d4 - $d2;

        $d0 = $d0 - $d3;

        $d0 = $d0 / $d3;

        $r1[41] = $d0;

        goto label16;

     label43:
        $z0 = 0;

        goto label17;

     label44:
        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r5[0];

        $d4 = $r1[$i0];

        $i2 = (int) $d4;

        $i2 = staticinvoke <com.metrictrade.and.fr: int q(int)>($i2);

        if $i2 < 0 goto label52;

        if $i2 >= 6 goto label46;

        if $z0 != 0 goto label46;

        $z1 = staticinvoke <com.metrictrade.and.fr: boolean a(double)>($d2);

        if $z1 == 0 goto label45;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r1 = $r5[1];

        $d4 = $r1[$i0];

        $z1 = staticinvoke <com.metrictrade.and.fr: boolean a(double)>($d4);

        if $z1 != 0 goto label53;

     label45:
        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $i4 = <com.metrictrade.and.fr: int aS>;

        $r2 = $r5[$i4];

        $r2[$i0] = #NaN;

        $r1[$i2] = #NaN;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $i3 = $i2 + 16;

        $r1[$i3] = #NaN;

     label46:
        if $i2 != 4 goto label47;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[2];

        $d4 = $r2[$i0];

        $r1[6] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[3];

        $d4 = $r2[$i0];

        $r1[7] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[2];

        $d4 = $r2[$i0];

        $r1[6] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[6];

        $d4 = $r2[$i0];

        $r1[8] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[7];

        $d4 = $r2[$i0];

        $r1[9] = $d4;

     label47:
        if $i2 > 6 goto label52;

        if $i2 != 6 goto label54;

        $i2 = 1;

     label48:
        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $i3 = $i2 + 26;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[4];

        $d4 = $r2[$i0];

        $b1 = $d4 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label55;

        $b1 = $d3 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label55;

        $b1 = $d3 cmpl $d3;

        if $b1 != 0 goto label55;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[4];

        $d4 = $r2[$i0];

        $d4 = $d3 / $d4;

     label49:
        $r1[$i3] = $d4;

        $i2 = $i2 << 1;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $i3 = $i2 + 38;

        $b1 = $d2 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label56;

        $b1 = $d2 cmpl $d2;

        if $b1 != 0 goto label56;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[2];

        $d4 = $r2[$i0];

        $b1 = $d4 cmpl 0.0;

        $i4 = (int) $b1;

        if $i4 <= 0 goto label56;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[2];

        $d4 = $r2[$i0];

        $d4 = $d2 - $d4;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[2];

        $d5 = $r2[$i0];

        $d4 = $d4 / $d5;

     label50:
        $r1[$i3] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $i2 = $i2 + 38;

        $i2 = $i2 + 1;

        $b1 = $d2 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label57;

        $b1 = $d2 cmpl $d2;

        if $b1 != 0 goto label57;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[3];

        $d4 = $r2[$i0];

        $b1 = $d4 cmpl 0.0;

        $i3 = (int) $b1;

        if $i3 <= 0 goto label57;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[3];

        $d4 = $r2[$i0];

        $d4 = $d2 - $d4;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[3];

        $d5 = $r2[$i0];

        $d4 = $d4 / $d5;

     label51:
        $r1[$i2] = $d4;

     label52:
        $i0 = $i0 + 1;

        goto label18;

     label53:
        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $i4 = <com.metrictrade.and.fr: int aS>;

        $r2 = $r5[$i4];

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r6 = $r5[1];

        $d4 = $r6[$i0];

        $d4 = $d2 - $d4;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r6 = $r5[1];

        $d5 = $r6[$i0];

        $d4 = $d4 / $d5;

        $r2[$i0] = $d4;

        $r1[$i2] = $d4;

        $r1 = r0.<com.metrictrade.and.fr: double[] F>;

        $i3 = $i2 + 16;

        $r5 = r0.<com.metrictrade.and.fr: double[][] E>;

        $r2 = $r5[4];

        $d4 = $r2[$i0];

        $r1[$i3] = $d4;

        goto label46;

     label54:
        $i2 = $i2 + 2;

        goto label48;

     label55:
        $d4 = #NaN;

        goto label49;

     label56:
        $d4 = #NaN;

        goto label50;

     label57:
        $d4 = #NaN;

        goto label51;

     label58:
        $d3 = #NaN;

        goto label20;

     label59:
        $d3 = #NaN;

        goto label21;

     label60:
        $d1 = #NaN;

        goto label22;

     label61:
        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $i2 = $i0 + 6;

        $d5 = $r1[$i2];

        $b1 = $d5 cmpl -1.0;

        if $b1 == 0 goto label63;

        $b1 = $d5 cmpl $d5;

        if $b1 != 0 goto label63;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $i2 = $i0 + 9;

        $d6 = $r1[$i2];

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $i2 = $i0 + 9;

        $d7 = $r1[$i2];

        $b1 = $d6 cmpl $d7;

        if $b1 != 0 goto label63;

        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $i2 = $i0 + 18;

        $r2 = r0.<com.metrictrade.and.fr: double[] at>;

        $i3 = $i0 + 9;

        $d6 = $r2[$i3];

        $d6 = 1.0 + $d6;

        $d5 = $d5 + 1.0;

        $d5 = $d6 / $d5;

        $d5 = $d5 - 1.0;

        $r1[$i2] = $d5;

     label62:
        $i0 = $i0 + 1;

        goto label23;

     label63:
        $r1 = r0.<com.metrictrade.and.fr: double[] at>;

        $i2 = $i0 + 18;

        $r2 = r0.<com.metrictrade.and.fr: double[] at>;

        $i3 = $i0 + 9;

        $d5 = $r2[$i3];

        $r1[$i2] = $d5;

        goto label62;

     label64:
        $d2 = $d0;

        goto label15;

     label65:
        $d2 = $d0;

        goto label16;

     label66:
        $d2 = $d1;

        goto label01;

     label67:
        return;
    }

    public final void u()
    {
        com.metrictrade.and.fr r0;
        double[] $r1;
        int $i0, $i1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: double[] D>;

        $d0 = $r1[26];

        $i0 = (int) $d0;

        $i1 = r0.<com.metrictrade.and.fr: int o>;

        $i1 = $i1 & -97;

        if $i0 <= 1 goto label4;

        if $i0 == 2 goto label1;

        if $i0 != 3 goto label2;

     label1:
        $i1 = $i1 | 64;

     label2:
        if $i0 == 4 goto label3;

        if $i0 != 5 goto label4;

     label3:
        $i1 = $i1 | 32;

     label4:
        r0.<com.metrictrade.and.fr: int o> = $i1;

        return;
    }

    public final double w()
    {
        byte $b0;
        com.metrictrade.and.fr r0;
        double[] $r1;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        if $r1 == null goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[18];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[18];

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d1 = $r1[18];

        $b0 = $d0 cmpl $d1;

        if $b0 != 0 goto label1;

        $r1 = r0.<com.metrictrade.and.fr: double[] C>;

        $d0 = $r1[18];

        return $d0;

     label1:
        return 0.0;
    }

    public final int x()
    {
        int $i0;
        com.metrictrade.and.fr r0;

        r0 := @this: com.metrictrade.and.fr;

        $i0 = r0.<com.metrictrade.and.fr: int S>;

        if $i0 == 73 goto label1;

        $i0 = r0.<com.metrictrade.and.fr: int S>;

        if $i0 != 89 goto label2;

     label1:
        return 1;

     label2:
        return 0;
    }

    public final double y()
    {
        com.metrictrade.and.fr r0, $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        if $r1 == null goto label1;

        r0 = r0.<com.metrictrade.and.fr: com.metrictrade.and.fr au>;

        $d0 = virtualinvoke r0.<com.metrictrade.and.fr: double k()>();

        return $d0;

     label1:
        return 0.0;
    }

    public final double z()
    {
        byte $b0;
        com.metrictrade.and.fr r0;
        double[] $r1;
        double $d0, $d1;

        r0 := @this: com.metrictrade.and.fr;

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d0 = $r1[22];

        $r1 = r0.<com.metrictrade.and.fr: double[] Z>;

        $d1 = $r1[20];

        $b0 = $d0 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b0 = $d0 cmpl $d0;

        if $b0 != 0 goto label1;

        $b0 = $d1 cmpl 0.0;

        if $b0 == 0 goto label1;

        $b0 = $d1 cmpl $d1;

        if $b0 != 0 goto label1;

        $d0 = $d0 + $d1;

        $d0 = $d0 / 2.0;

        return $d0;

     label1:
        return 0.0;
    }
}
