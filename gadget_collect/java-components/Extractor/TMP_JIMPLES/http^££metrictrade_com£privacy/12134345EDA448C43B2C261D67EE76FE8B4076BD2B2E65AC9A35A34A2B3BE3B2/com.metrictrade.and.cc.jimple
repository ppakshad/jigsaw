public final class com.metrictrade.and.cc extends java.lang.Object
{
    static boolean A;
    private static java.lang.String B;
    private static byte[] C;
    private static byte[] D;
    private static int[][] E;
    public static java.lang.String h;
    public static java.lang.String i;
    public static java.lang.String j;
    public static java.lang.String k;
    public static java.lang.String l;
    public static java.lang.String m;
    public static java.lang.String n;
    public static java.lang.String o;
    public static java.lang.String p;
    public static java.lang.String q;
    public static java.lang.String r;
    public static java.lang.String s;
    public static java.lang.String t;
    public static java.lang.String u;
    public static java.lang.String v;
    public static java.lang.String w;
    public static java.lang.String[] x;
    java.lang.String a;
    java.lang.String b;
    java.lang.String c;
    java.lang.String d;
    byte[] e;
    byte[] f;
    int g;
    com.metrictrade.and.da y;
    public java.lang.String z;

    static void <clinit>()
    {
        byte[] $r0;
        com.metrictrade.and.ap $r4;
        com.metrictrade.and.an $r2;
        com.metrictrade.and.ak $r3;
        java.lang.String $r1;

        <com.metrictrade.and.cc: java.lang.String h> = "A";

        <com.metrictrade.and.cc: java.lang.String i> = "5";

        <com.metrictrade.and.cc: java.lang.String B> = "t";

        <com.metrictrade.and.cc: java.lang.String j> = "D";

        <com.metrictrade.and.cc: java.lang.String k> = "F";

        <com.metrictrade.and.cc: java.lang.String l> = "G";

        <com.metrictrade.and.cc: java.lang.String m> = "0";

        <com.metrictrade.and.cc: java.lang.String n> = "1";

        <com.metrictrade.and.cc: java.lang.String o> = "2";

        <com.metrictrade.and.cc: java.lang.String p> = "3";

        <com.metrictrade.and.cc: java.lang.String q> = "B";

        <com.metrictrade.and.cc: java.lang.String r> = "x";

        <com.metrictrade.and.cc: java.lang.String s> = "j";

        <com.metrictrade.and.cc: java.lang.String t> = "t";

        <com.metrictrade.and.cc: java.lang.String u> = "p";

        <com.metrictrade.and.cc: java.lang.String v> = "9";

        <com.metrictrade.and.cc: java.lang.String w> = "8";

        $r1 = "8=FIX.";

        $r0 = virtualinvoke $r1.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.cc: byte[] C> = $r0;

        $r0 = newarray (byte)[4];

        $r0[0] = 1;

        $r0[1] = 49;

        $r0[2] = 48;

        $r0[3] = 61;

        <com.metrictrade.and.cc: byte[] D> = $r0;

        $r2 = new com.metrictrade.and.an;

        specialinvoke $r2.<com.metrictrade.and.an: void <init>()>();

        $r2 = new com.metrictrade.and.an;

        specialinvoke $r2.<com.metrictrade.and.an: void <init>()>();

        $r2 = new com.metrictrade.and.an;

        specialinvoke $r2.<com.metrictrade.and.an: void <init>()>();

        $r3 = new com.metrictrade.and.ak;

        specialinvoke $r3.<com.metrictrade.and.ak: void <init>()>();

        $r3 = new com.metrictrade.and.ak;

        specialinvoke $r3.<com.metrictrade.and.ak: void <init>()>();

        $r2 = new com.metrictrade.and.an;

        specialinvoke $r2.<com.metrictrade.and.an: void <init>()>();

        $r2 = new com.metrictrade.and.an;

        specialinvoke $r2.<com.metrictrade.and.an: void <init>()>();

        $r4 = new com.metrictrade.and.ap;

        specialinvoke $r4.<com.metrictrade.and.ap: void <init>()>();

        return;
    }

    public void <init>()
    {
        com.metrictrade.and.cc r0;

        r0 := @this: com.metrictrade.and.cc;

        specialinvoke r0.<com.metrictrade.and.cc: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, null, null);

        return;
    }

    public void <init>(com.metrictrade.and.cc)
    {
        com.metrictrade.and.cc r0, $r1;
        byte[] $r2, $r3;
        int $i0;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: com.metrictrade.and.cc;

        specialinvoke r0.<com.metrictrade.and.cc: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, null, null);

        $i0 = $r1.<com.metrictrade.and.cc: int g>;

        if $i0 <= 0 goto label1;

        $r2 = $r1.<com.metrictrade.and.cc: byte[] e>;

        $r3 = r0.<com.metrictrade.and.cc: byte[] e>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r3, 0, $i0);

     label1:
        r0.<com.metrictrade.and.cc: int g> = $i0;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.metrictrade.and.cc r0;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: java.lang.String;

        specialinvoke r0.<com.metrictrade.and.cc: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, null, null);

        r0.<com.metrictrade.and.cc: java.lang.String z> = $r1;

        return;
    }

    public void <init>(java.lang.String, java.lang.String, java.lang.String)
    {
        com.metrictrade.and.cc r0;
        byte[] $r5;
        com.metrictrade.and.da $r6;
        java.util.TimeZone $r4;
        java.lang.String $r1, $r2, $r3;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: java.lang.String;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.metrictrade.and.cc: java.lang.String a> = $r2;

        r0.<com.metrictrade.and.cc: java.lang.String b> = $r3;

        r0.<com.metrictrade.and.cc: java.lang.String c> = $r1;

        $r5 = newarray (byte)[4096];

        r0.<com.metrictrade.and.cc: byte[] e> = $r5;

        $r5 = newarray (byte)[4096];

        r0.<com.metrictrade.and.cc: byte[] f> = $r5;

        $r6 = new com.metrictrade.and.da;

        specialinvoke $r6.<com.metrictrade.and.da: void <init>(java.lang.String)>("yyyyMMdd-HH:mm:ss");

        r0.<com.metrictrade.and.cc: com.metrictrade.and.da y> = $r6;

        $r6 = r0.<com.metrictrade.and.cc: com.metrictrade.and.da y>;

        $r4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("GMT");

        virtualinvoke $r6.<com.metrictrade.and.da: void a(java.util.TimeZone)>($r4);

        return;
    }

    public static char a(int, int, char)
    {
        int[][] $r0;
        int[] $r1;
        int $i0, $i1, $i3, $i4;
        char $c2;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $c2 := @parameter2: char;

        $i3 = 0;

     label1:
        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $i4 = lengthof $r0;

        if $i3 < $i4 goto label2;

        return $c2;

     label2:
        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[0];

        if $i4 != $i0 goto label3;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[1];

        if $i4 != $i1 goto label3;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i0 = $r1[2];

        $c2 = (char) $i0;

        return $c2;

     label3:
        $i3 = $i3 + 1;

        goto label1;
    }

    public static char a(int, java.lang.String)
    {
        int[][] $r1;
        char $c2;
        int[] $r2;
        int $i0, $i1, $i3, $i4;
        java.lang.String $r0;

        $i0 := @parameter0: int;

        $r0 := @parameter1: java.lang.String;

        if $r0 == null goto label4;

        $i1 = virtualinvoke $r0.<java.lang.String: int length()>();

        if $i1 <= 0 goto label4;

        $c2 = virtualinvoke $r0.<java.lang.String: char charAt(int)>(0);

        $i1 = 0;

     label1:
        $r1 = <com.metrictrade.and.cc: int[][] E>;

        $i3 = lengthof $r1;

        if $i1 < $i3 goto label2;

        return 0;

     label2:
        $r1 = <com.metrictrade.and.cc: int[][] E>;

        $r2 = $r1[$i1];

        $i3 = $r2[0];

        if $i3 != $i0 goto label3;

        $r1 = <com.metrictrade.and.cc: int[][] E>;

        $r2 = $r1[$i1];

        $i3 = $r2[2];

        $i4 = (int) $c2;

        if $i3 != $i4 goto label3;

        $r1 = <com.metrictrade.and.cc: int[][] E>;

        $r2 = $r1[$i1];

        $i0 = $r2[1];

        $c2 = (char) $i0;

        return $c2;

     label3:
        $i1 = $i1 + 1;

        goto label1;

     label4:
        return 0;
    }

    public static int b(byte[], int, int)
    {
        byte[] $r0;
        short $s4;
        byte $b3;
        int $i0, $i1, $i2, $i5;

        $r0 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i1 < $i0 goto label2;

        $i1 = $i2 + 1;

        $i1 = $i1 % 256;

        return $i1;

     label2:
        $b3 = $r0[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i5 = (int) $s4;

        $i2 = $i2 + $i5;

        $i1 = $i1 + 1;

        goto label1;
    }

    public static void b()
    {
        int[][] $r3;
        int[] $r0;
        java.lang.Class $r1;
        java.lang.Object $r2;

        $r0 = newarray (int)[2];

        $r0[0] = 64;

        $r0[1] = 3;

        $r1 = <java.lang.Integer: java.lang.Class TYPE>;

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int[])>($r1, $r0);

        $r3 = (int[][]) $r2;

        <com.metrictrade.and.cc: int[][] E> = $r3;

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 50, 76);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 52, 83);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 65, 65);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 66, 66);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 122, 85);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 49, 77);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 51, 84);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 53, 81);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 74, 74);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(40, 80, 82);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(18, 112, 82);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(18, 116, 79);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(18, 115, 87);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(18, 82, 71);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 48, 68);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 71, 85);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 49, 80);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 50, 79);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 51, 73);

        staticinvoke <com.metrictrade.and.cc: void b(int,int,int)>(59, 52, 70);

        return;
    }

    private static void b(int, int, int)
    {
        int[][] $r0;
        int[] $r1;
        int $i0, $i1, $i2, $i3, $i4;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        $i3 = 0;

     label1:
        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $i4 = lengthof $r0;

        if $i3 < $i4 goto label2;

        return;

     label2:
        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[0];

        if $i4 != $i0 goto label3;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[1];

        if $i4 != $i1 goto label3;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[2];

        if $i4 == $i2 goto label5;

     label3:
        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $i4 = $r1[0];

        if $i4 != 0 goto label4;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $r1[0] = $i0;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $r1[1] = $i1;

        $r0 = <com.metrictrade.and.cc: int[][] E>;

        $r1 = $r0[$i3];

        $r1[2] = $i2;

        return;

     label4:
        $i3 = $i3 + 1;

        goto label1;

     label5:
        return;
    }

    private static int c(byte[], int, int)
    {
        byte[] $r0;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        if $i0 >= 0 goto label1;

        $r0[$i1] = 46;

        $i0 = neg $i0;

        $i1 = $i1 + 1;

     label1:
        $i2 = 0;

        $i3 = $i0;

     label2:
        if $i3 > 0 goto label5;

        if $i2 != 0 goto label3;

        $i2 = 1;

     label3:
        $i1 = $i1 + $i2;

        $i3 = $i2;

     label4:
        if $i3 > 0 goto label6;

        return $i1;

     label5:
        $i3 = $i3 / 10;

        $i2 = $i2 + 1;

        goto label2;

     label6:
        $i4 = $i1 - $i2;

        $i3 = $i3 + -1;

        $i4 = $i4 + $i3;

        $i5 = $i0 % 10;

        $i5 = $i5 + 48;

        $b6 = (byte) $i5;

        $r0[$i4] = $b6;

        $i0 = $i0 / 10;

        goto label4;
    }

    public static java.lang.String f(int)
    {
        int $i0, $i1;
        java.lang.String[] $r0;
        java.lang.String $r1;

        $i0 := @parameter0: int;

        $r0 = <com.metrictrade.and.cc: java.lang.String[] x>;

        if $r0 == null goto label1;

        if $i0 < 0 goto label1;

        $i1 = lengthof $r0;

        if $i0 >= $i1 goto label1;

        $r1 = $r0[$i0];

        return $r1;

     label1:
        $r0 = <com.metrictrade.and.z: java.lang.String[] aj>;

        $r1 = $r0[10];

        return $r1;
    }

    final int a(int, char, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        byte $b3;
        int $i0, $i2;
        char $c1;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $c1 := @parameter1: char;

        $i2 := @parameter2: int;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i2 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i0, $i2);

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i2 + 1;

        $r1[$i2] = 61;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i2 = $i0 + 1;

        $c1 = $c1 & 255;

        $b3 = (byte) $c1;

        $r1[$i0] = $b3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i2 + 1;

        $r1[$i2] = 1;

        return $i0;

     label1:
        return $i2;
    }

    final int a(int, double, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        long $l3, $l4;
        byte $b2;
        int $i0, $i1, $i5, $i6, $i7, $i8;
        double $d0;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $d0 := @parameter1: double;

        $i1 := @parameter2: int;

        if $i0 < 0 goto label11;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i0, $i1);

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i1 + 1;

        $r1[$i1] = 61;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $b2 = $d0 cmpl $d0;

        if $b2 == 0 goto label10;

        $d0 = 0.0;

     label01:
        $b2 = $d0 cmpg 0.0;

        $i1 = (int) $b2;

        if $i1 >= 0 goto label09;

        $i1 = $i0 + 1;

        $r1[$i0] = 46;

        $d0 = neg $d0;

     label02:
        $d0 = $d0 * 10000.0;

        $d0 = $d0 + 0.5;

        $l3 = (long) $d0;

        $l4 = $l3 / 10000L;

        $i0 = (int) $l4;

        $i5 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i0, $i1);

        $i1 = $i5;

        $l3 = $l3 % 10000L;

        $i6 = (int) $l3;

        if $i6 == 0 goto label06;

        $i0 = 0;

        $i1 = $i6;

     label03:
        if $i1 > 0 goto label07;

        if $i0 >= 4 goto label04;

        $i0 = 4;

     label04:
        $i1 = $i5 + 1;

        $r1[$i5] = 46;

        $i1 = $i1 + $i0;

        $i5 = $i6;

        $i6 = $i0;

     label05:
        if $i6 > 0 goto label08;

     label06:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i1 + 1;

        $r1[$i1] = 1;

        return $i0;

     label07:
        $i1 = $i1 / 10;

        $i0 = $i0 + 1;

        goto label03;

     label08:
        $i7 = $i1 - $i0;

        $i6 = $i6 + -1;

        $i7 = $i7 + $i6;

        $i8 = $i5 % 10;

        $i8 = $i8 + 48;

        $b2 = (byte) $i8;

        $r1[$i7] = $b2;

        $i5 = $i5 / 10;

        goto label05;

     label09:
        $i1 = $i0;

        goto label02;

     label10:
        goto label01;

     label11:
        return $i1;
    }

    final int a(int, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1, $r2;
        byte $b3;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.cc;

        $i1 := @parameter0: int;

        $i0 := @parameter1: int;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        return $i1;

     label2:
        $r1 = r0.<com.metrictrade.and.cc: byte[] f>;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $b3 = $r2[$i2];

        $r1[$i1] = $b3;

        $i2 = $i2 + 1;

        $i1 = $i1 + 1;

        goto label1;
    }

    final int a(int, int, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $i2 := @parameter2: int;

        if $i0 < 0 goto label1;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i0, $i2);

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i2 = $i0 + 1;

        $r1[$i0] = 61;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i1, $i2);

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = $i0 + 1;

        $r1[$i0] = 1;

        return $i1;

     label1:
        return $i2;
    }

    final int a(int, int, int, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i2 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 := @parameter3: int;

        if $i0 < 0 goto label8;

        $r1 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i1 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r1, $i0, $i1);

        $r1 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i0 = $i1 + 1;

        $r1[$i1] = 61;

        $r1 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i4 = 0;

        $i1 = $i2;

     label1:
        if $i1 > 0 goto label5;

        if $i4 != 0 goto label2;

        $i4 = 1;

     label2:
        if $i4 >= $i3 goto label7;

     label3:
        $i0 = $i0 + $i3;

        $i1 = $i3;

     label4:
        if $i1 > 0 goto label6;

        $r1 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i2 = $i0 + 1;

        $r1[$i0] = 1;

        return $i2;

     label5:
        $i1 = $i1 / 10;

        $i4 = $i4 + 1;

        goto label1;

     label6:
        $i4 = $i0 - $i3;

        $i1 = $i1 + -1;

        $i4 = $i4 + $i1;

        $i5 = $i2 % 10;

        $i5 = $i5 + 48;

        $b6 = (byte) $i5;

        $r1[$i4] = $b6;

        $i2 = $i2 / 10;

        goto label4;

     label7:
        $i3 = $i4;

        goto label3;

     label8:
        return $i1;
    }

    final int a(int, java.lang.String, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r2;
        char $c3;
        byte $b4;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.String;

        $i1 := @parameter2: int;

        $i2 = 0;

        if $i0 < 0 goto label4;

        if $r1 == null goto label4;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r2, $i0, $i1);

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i1 + 1;

        $r2[$i1] = 61;

        if $r1 != null goto label2;

        $i1 = 0;

     label1:
        if $i2 < $i1 goto label3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = $i0 + 1;

        $r2[$i0] = 1;

        return $i1;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        goto label1;

     label3:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i2);

        $b4 = (byte) $c3;

        $r2[$i0] = $b4;

        $i2 = $i2 + 1;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        return $i1;
    }

    public final int a(java.io.OutputStream, java.lang.String, java.lang.String, java.lang.String, java.lang.String, int)
    {
        java.io.OutputStream $r1;
        com.metrictrade.and.cc r0;
        byte[] $r8;
        com.metrictrade.and.da $r7;
        long $l2;
        int $i0, $i1;
        java.lang.String $r2, $r3, $r4, $r5, $r6;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: java.lang.String;

        $r3 := @parameter2: java.lang.String;

        $r4 := @parameter3: java.lang.String;

        $r5 := @parameter4: java.lang.String;

        $i0 := @parameter5: int;

        $r6 = <com.metrictrade.and.cc: java.lang.String B>;

        $i1 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(35, $r6, 0);

        $r6 = r0.<com.metrictrade.and.cc: java.lang.String b>;

        $i1 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(56, $r6, $i1);

        $i1 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(49, $r2, $i1);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int,int)>(34, $i0, $i1);

        $r7 = r0.<com.metrictrade.and.cc: com.metrictrade.and.da y>;

        $l2 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        $r2 = virtualinvoke $r7.<com.metrictrade.and.da: java.lang.String a(long)>($l2);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(52, $r2, $i0);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(1, $r3, $i0);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int,int)>(10009, 0, $i0);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(10056, $r4, $i0);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(10023, "Y", $i0);

        if $r5 != null goto label2;

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int,int)>(17, 1, $i0);

     label1:
        $r2 = r0.<com.metrictrade.and.cc: java.lang.String a>;

        $i1 = virtualinvoke r0.<com.metrictrade.and.cc: int b(java.lang.String)>($r2);

        $i1 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int,int,int)>(9, $i0, $i1, 0);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int)>($i1, $i0);

        $r8 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i1 = $i0 + -1;

        $i1 = staticinvoke <com.metrictrade.and.cc: int b(byte[],int,int)>($r8, 0, $i1);

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,int,int,int)>(10, $i1, $i0, 3);

        $r8 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i1 = $i0 + 1;

        $r8[$i0] = 10;

        r0.<com.metrictrade.and.cc: int g> = $i1;

        $r8 = r0.<com.metrictrade.and.cc: byte[] f>;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r8, 0, $i1);

        virtualinvoke $r1.<java.io.OutputStream: void flush()>();

        return $i1;

     label2:
        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(int,java.lang.String,int)>(17, $r5, $i0);

        goto label1;
    }

    public final int a(java.lang.String)
    {
        com.metrictrade.and.cc r0;
        byte[] $r2;
        char $c3;
        byte $b5;
        int $i0, $i1, $i2, $i4;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: java.lang.String;

        r0.<com.metrictrade.and.cc: int g> = 0;

        if $r1 != null goto label01;

        return -1;

     label01:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        $i1 = 0;

        $i2 = 0;

     label02:
        if $i1 < $i0 goto label03;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = virtualinvoke r0.<com.metrictrade.and.cc: int a(byte[],int,int)>($r2, 0, $i2);

        if $i0 <= 0 goto label14;

        r0.<com.metrictrade.and.cc: java.lang.String d> = $r1;

        return $i0;

     label03:
        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i1);

        $i4 = (int) $c3;

        if $i4 != 94 goto label12;

        $i4 = $i1 + 1;

        if $i4 >= $i0 goto label12;

        $i4 = $i1 + 1;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i4);

        $i4 = (int) $c3;

        lookupswitch($i4)
        {
            case 49: goto label07;
            case 94: goto label08;
            case 101: goto label09;
            case 110: goto label10;
            case 114: goto label11;
            default: goto label04;
        };

     label04:
        $b5 = 0;

     label05:
        if $b5 == 0 goto label13;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i4 = $i2 + 1;

        $r2[$i2] = $b5;

        $i1 = $i1 + 1;

     label06:
        $i1 = $i1 + 1;

        $i2 = $i4;

        goto label02;

     label07:
        $b5 = 1;

        goto label05;

     label08:
        $b5 = 94;

        goto label05;

     label09:
        $b5 = 61;

        goto label05;

     label10:
        $b5 = 10;

        goto label05;

     label11:
        $b5 = 13;

        goto label05;

     label12:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i4 = $i2 + 1;

        $b5 = (byte) $c3;

        $r2[$i2] = $b5;

        goto label06;

     label13:
        $i4 = $i2;

        goto label06;

     label14:
        return $i0;
    }

    public final int a(byte[], int, int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1, $r2;
        byte $b5;
        int $i0, $i1, $i2, $i3, $i4, $i6;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: byte[];

        $i1 := @parameter1: int;

        $i0 := @parameter2: int;

        $i2 = -1;

        r0.<com.metrictrade.and.cc: int g> = 0;

        $r2 = <com.metrictrade.and.cc: byte[] C>;

        $i3 = staticinvoke <com.metrictrade.and.fj: int a(byte[],byte[],int,int)>($r2, $r1, 0, $i0);

        if $i3 <= 0 goto label1;

        $i1 = $i3;

     label1:
        $r2 = <com.metrictrade.and.cc: byte[] D>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int a(byte[],byte[],int,int)>($r2, $r1, $i1, $i0);

        if $i1 >= 0 goto label2;

        return -1;

     label2:
        if $i3 < 0 goto label3;

        $i2 = staticinvoke <com.metrictrade.and.cc: int b(byte[],int,int)>($r1, $i3, $i1);

     label3:
        $r2 = <com.metrictrade.and.cc: byte[] D>;

        $i4 = lengthof $r2;

        $i1 = $i1 + $i4;

        $i4 = staticinvoke <com.metrictrade.and.fj: int a(byte[],int,int)>($r1, $i1, $i0);

        if $i4 != $i2 goto label7;

     label4:
        if $i1 < $i0 goto label8;

     label5:
        if $i3 < 0 goto label7;

        if $i4 != $i2 goto label7;

        $i0 = $i1 - $i3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i2 = lengthof $r2;

        if $i0 <= $i2 goto label6;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = lengthof $r2;

     label6:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i3, $r2, 0, $i0);

        r0.<com.metrictrade.and.cc: int g> = $i0;

     label7:
        return $i1;

     label8:
        $b5 = $r1[$i1];

        $i6 = (int) $b5;

        if $i6 == 45 goto label9;

        $b5 = $r1[$i1];

        $i6 = (int) $b5;

        if $i6 < 48 goto label5;

        $b5 = $r1[$i1];

        $i6 = (int) $b5;

        if $i6 > 57 goto label5;

     label9:
        $i1 = $i1 + 1;

        goto label4;
    }

    public final java.lang.String a()
    {
        com.metrictrade.and.cc r0;
        byte[] $r3;
        char $c3;
        byte $b2;
        com.metrictrade.and.am $r1, $r4;
        int $i0, $i1;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 = r0.<com.metrictrade.and.cc: int g>;

        if $i0 != 0 goto label1;

        return null;

     label1:
        $r4 = new com.metrictrade.and.am;

        $r1 = $r4;

        specialinvoke $r4.<com.metrictrade.and.am: void <init>()>();

        $i0 = 0;

     label2:
        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i0 < $i1 goto label3;

        $r2 = virtualinvoke $r1.<com.metrictrade.and.am: java.lang.String toString()>();

        r0.<com.metrictrade.and.cc: java.lang.String d> = $r2;

        $r2 = r0.<com.metrictrade.and.cc: java.lang.String d>;

        return $r2;

     label3:
        $r3 = r0.<com.metrictrade.and.cc: byte[] e>;

        $b2 = $r3[$i0];

        if $b2 != 1 goto label5;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        virtualinvoke $r4.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(49);

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $i1 = (int) $b2;

        if $i1 != 94 goto label6;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        virtualinvoke $r4.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        goto label4;

     label6:
        $i1 = (int) $b2;

        if $i1 != 61 goto label7;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        virtualinvoke $r4.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(101);

        goto label4;

     label7:
        $i1 = (int) $b2;

        if $i1 != 10 goto label8;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        virtualinvoke $r4.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(110);

        goto label4;

     label8:
        $i1 = (int) $b2;

        if $i1 != 13 goto label9;

        $r4 = virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(94);

        virtualinvoke $r4.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>(114);

        goto label4;

     label9:
        $c3 = (char) $b2;

        virtualinvoke $r1.<com.metrictrade.and.am: com.metrictrade.and.am a(char)>($c3);

        goto label4;
    }

    public final java.lang.String a(int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r1, 0, $i1);

        if $i0 < 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i0 goto label3;

        $r2 = new java.lang.String;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = $i2 - $i0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int)>($r1, $i0, $i1);

        return $r2;

     label3:
        return null;
    }

    public final java.lang.String a(int, com.metrictrade.and.cc)
    {
        com.metrictrade.and.cc r0, $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        java.lang.String $r3;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.cc;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return null;

     label1:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r2, 0, $i1);

        if $i1 < 0 goto label3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r2, $i1, $i0);

        $i2 = $i0;

        if $i0 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i1 goto label4;

        $r3 = new java.lang.String;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = $i2 - $i1;

        specialinvoke $r3.<java.lang.String: void <init>(byte[],int,int)>($r2, $i1, $i0);

        return $r3;

     label3:
        if $r1 == null goto label4;

        $r3 = virtualinvoke $r1.<com.metrictrade.and.cc: java.lang.String a(int)>($i0);

        return $r3;

     label4:
        return null;
    }

    public final char b(int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        char $c5;
        short $s4;
        byte $b3;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r1, 0, $i1);

        if $i0 < 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $b3 = $r1[$i0];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $c5 = (char) $s4;

        return $c5;

     label3:
        return 0;
    }

    public final char b(int, com.metrictrade.and.cc)
    {
        com.metrictrade.and.cc r0, $r1;
        byte[] $r2;
        char $c5;
        short $s4;
        byte $b3;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.cc;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return 0;

     label1:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r2, 0, $i1);

        if $i1 < 0 goto label3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r2, $i1, $i0);

        $i2 = $i0;

        if $i0 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i1 goto label4;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $b3 = $r2[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $c5 = (char) $s4;

        return $c5;

     label3:
        if $r1 == null goto label4;

        $c5 = virtualinvoke $r1.<com.metrictrade.and.cc: char b(int)>($i0);

        return $c5;

     label4:
        return 0;
    }

    final int b(java.lang.String)
    {
        com.metrictrade.and.cc r0;
        byte[] $r2;
        char $c3;
        byte $b4;
        int $i0, $i1, $i2;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.cc;

        $r1 := @parameter0: java.lang.String;

        $i0 = 0;

        $r2 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i1 = staticinvoke <com.metrictrade.and.cc: int c(byte[],int,int)>($r2, 8, 0);

        $r2 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i2 = $i1 + 1;

        $r2[$i1] = 61;

        if $r1 != null goto label2;

        $i1 = 0;

     label1:
        if $i0 < $i1 goto label3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] f>;

        $i0 = $i2 + 1;

        $r2[$i2] = 1;

        return $i0;

     label2:
        $i1 = virtualinvoke $r1.<java.lang.String: int length()>();

        goto label1;

     label3:
        $r2 = r0.<com.metrictrade.and.cc: byte[] f>;

        $c3 = virtualinvoke $r1.<java.lang.String: char charAt(int)>($i0);

        $b4 = (byte) $c3;

        $r2[$i2] = $b4;

        $i0 = $i0 + 1;

        $i2 = $i2 + 1;

        goto label1;
    }

    public final double c(int, com.metrictrade.and.cc)
    {
        com.metrictrade.and.cc r0, $r1;
        byte[] $r2;
        int $i0, $i1, $i2;
        double $d0;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $r1 := @parameter1: com.metrictrade.and.cc;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return -1.0;

     label1:
        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r2, 0, $i1);

        if $i1 < 0 goto label3;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r2, $i1, $i0);

        $i2 = $i0;

        if $i0 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i1 goto label4;

        $r2 = r0.<com.metrictrade.and.cc: byte[] e>;

        $d0 = staticinvoke <com.metrictrade.and.fj: double b(byte[],int,int)>($r2, $i1, $i2);

        return $d0;

     label3:
        if $r1 == null goto label4;

        $d0 = virtualinvoke $r1.<com.metrictrade.and.cc: double d(int)>($i0);

        return $d0;

     label4:
        return #NaN;
    }

    public final int c(int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return -1;

     label1:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r1, 0, $i1);

        if $i0 < 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i0 goto label4;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(byte[],int,int)>($r1, $i0, $i2);

        return $i0;

     label3:
        return -1;

     label4:
        return -1;
    }

    public final double d(int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        int $i0, $i1, $i2;
        double $d0;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return -1.0;

     label1:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r1, 0, $i1);

        if $i0 < 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $d0 = staticinvoke <com.metrictrade.and.fj: double b(byte[],int,int)>($r1, $i0, $i2);

        return $d0;

     label3:
        return #NaN;
    }

    public final double e(int)
    {
        com.metrictrade.and.cc r0;
        byte[] $r1;
        java.util.Calendar $r3;
        int $i0, $i1, $i2;
        java.lang.String $r2;
        double $d0;

        r0 := @this: com.metrictrade.and.cc;

        $i0 := @parameter0: int;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        if $i1 != 0 goto label1;

        return 0.0;

     label1:
        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i0 = staticinvoke <com.metrictrade.and.fj: int a(int,byte[],int,int)>($i0, $r1, 0, $i1);

        if $i0 < 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = r0.<com.metrictrade.and.cc: int g>;

        $i1 = staticinvoke <com.metrictrade.and.fj: int c(byte[],int,int)>($r1, $i0, $i1);

        $i2 = $i1;

        if $i1 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.cc: int g>;

     label2:
        if $i2 <= $i0 goto label3;

        $r2 = new java.lang.String;

        $r1 = r0.<com.metrictrade.and.cc: byte[] e>;

        $i1 = $i2 - $i0;

        specialinvoke $r2.<java.lang.String: void <init>(byte[],int,int)>($r1, $i0, $i1);

        $i0 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i0 <= 8 goto label3;

        $r3 = staticinvoke <com.metrictrade.and.fj: java.util.Calendar d()>();

        staticinvoke <com.metrictrade.and.da: long a(java.lang.String,java.util.Calendar)>($r2, $r3);

        $d0 = staticinvoke <com.metrictrade.and.fj: double a(java.util.Calendar)>($r3);

        return $d0;

     label3:
        return 0.0;
    }

    public final boolean equals(java.lang.Object)
    {
        com.metrictrade.and.cc r0, $r3;
        java.lang.Object $r2;
        java.lang.String $r1, $r4;
        boolean $z0;

        r0 := @this: com.metrictrade.and.cc;

        $r2 := @parameter0: java.lang.Object;

        if $r2 == null goto label2;

        if $r2 != r0 goto label1;

        return 1;

     label1:
        $z0 = $r2 instanceof com.metrictrade.and.cc;

        if $z0 == 0 goto label2;

        $r3 = (com.metrictrade.and.cc) $r2;

        $r1 = $r3.<com.metrictrade.and.cc: java.lang.String z>;

        if $r1 == null goto label2;

        $r3 = (com.metrictrade.and.cc) $r2;

        $r4 = $r3.<com.metrictrade.and.cc: java.lang.String z>;

        $r1 = r0.<com.metrictrade.and.cc: java.lang.String z>;

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>($r1);

        return $z0;

     label2:
        return 0;
    }
}
