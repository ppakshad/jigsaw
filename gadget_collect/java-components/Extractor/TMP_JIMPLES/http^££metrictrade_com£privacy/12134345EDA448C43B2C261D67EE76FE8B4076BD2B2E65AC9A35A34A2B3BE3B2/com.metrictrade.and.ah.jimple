public abstract class com.metrictrade.and.ah extends java.lang.Object
{
    public static com.metrictrade.and.ah a;

    public void <init>()
    {
        com.metrictrade.and.ah r0;

        r0 := @this: com.metrictrade.and.ah;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        return;
    }

    public static int b(java.lang.String, char)
    {
        int $i1;
        char $c0;
        com.metrictrade.and.ah $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $r1 = <com.metrictrade.and.ah: com.metrictrade.and.ah a>;

        $i1 = virtualinvoke $r1.<com.metrictrade.and.ah: int a(java.lang.String,char)>($r0, $c0);

        return $i1;
    }

    public static int b(java.lang.String, char, int)
    {
        int $i1;
        char $c0;
        com.metrictrade.and.ah $r1;
        java.lang.String $r0;

        $r0 := @parameter0: java.lang.String;

        $c0 := @parameter1: char;

        $i1 := @parameter2: int;

        $r1 = <com.metrictrade.and.ah: com.metrictrade.and.ah a>;

        $i1 = virtualinvoke $r1.<com.metrictrade.and.ah: int a(java.lang.String,char,int)>($r0, $c0, $i1);

        return $i1;
    }

    public static java.lang.String b(byte[], int, int)
    {
        byte[] $r0;
        int $i0, $i1;
        com.metrictrade.and.ah $r2;
        java.lang.String $r1;

        $r0 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $r2 = <com.metrictrade.and.ah: com.metrictrade.and.ah a>;

        $r1 = virtualinvoke $r2.<com.metrictrade.and.ah: java.lang.String a(byte[],int,int)>($r0, $i0, $i1);

        return $r1;
    }

    public static void b(java.lang.Object, long)
    {
        java.lang.Object $r0;
        long $l0;
        com.metrictrade.and.ah $r1;

        $r0 := @parameter0: java.lang.Object;

        $l0 := @parameter1: long;

        $r1 = <com.metrictrade.and.ah: com.metrictrade.and.ah a>;

        virtualinvoke $r1.<com.metrictrade.and.ah: void a(java.lang.Object,long)>($r0, $l0);

        return;
    }

    public abstract int a(java.lang.String, char);

    public abstract int a(java.lang.String, char, int);

    public abstract java.lang.Object a();

    public abstract java.lang.String a(byte[], int, int);

    public abstract void a(java.lang.Object);

    public abstract void a(java.lang.Object, long);

    public abstract void a(java.lang.String[], java.lang.String);
}
