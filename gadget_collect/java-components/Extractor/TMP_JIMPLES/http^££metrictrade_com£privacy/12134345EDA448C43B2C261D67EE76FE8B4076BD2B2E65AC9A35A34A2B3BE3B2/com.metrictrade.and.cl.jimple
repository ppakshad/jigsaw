public final class com.metrictrade.and.cl extends com.metrictrade.and.ck
{
    private com.metrictrade.and.ck c;
    private byte[] d;
    private byte[] e;

    public void <init>(com.metrictrade.and.ck)
    {
        byte[] $r2;
        com.metrictrade.and.cl r0;
        int $i0, $i1;
        com.metrictrade.and.ck $r1;

        r0 := @this: com.metrictrade.and.cl;

        $r1 := @parameter0: com.metrictrade.and.ck;

        $i1 = virtualinvoke $r1.<com.metrictrade.and.ck: int a()>();

        $i0 = $r1.<com.metrictrade.and.ck: int b>;

        specialinvoke r0.<com.metrictrade.and.ck: void <init>(int,int)>($i1, $i0);

        r0.<com.metrictrade.and.cl: com.metrictrade.and.ck c> = $r1;

        $i0 = r0.<com.metrictrade.and.ck: int b>;

        $r2 = newarray (byte)[$i0];

        r0.<com.metrictrade.and.cl: byte[] d> = $r2;

        $i0 = r0.<com.metrictrade.and.ck: int b>;

        $r2 = newarray (byte)[$i0];

        r0.<com.metrictrade.and.cl: byte[] e> = $r2;

        return;
    }

    private static void a(byte[], byte[], int)
    {
        byte[] $r0, $r1;
        byte $b1;
        int $i0, $i2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        return;

     label2:
        $b1 = $r1[$i2];

        $r0[$i2] = $b1;

        $i2 = $i2 + 1;

        goto label1;
    }

    private static void a(byte[], byte[], byte[], int)
    {
        byte[] $r0, $r1, $r2;
        byte $b1, $b3;
        int $i0, $i2;

        $r0 := @parameter0: byte[];

        $r1 := @parameter1: byte[];

        $r2 := @parameter2: byte[];

        $i0 := @parameter3: int;

        $i2 = 0;

     label1:
        if $i2 < $i0 goto label2;

        return;

     label2:
        $b3 = $r0[$i2];

        $b1 = $r1[$i2];

        $b1 = $b3 ^ $b1;

        $r2[$i2] = $b1;

        $i2 = $i2 + 1;

        goto label1;
    }

    public final void a(byte[])
    {
        byte[] $r1, $r2;
        com.metrictrade.and.cl r0;
        int $i0;

        r0 := @this: com.metrictrade.and.cl;

        $r1 := @parameter0: byte[];

        $r2 = r0.<com.metrictrade.and.cl: byte[] d>;

        $i0 = lengthof $r1;

        staticinvoke <com.metrictrade.and.cl: void a(byte[],byte[],int)>($r2, $r1, $i0);

        return;
    }

    public final void a(byte[], byte[])
    {
        byte[] $r1, $r2, $r3, $r4;
        com.metrictrade.and.cl r0;
        int $i0;
        com.metrictrade.and.ck $r5;

        r0 := @this: com.metrictrade.and.cl;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 = r0.<com.metrictrade.and.cl: byte[] d>;

        $r4 = r0.<com.metrictrade.and.cl: byte[] e>;

        $i0 = r0.<com.metrictrade.and.cl: int b>;

        staticinvoke <com.metrictrade.and.cl: void a(byte[],byte[],byte[],int)>($r1, $r3, $r4, $i0);

        $r5 = r0.<com.metrictrade.and.cl: com.metrictrade.and.ck c>;

        $r1 = r0.<com.metrictrade.and.cl: byte[] e>;

        virtualinvoke $r5.<com.metrictrade.and.ck: void a(byte[],byte[])>($r1, $r2);

        $r1 = r0.<com.metrictrade.and.cl: byte[] d>;

        $i0 = r0.<com.metrictrade.and.cl: int b>;

        staticinvoke <com.metrictrade.and.cl: void a(byte[],byte[],int)>($r1, $r2, $i0);

        return;
    }

    public final void b(byte[], byte[])
    {
        byte[] $r1, $r2, $r4, $r5;
        com.metrictrade.and.cl r0;
        int $i0;
        com.metrictrade.and.ck $r3;

        r0 := @this: com.metrictrade.and.cl;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $r3 = r0.<com.metrictrade.and.cl: com.metrictrade.and.ck c>;

        $r4 = r0.<com.metrictrade.and.cl: byte[] e>;

        virtualinvoke $r3.<com.metrictrade.and.ck: void b(byte[],byte[])>($r1, $r4);

        $r4 = r0.<com.metrictrade.and.cl: byte[] e>;

        $r5 = r0.<com.metrictrade.and.cl: byte[] d>;

        $i0 = r0.<com.metrictrade.and.cl: int b>;

        staticinvoke <com.metrictrade.and.cl: void a(byte[],byte[],byte[],int)>($r4, $r5, $r2, $i0);

        $r2 = r0.<com.metrictrade.and.cl: byte[] d>;

        $i0 = r0.<com.metrictrade.and.cl: int b>;

        staticinvoke <com.metrictrade.and.cl: void a(byte[],byte[],int)>($r2, $r1, $i0);

        return;
    }
}
