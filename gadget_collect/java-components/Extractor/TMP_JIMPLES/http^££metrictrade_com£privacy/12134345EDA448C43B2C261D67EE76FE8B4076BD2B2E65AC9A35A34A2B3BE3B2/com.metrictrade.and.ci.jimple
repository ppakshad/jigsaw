public final class com.metrictrade.and.ci extends com.metrictrade.and.ck
{
    private static final int[] i;
    private static final int[] j;
    private static final int[] k;
    private static final int[] l;
    private static final byte[] m;
    private static final byte[] n;
    private static final int[] o;
    private static final int[] p;
    private static final int[] q;
    private static final int[] r;
    private static final int[] s;
    private int c;
    private int[] d;
    private int[] e;
    private int f;
    private int g;
    private int h;

    static void <clinit>()
    {
        byte[] $r1;
        short $s0;
        byte $b7;
        int[] $r0;
        int $i1, $i2, $i3, $i5, $i6, $i8, $i9, $i10, $i11, $i12;
        java.lang.String $r2;
        char $c4;

        $i5 = 1;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] i> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] j> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] k> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] l> = $r0;

        $r1 = newarray (byte)[256];

        <com.metrictrade.and.ci: byte[] m> = $r1;

        $r1 = newarray (byte)[256];

        <com.metrictrade.and.ci: byte[] n> = $r1;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] o> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] p> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] q> = $r0;

        $r0 = newarray (int)[256];

        <com.metrictrade.and.ci: int[] r> = $r0;

        $r0 = newarray (int)[10];

        <com.metrictrade.and.ci: int[] s> = $r0;

        $i6 = 0;

     label01:
        if $i6 < 256 goto label03;

        $r0 = <com.metrictrade.and.ci: int[] s>;

        $r0[0] = 16777216;

        $i6 = 1;

     label02:
        if $i5 < 10 goto label09;

        return;

     label03:
        $r2 = "\u637c\u777b\uf26b\u6fc5\u3001\u672b\ufed7\uab76\uca82\uc97d\ufa59\u47f0\uadd4\ua2af\u9ca4\u72c0\ub7fd\u9326\u363f\uf7cc\u34a5\ue5f1\u71d8\u3115\u04c7\u23c3\u1896\u059a\u0712\u80e2\ueb27\ub275\u0983\u2c1a\u1b6e\u5aa0\u523b\ud6b3\u29e3\u2f84\u53d1\u00ed\u20fc\ub15b\u6acb\ube39\u4a4c\u58cf\ud0ef\uaafb\u434d\u3385\u45f9\u027f\u503c\u9fa8\u51a3\u408f\u929d\u38f5\ubcb6\uda21\u10ff\uf3d2\ucd0c\u13ec\u5f97\u4417\uc4a7\u7e3d\u645d\u1973\u6081\u4fdc\u222a\u9088\u46ee\ub814\ude5e\u0bdb\ue032\u3a0a\u4906\u245c\uc2d3\uac62\u9195\ue479\ue7c8\u376d\u8dd5\u4ea9\u6c56\uf4ea\u657a\uae08\uba78\u252e\u1ca6\ub4c6\ue8dd\u741f\u4bbd\u8b8a\u703e\ub566\u4803\uf60e\u6135\u57b9\u86c1\u1d9e\ue1f8\u9811\u69d9\u8e94\u9b1e\u87e9\uce55\u28df\u8ca1\u890d\ubfe6\u4268\u4199\u2d0f\ub054\ubb16";

        $i2 = $i6 >>> 1;

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i2);

        $i2 = (int) $c4;

        $i3 = $i6 & 1;

        if $i3 != 0 goto label04;

        $i2 = (int) $c4;

        $i2 = $i2 >>> 8;

     label04:
        $b7 = (byte) $i2;

        $s0 = (short) $b7;

        $s0 = $s0 & 255;

        $i2 = (int) $s0;

        $i2 = $i2 << 1;

        if $i2 < 256 goto label13;

        $i8 = $i2 ^ 283;

     label05:
        $i2 = (int) $s0;

        $i9 = $i8 ^ $i2;

        $i2 = $i6 << 1;

        if $i2 < 256 goto label12;

        $i10 = $i2 ^ 283;

     label06:
        $i2 = $i10 << 1;

        if $i2 < 256 goto label11;

        $i11 = $i2 ^ 283;

     label07:
        $i12 = $i11 << 1;

        if $i12 < 256 goto label08;

        $i12 = $i12 ^ 283;

     label08:
        $i1 = $i12 ^ $i6;

        $i2 = $i1 ^ $i10;

        $i3 = $i1 ^ $i11;

        $i11 = $i12 ^ $i11;

        $i10 = $i11 ^ $i10;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $b7 = (byte) $s0;

        $r1[$i6] = $b7;

        $r0 = <com.metrictrade.and.ci: int[] i>;

        $i8 = $i8 << 24;

        $i11 = (int) $s0;

        $i11 = $i11 << 16;

        $i8 = $i8 | $i11;

        $i11 = (int) $s0;

        $i11 = $i11 << 8;

        $i8 = $i8 | $i11;

        $i9 = $i8 | $i9;

        $r0[$i6] = $i9;

        $r0 = <com.metrictrade.and.ci: int[] j>;

        $i8 = $i9 >>> 8;

        $i11 = $i9 << 24;

        $i8 = $i8 | $i11;

        $r0[$i6] = $i8;

        $r0 = <com.metrictrade.and.ci: int[] k>;

        $i8 = $i9 >>> 16;

        $i11 = $i9 << 16;

        $i8 = $i8 | $i11;

        $r0[$i6] = $i8;

        $r0 = <com.metrictrade.and.ci: int[] l>;

        $i8 = $i9 >>> 24;

        $i9 = $i9 << 8;

        $i9 = $i9 | $i8;

        $r0[$i6] = $i9;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $b7 = (byte) $i6;

        $i9 = (int) $s0;

        $r1[$i9] = $b7;

        $r0 = <com.metrictrade.and.ci: int[] o>;

        $i10 = $i10 << 24;

        $i1 = $i1 << 16;

        $i1 = $i10 | $i1;

        $i3 = $i3 << 8;

        $i3 = $i1 | $i3;

        $i2 = $i3 | $i2;

        $i3 = (int) $s0;

        $r0[$i3] = $i2;

        $r0 = <com.metrictrade.and.ci: int[] p>;

        $i3 = $i2 >>> 8;

        $i1 = $i2 << 24;

        $i3 = $i3 | $i1;

        $i1 = (int) $s0;

        $r0[$i1] = $i3;

        $r0 = <com.metrictrade.and.ci: int[] q>;

        $i3 = $i2 >>> 16;

        $i1 = $i2 << 16;

        $i3 = $i3 | $i1;

        $i1 = (int) $s0;

        $r0[$i1] = $i3;

        $r0 = <com.metrictrade.and.ci: int[] r>;

        $i3 = $i2 >>> 24;

        $i2 = $i2 << 8;

        $i2 = $i2 | $i3;

        $i3 = (int) $s0;

        $r0[$i3] = $i2;

        $i6 = $i6 + 1;

        goto label01;

     label09:
        $i6 = $i6 << 1;

        if $i6 < 256 goto label10;

        $i6 = $i6 ^ 283;

     label10:
        $r0 = <com.metrictrade.and.ci: int[] s>;

        $i2 = $i6 << 24;

        $r0[$i5] = $i2;

        $i5 = $i5 + 1;

        goto label02;

     label11:
        $i11 = $i2;

        goto label07;

     label12:
        $i10 = $i2;

        goto label06;

     label13:
        $i8 = $i2;

        goto label05;
    }

    public void <init>(int, byte[], int)
    {
        byte[] $r1, $r2;
        short $s5;
        byte $b4;
        int[] $r3, $r4;
        int $i0, $i1, $i2, $i3, $i6, $i7, $i8;
        com.metrictrade.and.ci r0;

        r0 := @this: com.metrictrade.and.ci;

        $i0 := @parameter0: int;

        $r1 := @parameter1: byte[];

        $i1 := @parameter2: int;

        specialinvoke r0.<com.metrictrade.and.ck: void <init>(int,int)>($i0, 16);

        r0.<com.metrictrade.and.ci: int[] d> = null;

        r0.<com.metrictrade.and.ci: int[] e> = null;

        r0.<com.metrictrade.and.ci: int f> = 0;

        r0.<com.metrictrade.and.ci: int g> = 0;

        r0.<com.metrictrade.and.ci: int h> = 0;

        r0.<com.metrictrade.and.ci: int c> = $i1;

        $i0 = lengthof $r1;

        $i1 = r0.<com.metrictrade.and.ci: int a>;

        if $i0 >= $i1 goto label02;

        $i1 = r0.<com.metrictrade.and.ci: int a>;

        $r2 = newarray (byte)[$i1];

        $i1 = 0;

     label01:
        $i2 = r0.<com.metrictrade.and.ci: int a>;

        if $i1 < $i2 goto label06;

        $r1 = $r2;

     label02:
        $i0 = r0.<com.metrictrade.and.ci: int a>;

        $i0 = $i0 >>> 5;

        r0.<com.metrictrade.and.ci: int g> = $i0;

        $i0 = r0.<com.metrictrade.and.ci: int g>;

        $i0 = $i0 + 6;

        r0.<com.metrictrade.and.ci: int f> = $i0;

        $i0 = r0.<com.metrictrade.and.ci: int f>;

        $i0 = $i0 + 1;

        $i0 = $i0 * 4;

        r0.<com.metrictrade.and.ci: int h> = $i0;

        $i0 = r0.<com.metrictrade.and.ci: int h>;

        $r3 = newarray (int)[$i0];

        r0.<com.metrictrade.and.ci: int[] e> = $r3;

        $i0 = r0.<com.metrictrade.and.ci: int h>;

        $r3 = newarray (int)[$i0];

        r0.<com.metrictrade.and.ci: int[] d> = $r3;

        $i0 = r0.<com.metrictrade.and.ci: int c>;

        $i0 = $i0 & 3;

        if $i0 == 0 goto label14;

        $i0 = 0;

        $i1 = 0;

     label03:
        $i2 = r0.<com.metrictrade.and.ci: int g>;

        if $i1 < $i2 goto label09;

        $i0 = r0.<com.metrictrade.and.ci: int g>;

        $i2 = 0;

        $i1 = 0;

     label04:
        $i3 = r0.<com.metrictrade.and.ci: int h>;

        if $i0 < $i3 goto label10;

        $i0 = r0.<com.metrictrade.and.ci: int c>;

        $i0 = $i0 & 2;

        if $i0 == 0 goto label14;

        $i0 = r0.<com.metrictrade.and.ci: int f>;

        $i0 = $i0 * 4;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i1 = $r4[$i0];

        $r3[0] = $i1;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i1 = $i0 + 1;

        $i1 = $r4[$i1];

        $r3[1] = $i1;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i1 = $i0 + 2;

        $i1 = $r4[$i1];

        $r3[2] = $i1;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i1 = $i0 + 3;

        $i1 = $r4[$i1];

        $r3[3] = $i1;

        $i0 = $i0 + -4;

        $i1 = 4;

        $i2 = 1;

     label05:
        $i3 = r0.<com.metrictrade.and.ci: int f>;

        if $i2 < $i3 goto label13;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i2 = $r4[$i0];

        $r3[$i1] = $i2;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i2 = $i1 + 1;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + 1;

        $i3 = $r4[$i3];

        $r3[$i2] = $i3;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i2 = $i1 + 2;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + 2;

        $i3 = $r4[$i3];

        $r3[$i2] = $i3;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i1 = $i1 + 3;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i0 = $i0 + 3;

        $i0 = $r4[$i0];

        $r3[$i1] = $i0;

        return;

     label06:
        if $i1 >= $i0 goto label08;

        $b4 = $r1[$i1];

     label07:
        $r2[$i1] = $b4;

        $i1 = $i1 + 1;

        goto label01;

     label08:
        $b4 = 117;

        goto label07;

     label09:
        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $b4 = $r1[$i0];

        $i2 = (int) $b4;

        $i2 = $i2 << 24;

        $i3 = $i0 + 1;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i3 << 16;

        $i2 = $i2 | $i3;

        $i3 = $i0 + 2;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i3 << 8;

        $i2 = $i2 | $i3;

        $i3 = $i0 + 3;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i2 = $i2 | $i3;

        $r3[$i1] = $i2;

        $i1 = $i1 + 1;

        $i0 = $i0 + 4;

        goto label03;

     label10:
        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + -1;

        $i3 = $r3[$i3];

        if $i1 != 0 goto label12;

        $i1 = r0.<com.metrictrade.and.ci: int g>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i3 >>> 16;

        $i6 = $i6 & 255;

        $b4 = $r1[$i6];

        $i6 = (int) $b4;

        $i6 = $i6 << 24;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 >>> 8;

        $i7 = $i7 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $i7 << 16;

        $i6 = $i6 | $i7;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $i7 << 8;

        $i6 = $i6 | $i7;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i3 = $i3 >>> 24;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i6 | $i3;

        $r3 = <com.metrictrade.and.ci: int[] s>;

        $i6 = $i2 + 1;

        $i2 = $r3[$i2];

        $i3 = $i2 ^ $i3;

        $i2 = $i6;

     label11:
        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $r4 = r0.<com.metrictrade.and.ci: int[] e>;

        $i6 = r0.<com.metrictrade.and.ci: int g>;

        $i6 = $i0 - $i6;

        $i6 = $r4[$i6];

        $i3 = $i3 ^ $i6;

        $r3[$i0] = $i3;

        $i0 = $i0 + 1;

        $i1 = $i1 + -1;

        goto label04;

     label12:
        $i6 = r0.<com.metrictrade.and.ci: int g>;

        if $i6 != 8 goto label11;

        if $i1 != 4 goto label11;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i3 >>> 24;

        $b4 = $r1[$i6];

        $i6 = (int) $b4;

        $i6 = $i6 << 24;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 >>> 16;

        $i7 = $i7 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $i7 << 16;

        $i6 = $i6 | $i7;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 >>> 8;

        $i7 = $i7 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $i7 << 8;

        $i6 = $i6 | $i7;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i3 = $i3 & 255;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $i3 | $i6;

        goto label11;

     label13:
        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $r3[$i0];

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $r4 = <com.metrictrade.and.ci: int[] o>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i3 >>> 24;

        $b4 = $r1[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $r4[$i6];

        $r4 = <com.metrictrade.and.ci: int[] p>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 >>> 16;

        $i7 = $i7 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $r4[$i7];

        $i6 = $i6 ^ $i7;

        $r4 = <com.metrictrade.and.ci: int[] q>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i3 >>> 8;

        $i7 = $i7 & 255;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $r4[$i7];

        $i6 = $i6 ^ $i7;

        $r4 = <com.metrictrade.and.ci: int[] r>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i3 = $i3 & 255;

        $b4 = $r1[$i3];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i3 = (int) $s5;

        $i3 = $r4[$i3];

        $i3 = $i3 ^ $i6;

        $r3[$i1] = $i3;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + 1;

        $i6 = $r3[$i3];

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i3 = $i1 + 1;

        $r4 = <com.metrictrade.and.ci: int[] o>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i6 >>> 24;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $r4[$i7];

        $r4 = <com.metrictrade.and.ci: int[] p>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 16;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] q>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 8;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] r>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i6 & 255;

        $b4 = $r1[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $r4[$i6];

        $i6 = $i6 ^ $i7;

        $r3[$i3] = $i6;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + 2;

        $i6 = $r3[$i3];

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i3 = $i1 + 2;

        $r4 = <com.metrictrade.and.ci: int[] o>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i6 >>> 24;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $r4[$i7];

        $r4 = <com.metrictrade.and.ci: int[] p>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 16;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] q>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 8;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] r>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i6 & 255;

        $b4 = $r1[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $r4[$i6];

        $i6 = $i6 ^ $i7;

        $r3[$i3] = $i6;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i0 + 3;

        $i6 = $r3[$i3];

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i3 = $i1 + 3;

        $r4 = <com.metrictrade.and.ci: int[] o>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i7 = $i6 >>> 24;

        $b4 = $r1[$i7];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i7 = (int) $s5;

        $i7 = $r4[$i7];

        $r4 = <com.metrictrade.and.ci: int[] p>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 16;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] q>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 8;

        $i8 = $i8 & 255;

        $b4 = $r1[$i8];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i8 = (int) $s5;

        $i8 = $r4[$i8];

        $i7 = $i7 ^ $i8;

        $r4 = <com.metrictrade.and.ci: int[] r>;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i6 & 255;

        $b4 = $r1[$i6];

        $s5 = (short) $b4;

        $s5 = $s5 & 255;

        $i6 = (int) $s5;

        $i6 = $r4[$i6];

        $i6 = $i6 ^ $i7;

        $r3[$i3] = $i6;

        $i1 = $i1 + 4;

        $i0 = $i0 + -4;

        $i2 = $i2 + 1;

        goto label05;

     label14:
        return;
    }

    public final void a(byte[], byte[])
    {
        byte[] $r1, $r2;
        short $s1;
        byte $b0;
        int[] $r3;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.metrictrade.and.ci r0;

        r0 := @this: com.metrictrade.and.ci;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $b0 = $r1[0];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        $i2 = $i2 << 24;

        $b0 = $r1[1];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 16;

        $i2 = $i2 | $i3;

        $b0 = $r1[2];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 8;

        $i2 = $i2 | $i3;

        $b0 = $r1[3];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i2 = $i2 | $i3;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $r3[0];

        $i3 = $i2 ^ $i3;

        $b0 = $r1[4];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        $i2 = $i2 << 24;

        $b0 = $r1[5];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 16;

        $i2 = $i2 | $i4;

        $b0 = $r1[6];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 8;

        $i2 = $i2 | $i4;

        $b0 = $r1[7];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i2 = $i2 | $i4;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i4 = $r3[1];

        $i5 = $i2 ^ $i4;

        $b0 = $r1[8];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        $i2 = $i2 << 24;

        $b0 = $r1[9];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 16;

        $i2 = $i2 | $i4;

        $b0 = $r1[10];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 8;

        $i2 = $i2 | $i4;

        $b0 = $r1[11];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i2 = $i2 | $i4;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i4 = $r3[2];

        $i2 = $i4 ^ $i2;

        $b0 = $r1[12];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 24;

        $b0 = $r1[13];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i6 = $i6 << 16;

        $i4 = $i4 | $i6;

        $b0 = $r1[14];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i6 = $i6 << 8;

        $i4 = $i4 | $i6;

        $b0 = $r1[15];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i4 = $i4 | $i6;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i6 = $r3[3];

        $i6 = $i4 ^ $i6;

        $i7 = 1;

        $i4 = $i3;

        $i3 = $i5;

        $i5 = 0;

     label1:
        $i8 = r0.<com.metrictrade.and.ci: int f>;

        if $i7 < $i8 goto label2;

        $i7 = $i5 + 4;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i5 = $r3[$i7];

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i4 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[0] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i3 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[1] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i2 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[2] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i5 = $i5 ^ $i8;

        $b0 = (byte) $i5;

        $r2[3] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i5 = $i7 + 1;

        $i5 = $r3[$i5];

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i3 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[4] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i2 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[5] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[6] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i4 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i5 = $i5 ^ $i8;

        $b0 = (byte) $i5;

        $r2[7] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i5 = $i7 + 2;

        $i5 = $r3[$i5];

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i2 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[8] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i6 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[9] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i4 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i5 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[10] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i8 = $i3 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i5 = $i5 ^ $i8;

        $b0 = (byte) $i5;

        $r2[11] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i7 = $i7 + 3;

        $i7 = $r3[$i7];

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i6 = $i6 >>> 24;

        $i6 = $i6 & 255;

        $b0 = $r1[$i6];

        $i6 = $i7 >>> 24;

        $i5 = (int) $b0;

        $i6 = $i5 ^ $i6;

        $b0 = (byte) $i6;

        $r2[12] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i4 = $i4 >>> 16;

        $i4 = $i4 & 255;

        $b0 = $r1[$i4];

        $i4 = $i7 >>> 16;

        $i6 = (int) $b0;

        $i4 = $i6 ^ $i4;

        $b0 = (byte) $i4;

        $r2[13] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i3 = $i3 >>> 8;

        $i3 = $i3 & 255;

        $b0 = $r1[$i3];

        $i3 = $i7 >>> 8;

        $i4 = (int) $b0;

        $i3 = $i4 ^ $i3;

        $b0 = (byte) $i3;

        $r2[14] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] m>;

        $i2 = $i2 & 255;

        $b0 = $r1[$i2];

        $i2 = (int) $b0;

        $i2 = $i2 ^ $i7;

        $b0 = (byte) $i2;

        $r2[15] = $b0;

        return;

     label2:
        $i5 = $i5 + 4;

        $r3 = <com.metrictrade.and.ci: int[] i>;

        $i8 = $i4 >>> 24;

        $i8 = $i8 & 255;

        $i8 = $r3[$i8];

        $r3 = <com.metrictrade.and.ci: int[] j>;

        $i9 = $i3 >>> 16;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] k>;

        $i9 = $i2 >>> 8;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] l>;

        $i9 = $i6 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i9 = $r3[$i5];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] i>;

        $i9 = $i3 >>> 24;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $r3 = <com.metrictrade.and.ci: int[] j>;

        $i10 = $i2 >>> 16;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = <com.metrictrade.and.ci: int[] k>;

        $i10 = $i6 >>> 8;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = <com.metrictrade.and.ci: int[] l>;

        $i10 = $i4 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i10 = $i5 + 1;

        $i10 = $r3[$i10];

        $i9 = $i10 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] i>;

        $i10 = $i2 >>> 24;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $r3 = <com.metrictrade.and.ci: int[] j>;

        $i11 = $i6 >>> 16;

        $i11 = $i11 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = <com.metrictrade.and.ci: int[] k>;

        $i11 = $i4 >>> 8;

        $i11 = $i11 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = <com.metrictrade.and.ci: int[] l>;

        $i11 = $i3 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i11 = $i5 + 2;

        $i11 = $r3[$i11];

        $r3 = <com.metrictrade.and.ci: int[] i>;

        $i6 = $i6 >>> 24;

        $i6 = $i6 & 255;

        $i6 = $r3[$i6];

        $r3 = <com.metrictrade.and.ci: int[] j>;

        $i4 = $i4 >>> 16;

        $i4 = $i4 & 255;

        $i4 = $r3[$i4];

        $i4 = $i6 ^ $i4;

        $r3 = <com.metrictrade.and.ci: int[] k>;

        $i3 = $i3 >>> 8;

        $i3 = $i3 & 255;

        $i3 = $r3[$i3];

        $i3 = $i4 ^ $i3;

        $r3 = <com.metrictrade.and.ci: int[] l>;

        $i2 = $i2 & 255;

        $i2 = $r3[$i2];

        $i2 = $i3 ^ $i2;

        $r3 = r0.<com.metrictrade.and.ci: int[] e>;

        $i3 = $i5 + 3;

        $i3 = $r3[$i3];

        $i6 = $i2 ^ $i3;

        $i3 = $i9;

        $i4 = $i8;

        $i7 = $i7 + 1;

        $i2 = $i10 ^ $i11;

        goto label1;
    }

    public final void b(byte[], byte[])
    {
        byte[] $r1, $r2;
        short $s1;
        byte $b0;
        int[] $r3;
        int $i2, $i3, $i4, $i5, $i6, $i7, $i8, $i9, $i10, $i11;
        com.metrictrade.and.ci r0;

        r0 := @this: com.metrictrade.and.ci;

        $r1 := @parameter0: byte[];

        $r2 := @parameter1: byte[];

        $b0 = $r1[0];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i2 = (int) $s1;

        $i2 = $i2 << 24;

        $b0 = $r1[1];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 16;

        $i2 = $i2 | $i3;

        $b0 = $r1[2];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 8;

        $i2 = $i2 | $i3;

        $b0 = $r1[3];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i2 = $i2 | $i3;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i3 = $r3[0];

        $i2 = $i2 ^ $i3;

        $b0 = $r1[4];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 24;

        $b0 = $r1[5];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 16;

        $i3 = $i3 | $i4;

        $b0 = $r1[6];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i4 = $i4 << 8;

        $i3 = $i3 | $i4;

        $b0 = $r1[7];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i4 = (int) $s1;

        $i3 = $i3 | $i4;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i4 = $r3[1];

        $i4 = $i3 ^ $i4;

        $b0 = $r1[8];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i3 = (int) $s1;

        $i3 = $i3 << 24;

        $b0 = $r1[9];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i5 = (int) $s1;

        $i5 = $i5 << 16;

        $i3 = $i3 | $i5;

        $b0 = $r1[10];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i5 = (int) $s1;

        $i5 = $i5 << 8;

        $i3 = $i3 | $i5;

        $b0 = $r1[11];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i5 = (int) $s1;

        $i3 = $i3 | $i5;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i5 = $r3[2];

        $i3 = $i5 ^ $i3;

        $b0 = $r1[12];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i5 = (int) $s1;

        $i5 = $i5 << 24;

        $b0 = $r1[13];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i6 = $i6 << 16;

        $i5 = $i5 | $i6;

        $b0 = $r1[14];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i6 = $i6 << 8;

        $i5 = $i5 | $i6;

        $b0 = $r1[15];

        $s1 = (short) $b0;

        $s1 = $s1 & 255;

        $i6 = (int) $s1;

        $i5 = $i5 | $i6;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i6 = $r3[3];

        $i5 = $i5 ^ $i6;

        $i6 = 1;

        $i7 = 0;

     label1:
        $i8 = r0.<com.metrictrade.and.ci: int f>;

        if $i6 < $i8 goto label2;

        $i6 = $i7 + 4;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i7 = $r3[$i6];

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i2 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[0] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i5 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[1] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i3 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[2] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i4 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i7 = $i7 ^ $i8;

        $b0 = (byte) $i7;

        $r2[3] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i7 = $i6 + 1;

        $i7 = $r3[$i7];

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i4 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[4] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i2 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[5] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i5 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[6] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i3 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i7 = $i7 ^ $i8;

        $b0 = (byte) $i7;

        $r2[7] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i7 = $i6 + 2;

        $i7 = $r3[$i7];

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i3 >>> 24;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 24;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[8] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i4 >>> 16;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 16;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[9] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i2 >>> 8;

        $i8 = $i8 & 255;

        $b0 = $r1[$i8];

        $i8 = $i7 >>> 8;

        $i9 = (int) $b0;

        $i8 = $i9 ^ $i8;

        $b0 = (byte) $i8;

        $r2[10] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i8 = $i5 & 255;

        $b0 = $r1[$i8];

        $i8 = (int) $b0;

        $i7 = $i7 ^ $i8;

        $b0 = (byte) $i7;

        $r2[11] = $b0;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i6 = $i6 + 3;

        $i6 = $r3[$i6];

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i5 = $i5 >>> 24;

        $b0 = $r1[$i5];

        $i5 = $i6 >>> 24;

        $i7 = (int) $b0;

        $i5 = $i7 ^ $i5;

        $b0 = (byte) $i5;

        $r2[12] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i3 = $i3 >>> 16;

        $i3 = $i3 & 255;

        $b0 = $r1[$i3];

        $i3 = $i6 >>> 16;

        $i5 = (int) $b0;

        $i3 = $i5 ^ $i3;

        $b0 = (byte) $i3;

        $r2[13] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i3 = $i4 >>> 8;

        $i3 = $i3 & 255;

        $b0 = $r1[$i3];

        $i3 = $i6 >>> 8;

        $i4 = (int) $b0;

        $i3 = $i4 ^ $i3;

        $b0 = (byte) $i3;

        $r2[14] = $b0;

        $r1 = <com.metrictrade.and.ci: byte[] n>;

        $i2 = $i2 & 255;

        $b0 = $r1[$i2];

        $i2 = (int) $b0;

        $i2 = $i2 ^ $i6;

        $b0 = (byte) $i2;

        $r2[15] = $b0;

        return;

     label2:
        $i7 = $i7 + 4;

        $r3 = <com.metrictrade.and.ci: int[] o>;

        $i8 = $i2 >>> 24;

        $i8 = $i8 & 255;

        $i8 = $r3[$i8];

        $r3 = <com.metrictrade.and.ci: int[] p>;

        $i9 = $i5 >>> 16;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] q>;

        $i9 = $i3 >>> 8;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] r>;

        $i9 = $i4 & 255;

        $i9 = $r3[$i9];

        $i8 = $i8 ^ $i9;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i9 = $r3[$i7];

        $i8 = $i8 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] o>;

        $i9 = $i4 >>> 24;

        $i9 = $i9 & 255;

        $i9 = $r3[$i9];

        $r3 = <com.metrictrade.and.ci: int[] p>;

        $i10 = $i2 >>> 16;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = <com.metrictrade.and.ci: int[] q>;

        $i10 = $i5 >>> 8;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = <com.metrictrade.and.ci: int[] r>;

        $i10 = $i3 & 255;

        $i10 = $r3[$i10];

        $i9 = $i9 ^ $i10;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i10 = $i7 + 1;

        $i10 = $r3[$i10];

        $i9 = $i10 ^ $i9;

        $r3 = <com.metrictrade.and.ci: int[] o>;

        $i10 = $i3 >>> 24;

        $i10 = $i10 & 255;

        $i10 = $r3[$i10];

        $r3 = <com.metrictrade.and.ci: int[] p>;

        $i11 = $i4 >>> 16;

        $i11 = $i11 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = <com.metrictrade.and.ci: int[] q>;

        $i11 = $i2 >>> 8;

        $i11 = $i11 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = <com.metrictrade.and.ci: int[] r>;

        $i11 = $i5 & 255;

        $i11 = $r3[$i11];

        $i10 = $i10 ^ $i11;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i11 = $i7 + 2;

        $i11 = $r3[$i11];

        $r3 = <com.metrictrade.and.ci: int[] o>;

        $i5 = $i5 >>> 24;

        $i5 = $i5 & 255;

        $i5 = $r3[$i5];

        $r3 = <com.metrictrade.and.ci: int[] p>;

        $i3 = $i3 >>> 16;

        $i3 = $i3 & 255;

        $i3 = $r3[$i3];

        $i3 = $i5 ^ $i3;

        $r3 = <com.metrictrade.and.ci: int[] q>;

        $i4 = $i4 >>> 8;

        $i4 = $i4 & 255;

        $i4 = $r3[$i4];

        $i3 = $i3 ^ $i4;

        $r3 = <com.metrictrade.and.ci: int[] r>;

        $i2 = $i2 & 255;

        $i2 = $r3[$i2];

        $i2 = $i3 ^ $i2;

        $r3 = r0.<com.metrictrade.and.ci: int[] d>;

        $i3 = $i7 + 3;

        $i3 = $r3[$i3];

        $i5 = $i2 ^ $i3;

        $i4 = $i9;

        $i2 = $i8;

        $i6 = $i6 + 1;

        $i3 = $i10 ^ $i11;

        goto label1;
    }
}
