public abstract class com.metrictrade.and.cf extends java.lang.Object
{
    protected long a;
    protected byte[] b;
    private int c;

    protected void <init>()
    {
        byte[] $r1;
        com.metrictrade.and.cf r0;

        r0 := @this: com.metrictrade.and.cf;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.metrictrade.and.cf: int c> = 64;

        $r1 = newarray (byte)[64];

        r0.<com.metrictrade.and.cf: byte[] b> = $r1;

        virtualinvoke r0.<com.metrictrade.and.cf: void d()>();

        return;
    }

    public final void a(byte)
    {
        byte[] $r1;
        byte $b0;
        int $i2, $i4;
        long $l1, $l3;
        com.metrictrade.and.cf r0;

        r0 := @this: com.metrictrade.and.cf;

        $b0 := @parameter0: byte;

        $l1 = r0.<com.metrictrade.and.cf: long a>;

        $i2 = r0.<com.metrictrade.and.cf: int c>;

        $l3 = (long) $i2;

        $l1 = $l1 % $l3;

        $i2 = (int) $l1;

        $l1 = r0.<com.metrictrade.and.cf: long a>;

        $l1 = $l1 + 1L;

        r0.<com.metrictrade.and.cf: long a> = $l1;

        $r1 = r0.<com.metrictrade.and.cf: byte[] b>;

        $r1[$i2] = $b0;

        $i4 = r0.<com.metrictrade.and.cf: int c>;

        $i4 = $i4 + -1;

        if $i2 != $i4 goto label1;

        $r1 = r0.<com.metrictrade.and.cf: byte[] b>;

        virtualinvoke r0.<com.metrictrade.and.cf: void a(byte[],int)>($r1, 0);

     label1:
        return;
    }

    protected abstract void a(byte[], int);

    public final byte[] a()
    {
        byte[] $r1, $r2;
        long $l1, $l3;
        int $i0, $i2, $i4;
        com.metrictrade.and.cf r0;

        r0 := @this: com.metrictrade.and.cf;

        $r1 = virtualinvoke r0.<com.metrictrade.and.cf: byte[] b()>();

        $i0 = lengthof $r1;

        $l1 = r0.<com.metrictrade.and.cf: long a>;

        $i2 = r0.<com.metrictrade.and.cf: int c>;

        $l3 = (long) $i2;

        $l1 = $l1 % $l3;

        $i4 = (int) $l1;

        $l1 = r0.<com.metrictrade.and.cf: long a>;

        $l3 = (long) $i0;

        $l1 = $l1 + $l3;

        r0.<com.metrictrade.and.cf: long a> = $l1;

        $i2 = r0.<com.metrictrade.and.cf: int c>;

        $i2 = $i2 - $i4;

        if $i0 < $i2 goto label7;

        $r2 = r0.<com.metrictrade.and.cf: byte[] b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, $i4, $i2);

        $r2 = r0.<com.metrictrade.and.cf: byte[] b>;

        virtualinvoke r0.<com.metrictrade.and.cf: void a(byte[],int)>($r2, 0);

     label1:
        $i4 = r0.<com.metrictrade.and.cf: int c>;

        $i4 = $i4 + $i2;

        $i4 = $i4 + -1;

        if $i4 < $i0 goto label5;

        $i4 = 0;

     label2:
        if $i2 >= $i0 goto label3;

        $r2 = r0.<com.metrictrade.and.cf: byte[] b>;

        $i0 = $i0 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i2, $r2, $i4, $i0);

     label3:
        $r1 = virtualinvoke r0.<com.metrictrade.and.cf: byte[] c()>();

        r0.<com.metrictrade.and.cf: long a> = 0L;

        $i0 = 0;

     label4:
        $i2 = r0.<com.metrictrade.and.cf: int c>;

        if $i0 < $i2 goto label6;

        virtualinvoke r0.<com.metrictrade.and.cf: void d()>();

        return $r1;

     label5:
        virtualinvoke r0.<com.metrictrade.and.cf: void a(byte[],int)>($r1, $i2);

        $i4 = r0.<com.metrictrade.and.cf: int c>;

        $i2 = $i2 + $i4;

        goto label1;

     label6:
        $r2 = r0.<com.metrictrade.and.cf: byte[] b>;

        $r2[$i0] = 0;

        $i0 = $i0 + 1;

        goto label4;

     label7:
        $i2 = 0;

        goto label2;
    }

    protected abstract byte[] b();

    protected abstract byte[] c();

    public abstract java.lang.Object clone();

    protected abstract void d();
}
