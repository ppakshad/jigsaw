public class com.metrictrade.and.ak extends java.lang.Object implements com.metrictrade.and.al
{
    public int a;
    private transient java.lang.Object[] b;

    public void <init>()
    {
        com.metrictrade.and.ak r0;

        r0 := @this: com.metrictrade.and.ak;

        specialinvoke r0.<com.metrictrade.and.ak: void <init>(int)>(10);

        return;
    }

    public void <init>(int)
    {
        java.lang.Object[] $r4;
        com.metrictrade.and.ak r0;
        int $i0;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;
        java.lang.IllegalArgumentException $r1;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.IllegalArgumentException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>(java.lang.String)>("Illegal Capacity: ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label1:
        $r4 = newarray (java.lang.Object)[$i0];

        r0.<com.metrictrade.and.ak: java.lang.Object[] b> = $r4;

        return;
    }

    private boolean c(int)
    {
        java.lang.Throwable $r3;
        java.lang.Object[] $r1, $r2;
        long $l3, $l5;
        byte $b4;
        com.metrictrade.and.ak r0;
        int $i0, $i1, $i2;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label15;

        entermonitor r0;

     label01:
        $r1 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i1 = lengthof $r1;

        if $i0 <= $i1 goto label14;

        $i1 = r0.<com.metrictrade.and.ak: int a>;

        $i2 = lengthof $r1;

        if $i1 <= $i2 goto label18;

        $i1 = lengthof $r1;

     label02:
        $l3 = (long) $i0;

        $b4 = $l3 cmp 128L;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label06;

        $l3 = $l3 >> 6;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 6;

     label03:
        $l5 = $l3 - 2147483639L;

        $b4 = $l5 cmp 0L;

        $i0 = (int) $b4;

        if $i0 <= 0 goto label11;

        $i0 = -1;

     label04:
        if $i0 >= 0 goto label12;

        exitmonitor r0;

     label05:
        return 0;

     label06:
        $b4 = $l3 cmp 1024L;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label07;

        $l3 = $l3 >> 8;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 8;

        goto label03;

     label07:
        $b4 = $l3 cmp 4096L;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label08;

        $l3 = $l3 >> 10;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 10;

        goto label03;

     label08:
        $b4 = $l3 cmp 16384L;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label09;

        $l3 = $l3 >> 12;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 12;

        goto label03;

     label09:
        $b4 = $l3 cmp 65536L;

        $i0 = (int) $b4;

        if $i0 >= 0 goto label10;

        $l3 = $l3 >> 14;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 14;

        goto label03;

     label10:
        $l3 = $l3 >> 16;

        $l3 = $l3 + 1L;

        $l3 = $l3 << 16;

        goto label03;

     label11:
        $i0 = (int) $l3;

        goto label04;

     label12:
        $r2 = newarray (java.lang.Object)[$i0];

        if $i1 <= 0 goto label13;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, 0, $r2, 0, $i1);

     label13:
        r0.<com.metrictrade.and.ak: java.lang.Object[] b> = $r2;

     label14:
        exitmonitor r0;

     label15:
        return 1;

     label16:
        $r3 := @caughtexception;

        exitmonitor r0;

     label17:
        throw $r3;

     label18:
        goto label02;

        catch java.lang.Throwable from label01 to label05 with label16;
        catch java.lang.Throwable from label06 to label15 with label16;
        catch java.lang.Throwable from label16 to label17 with label16;
    }

    public final java.lang.Object a(int)
    {
        java.lang.Object[] $r1;
        com.metrictrade.and.ak r0;
        int $i0, $i1;
        java.lang.Object $r2;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 >= $i1 goto label1;

        if $i0 < 0 goto label1;

        $i1 = lengthof $r1;

        if $i0 < $i1 goto label2;

     label1:
        return null;

     label2:
        $r2 = $r1[$i0];

        return $r2;
    }

    public final java.lang.Object a(int, java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.metrictrade.and.ak r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 >= $i1 goto label1;

        if $i0 < 0 goto label1;

        $i1 = lengthof $r2;

        if $i0 >= $i1 goto label1;

        $r3 = $r2[$i0];

        $r2[$i0] = $r1;

        return $r3;

     label1:
        return null;
    }

    public final void a()
    {
        java.lang.Object[] $r1;
        com.metrictrade.and.ak r0;
        int $i0, $i1;

        r0 := @this: com.metrictrade.and.ak;

        $r1 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $i1 = lengthof $r1;

        $i0 = staticinvoke <java.lang.Math: int min(int,int)>($i0, $i1);

        $i1 = 0;

     label1:
        if $i1 < $i0 goto label2;

        r0.<com.metrictrade.and.ak: int a> = 0;

        return;

     label2:
        $r1[$i1] = null;

        $i1 = $i1 + 1;

        goto label1;
    }

    public final boolean a(java.lang.Object)
    {
        int $i0;
        java.lang.Object $r1;
        com.metrictrade.and.ak r0;

        r0 := @this: com.metrictrade.and.ak;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.metrictrade.and.ak: int b(java.lang.Object)>($r1);

        if $i0 < 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public final int b(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.metrictrade.and.ak r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.ak;

        $r1 := @parameter0: java.lang.Object;

        $i0 = 0;

        if $r1 != null goto label5;

     label1:
        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 < $i1 goto label3;

     label2:
        return -1;

     label3:
        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r1 = $r2[$i0];

        if $r1 == null goto label6;

        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 != 0 goto label6;

        $i0 = $i0 + 1;

     label5:
        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 < $i1 goto label4;

        goto label2;

     label6:
        return $i0;
    }

    public final java.lang.Object b(int)
    {
        java.lang.Object[] $r1;
        com.metrictrade.and.ak r0;
        int $i0, $i1, $i2, $i3;
        java.lang.Object $r2;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        $r1 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i2 = r0.<com.metrictrade.and.ak: int a>;

        $i1 = lengthof $r1;

        if $i2 <= $i1 goto label4;

        $i2 = lengthof $r1;

     label1:
        if $i0 < 0 goto label3;

        if $i0 >= $i2 goto label3;

        $r2 = $r1[$i0];

        $i1 = $i2 - $i0;

        $i3 = $i1 + -1;

        if $i3 <= 0 goto label2;

        $i1 = $i0 + 1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r1, $i0, $i3);

     label2:
        $i0 = $i2 + -1;

        $r1[$i0] = null;

        r0.<com.metrictrade.and.ak: int a> = $i0;

        return $r2;

     label3:
        return null;

     label4:
        goto label1;
    }

    public final void b(int, java.lang.Object)
    {
        java.lang.IndexOutOfBoundsException $r2;
        java.lang.Object[] $r5, $r6;
        com.metrictrade.and.ak r0;
        int $i0, $i1, $i2;
        java.lang.Object $r1;
        java.lang.StringBuilder $r3;
        java.lang.String $r4;
        boolean $z0;

        r0 := @this: com.metrictrade.and.ak;

        $i0 := @parameter0: int;

        $r1 := @parameter1: java.lang.Object;

        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 > $i1 goto label1;

        if $i0 >= 0 goto label2;

     label1:
        $r2 = new java.lang.IndexOutOfBoundsException;

        $r3 = new java.lang.StringBuilder;

        specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>("Index: ");

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", Size: ");

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $r3 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r4);

        throw $r2;

     label2:
        $i1 = r0.<com.metrictrade.and.ak: int a>;

        $i1 = $i1 + 1;

        $z0 = specialinvoke r0.<com.metrictrade.and.ak: boolean c(int)>($i1);

        if $z0 == 0 goto label3;

        $r5 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r6 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i1 = $i0 + 1;

        $i2 = r0.<com.metrictrade.and.ak: int a>;

        $i2 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r5, $i0, $r6, $i1, $i2);

        $r5 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r5[$i0] = $r1;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $i0 = $i0 + 1;

        r0.<com.metrictrade.and.ak: int a> = $i0;

     label3:
        return;
    }

    public final boolean c(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.metrictrade.and.ak r0;
        int $i0, $i1;
        java.lang.Object $r1;
        boolean $z0;

        r0 := @this: com.metrictrade.and.ak;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $i0 = $i0 + 1;

        $z0 = specialinvoke r0.<com.metrictrade.and.ak: boolean c(int)>($i0);

        if $z0 == 0 goto label2;

        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $i1 = lengthof $r2;

        if $i0 < $i1 goto label1;

        $i0 = lengthof $r2;

        $i0 = $i0 + -1;

     label1:
        $i1 = $i0 + 1;

        $r2[$i0] = $r1;

        r0.<com.metrictrade.and.ak: int a> = $i1;

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object clone()
    {
        java.lang.Throwable $r5;
        java.lang.Object[] $r1, $r4;
        com.metrictrade.and.ak r0, $r3;
        int $i0;
        java.lang.InternalError $r6;
        java.lang.Object $r2;

        r0 := @this: com.metrictrade.and.ak;

     label1:
        $r2 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        $r3 = (com.metrictrade.and.ak) $r2;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

        $r1 = newarray (java.lang.Object)[$i0];

        $r3.<com.metrictrade.and.ak: java.lang.Object[] b> = $r1;

        $r4 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r1 = $r3.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $i0 = r0.<com.metrictrade.and.ak: int a>;

     label3:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r4, 0, $r1, 0, $i0);

     label4:
        return $r3;

     label5:
        $r5 := @caughtexception;

        $r6 = new java.lang.InternalError;

        specialinvoke $r6.<java.lang.InternalError: void <init>()>();

        throw $r6;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label5;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label5;
    }

    public final boolean d(java.lang.Object)
    {
        java.lang.Object[] $r2;
        com.metrictrade.and.ak r0;
        int $i0, $i1;
        java.lang.Object $r1, $r3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.ak;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label4;

        $i0 = 0;

     label1:
        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 < $i1 goto label2;

        return 0;

     label2:
        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r1 = $r2[$i0];

        if $r1 != null goto label3;

        virtualinvoke r0.<com.metrictrade.and.ak: java.lang.Object b(int)>($i0);

        return 1;

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $i0 = 0;

     label5:
        $i1 = r0.<com.metrictrade.and.ak: int a>;

        if $i0 >= $i1 goto label7;

        $r2 = r0.<com.metrictrade.and.ak: java.lang.Object[] b>;

        $r3 = $r2[$i0];

        $z0 = virtualinvoke $r1.<java.lang.Object: boolean equals(java.lang.Object)>($r3);

        if $z0 == 0 goto label6;

        virtualinvoke r0.<com.metrictrade.and.ak: java.lang.Object b(int)>($i0);

        return 1;

     label6:
        $i0 = $i0 + 1;

        goto label5;

     label7:
        return 0;
    }

    public final void h()
    {
        com.metrictrade.and.ak r0;

        r0 := @this: com.metrictrade.and.ak;

        virtualinvoke r0.<com.metrictrade.and.ak: void a()>();

        return;
    }
}
