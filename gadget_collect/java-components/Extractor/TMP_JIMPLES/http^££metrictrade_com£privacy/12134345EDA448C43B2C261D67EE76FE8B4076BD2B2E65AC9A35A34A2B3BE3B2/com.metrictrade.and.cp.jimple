public final class com.metrictrade.and.cp extends java.lang.Object
{
    public static java.util.Random a;
    static int b;
    private static java.math.BigInteger i;
    private static java.math.BigInteger j;
    java.math.BigInteger c;
    java.math.BigInteger d;
    java.math.BigInteger e;
    java.math.BigInteger f;
    java.math.BigInteger g;
    private int h;

    static void <clinit>()
    {
        java.math.BigInteger $r0;

        <com.metrictrade.and.cp: int b> = 64;

        $r0 = <java.math.BigInteger: java.math.BigInteger ZERO>;

        $r0 = <java.math.BigInteger: java.math.BigInteger ONE>;

        <com.metrictrade.and.cp: java.math.BigInteger i> = $r0;

        $r0 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(2L);

        <com.metrictrade.and.cp: java.math.BigInteger j> = $r0;

        return;
    }

    public void <init>()
    {
        java.util.Random $r1;
        com.metrictrade.and.cp r0;

        r0 := @this: com.metrictrade.and.cp;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.metrictrade.and.cp: int h> = 512;

        $r1 = <com.metrictrade.and.cp: java.util.Random a>;

        if $r1 != null goto label1;

        $r1 = new java.util.Random;

        specialinvoke $r1.<java.util.Random: void <init>()>();

        <com.metrictrade.and.cp: java.util.Random a> = $r1;

     label1:
        return;
    }

    public static int c()
    {
        int $i0;
        java.util.Random $r0;

        $r0 = <com.metrictrade.and.cp: java.util.Random a>;

        $i0 = virtualinvoke $r0.<java.util.Random: int nextInt()>();

        return $i0;
    }

    public final boolean a()
    {
        java.math.BigInteger $r1;
        com.metrictrade.and.cp r0;

        r0 := @this: com.metrictrade.and.cp;

        $r1 = r0.<com.metrictrade.and.cp: java.math.BigInteger f>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    void b()
    {
        com.metrictrade.and.cp r0;
        int $i0, $i1;
        java.math.BigInteger $r1, $r3, $r4;
        java.util.Random $r2;

        r0 := @this: com.metrictrade.and.cp;

        $r1 = new java.math.BigInteger;

        $i0 = r0.<com.metrictrade.and.cp: int h>;

        $i0 = $i0 / 2;

        $r2 = <com.metrictrade.and.cp: java.util.Random a>;

        specialinvoke $r1.<java.math.BigInteger: void <init>(int,int,java.util.Random)>($i0, 20, $r2);

        r0.<com.metrictrade.and.cp: java.math.BigInteger e> = $r1;

        $i0 = 0;

     label1:
        if $i0 < 1024 goto label2;

        return;

     label2:
        $r1 = r0.<com.metrictrade.and.cp: java.math.BigInteger c>;

        $r3 = r0.<com.metrictrade.and.cp: java.math.BigInteger e>;

        $r4 = r0.<com.metrictrade.and.cp: java.math.BigInteger d>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger modPow(java.math.BigInteger,java.math.BigInteger)>($r3, $r4);

        $r3 = <com.metrictrade.and.cp: java.math.BigInteger i>;

        $i1 = virtualinvoke $r1.<java.math.BigInteger: int compareTo(java.math.BigInteger)>($r3);

        if $i1 != 0 goto label3;

        $r1 = r0.<com.metrictrade.and.cp: java.math.BigInteger e>;

        $r3 = <com.metrictrade.and.cp: java.math.BigInteger j>;

        $r1 = virtualinvoke $r1.<java.math.BigInteger: java.math.BigInteger subtract(java.math.BigInteger)>($r3);

        r0.<com.metrictrade.and.cp: java.math.BigInteger e> = $r1;

        $i0 = $i0 + 1;

        goto label1;

     label3:
        return;
    }
}
