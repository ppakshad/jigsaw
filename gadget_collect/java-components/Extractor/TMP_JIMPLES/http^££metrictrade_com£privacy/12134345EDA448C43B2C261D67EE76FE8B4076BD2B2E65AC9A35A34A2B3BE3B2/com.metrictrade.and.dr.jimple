public final class com.metrictrade.and.dr extends java.io.InputStream
{
    private static byte[] G;
    private static byte[] J;
    private static byte[] K;
    private static byte[] L;
    private static byte[] M;
    private static byte[] N;
    private static byte[] O;
    private static byte[] P;
    private static byte[][] Q;
    private int A;
    private boolean B;
    private byte[][] C;
    private int D;
    private int E;
    private int F;
    private java.io.InputStream H;
    private com.metrictrade.and.dq I;
    public com.metrictrade.and.ck a;
    private boolean b;
    private boolean c;
    private com.metrictrade.and.ec d;
    private boolean e;
    private boolean f;
    private int g;
    private byte[] h;
    private byte[] i;
    private com.metrictrade.and.cl j;
    private int k;
    private byte[] l;
    private byte[] m;
    private int n;
    private int o;
    private int p;
    private boolean q;
    private boolean r;
    private byte[] s;
    private int t;
    private int u;
    private int v;
    private int w;
    private int x;
    private int y;
    private int z;

    static void <clinit>()
    {
        byte[] $r1;
        byte[][] $r2;
        java.lang.String $r0;

        $r0 = "<t9s_____D23>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] J> = $r1;

        $r0 = "</t9s_____D23>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] K> = $r1;

        $r0 = "<t9s_____D3P>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] L> = $r1;

        $r0 = "</t9s_____D3P>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] M> = $r1;

        $r0 = "<t9s_____D6R>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] N> = $r1;

        $r0 = "</t9s_____D6R>";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] O> = $r1;

        $r0 = "t9s_____D";

        $r1 = virtualinvoke $r0.<java.lang.String: byte[] getBytes()>();

        <com.metrictrade.and.dr: byte[] P> = $r1;

        $r2 = newarray (byte[])[6];

        $r1 = <com.metrictrade.and.dr: byte[] J>;

        $r2[0] = $r1;

        $r1 = <com.metrictrade.and.dr: byte[] L>;

        $r2[1] = $r1;

        $r1 = <com.metrictrade.and.dr: byte[] N>;

        $r2[2] = $r1;

        $r1 = <com.metrictrade.and.dr: byte[] K>;

        $r2[3] = $r1;

        $r1 = <com.metrictrade.and.dr: byte[] M>;

        $r2[4] = $r1;

        $r1 = <com.metrictrade.and.dr: byte[] O>;

        $r2[5] = $r1;

        <com.metrictrade.and.dr: byte[][] Q> = $r2;

        return;
    }

    public void <init>(java.io.InputStream, com.metrictrade.and.dq)
    {
        byte[] $r3;
        short $s0;
        byte[][] $r4;
        com.metrictrade.and.dr r0;
        com.metrictrade.and.dq $r2;
        int $i1;
        java.io.InputStream $r1;

        r0 := @this: com.metrictrade.and.dr;

        $r1 := @parameter0: java.io.InputStream;

        $r2 := @parameter1: com.metrictrade.and.dq;

        $s0 = 512;

        specialinvoke r0.<java.io.InputStream: void <init>()>();

        r0.<com.metrictrade.and.dr: java.io.InputStream H> = $r1;

        r0.<com.metrictrade.and.dr: com.metrictrade.and.dq I> = $r2;

        $r3 = interfaceinvoke $r2.<com.metrictrade.and.dq: byte[] b(int)>(4);

        r0.<com.metrictrade.and.dr: byte[] s> = $r3;

        $r3 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = lengthof $r3;

        if $i1 >= 512 goto label1;

        $s0 = 256;

     label1:
        r0.<com.metrictrade.and.dr: int F> = $s0;

        $r4 = <com.metrictrade.and.dr: byte[][] Q>;

        r0.<com.metrictrade.and.dr: byte[][] C> = $r4;

        $r4 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $i1 = lengthof $r4;

        r0.<com.metrictrade.and.dr: int D> = $i1;

        $i1 = r0.<com.metrictrade.and.dr: int D>;

        $i1 = $i1 / 2;

        r0.<com.metrictrade.and.dr: int E> = $i1;

        r0.<com.metrictrade.and.dr: int v> = 0;

        r0.<com.metrictrade.and.dr: int u> = 0;

        r0.<com.metrictrade.and.dr: int t> = 0;

        r0.<com.metrictrade.and.dr: int A> = -1;

        r0.<com.metrictrade.and.dr: int z> = -1;

        r0.<com.metrictrade.and.dr: boolean B> = 0;

        return;
    }

    private int a()
    {
        byte[] $r1, $r3;
        com.metrictrade.and.dr r0;
        byte $b3;
        int $i0, $i1, $i2;
        com.metrictrade.and.cl $r4;
        com.metrictrade.and.ck $r2;
        boolean $z0;

        r0 := @this: com.metrictrade.and.dr;

        $z0 = r0.<com.metrictrade.and.dr: boolean r>;

        if $z0 == 0 goto label3;

        return -1;

     label1:
        $r1 = r0.<com.metrictrade.and.dr: byte[] l>;

        $i0 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = r0.<com.metrictrade.and.dr: int k>;

        $i2 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = $i1 - $i2;

        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int c(byte[],int,int)>($r1, $i0, $i1);

        if $i0 != -1 goto label2;

        r0.<com.metrictrade.and.dr: boolean r> = 1;

        return -1;

     label2:
        $i1 = r0.<com.metrictrade.and.dr: int o>;

        $i0 = $i0 + $i1;

        r0.<com.metrictrade.and.dr: int o> = $i0;

        $i0 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = r0.<com.metrictrade.and.dr: int k>;

        if $i0 != $i1 goto label3;

        $r2 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ck a>;

        $r1 = r0.<com.metrictrade.and.dr: byte[] l>;

        $r3 = r0.<com.metrictrade.and.dr: byte[] m>;

        virtualinvoke $r2.<com.metrictrade.and.ck: void b(byte[],byte[])>($r1, $r3);

        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.cl j>;

        $r1 = r0.<com.metrictrade.and.dr: byte[] m>;

        virtualinvoke $r4.<com.metrictrade.and.cl: void a(byte[])>($r1);

        r0.<com.metrictrade.and.dr: int o> = 0;

        r0.<com.metrictrade.and.dr: boolean q> = 1;

     label3:
        $z0 = r0.<com.metrictrade.and.dr: boolean q>;

        if $z0 == 0 goto label1;

     label4:
        $r1 = r0.<com.metrictrade.and.dr: byte[] l>;

        $i0 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = r0.<com.metrictrade.and.dr: int k>;

        $i2 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = $i1 - $i2;

        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int c(byte[],int,int)>($r1, $i0, $i1);

        if $i0 != -1 goto label5;

        r0.<com.metrictrade.and.dr: boolean r> = 1;

        return -1;

     label5:
        $i1 = r0.<com.metrictrade.and.dr: int o>;

        $i0 = $i0 + $i1;

        r0.<com.metrictrade.and.dr: int o> = $i0;

        $i0 = r0.<com.metrictrade.and.dr: int o>;

        $i1 = r0.<com.metrictrade.and.dr: int k>;

        if $i0 != $i1 goto label4;

        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.cl j>;

        $r1 = r0.<com.metrictrade.and.dr: byte[] l>;

        $r3 = r0.<com.metrictrade.and.dr: byte[] m>;

        virtualinvoke $r4.<com.metrictrade.and.cl: void b(byte[],byte[])>($r1, $r3);

        r0.<com.metrictrade.and.dr: int n> = 0;

        r0.<com.metrictrade.and.dr: int o> = 0;

        $i0 = r0.<com.metrictrade.and.dr: int k>;

        r0.<com.metrictrade.and.dr: int p> = $i0;

        $z0 = r0.<com.metrictrade.and.dr: boolean r>;

        if $z0 != 0 goto label6;

        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int c()>();

        if $i0 != -1 goto label7;

        r0.<com.metrictrade.and.dr: boolean r> = 1;

        $r1 = r0.<com.metrictrade.and.dr: byte[] m>;

        $i0 = r0.<com.metrictrade.and.dr: int k>;

        $i0 = $i0 + -1;

        $b3 = $r1[$i0];

        $i0 = (int) $b3;

        r0.<com.metrictrade.and.dr: int p> = $i0;

     label6:
        return 1;

     label7:
        $r1 = r0.<com.metrictrade.and.dr: byte[] l>;

        $i1 = r0.<com.metrictrade.and.dr: int o>;

        $i2 = $i1 + 1;

        r0.<com.metrictrade.and.dr: int o> = $i2;

        $i0 = $i0 & 255;

        $b3 = (byte) $i0;

        $r1[$i1] = $b3;

        goto label6;
    }

    private int a(byte[], int, int)
    {
        java.lang.Throwable $r6;
        byte[] $r1, $r7, $r8;
        java.lang.IndexOutOfBoundsException $r16;
        java.lang.IllegalStateException $r17;
        long $l8, $l9;
        java.lang.NullPointerException $r15;
        short $s7;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5, $i10;
        java.lang.String $r10, $r11;
        com.metrictrade.and.eh $r2;
        boolean $z0;
        com.metrictrade.and.ef $r5;
        com.metrictrade.and.ec $r4;
        java.io.IOException $r3, $r14;
        java.lang.ArrayIndexOutOfBoundsException $r18;
        java.lang.Exception $r9;
        com.metrictrade.and.dr r0;

        r0 := @this: com.metrictrade.and.dr;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $z0 = r0.<com.metrictrade.and.dr: boolean f>;

        if $z0 == 0 goto label01;

        $r14 = new java.io.IOException;

        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");

        throw $r14;

     label01:
        if $r1 != null goto label02;

        $r15 = new java.lang.NullPointerException;

        specialinvoke $r15.<java.lang.NullPointerException: void <init>()>();

        throw $r15;

     label02:
        if $i0 < 0 goto label03;

        if $i1 < 0 goto label03;

        $i3 = lengthof $r1;

        $i3 = $i3 - $i0;

        if $i1 <= $i3 goto label04;

     label03:
        $r16 = new java.lang.IndexOutOfBoundsException;

        specialinvoke $r16.<java.lang.IndexOutOfBoundsException: void <init>()>();

        throw $r16;

     label04:
        if $i1 != 0 goto label62;

        return 0;

     label05:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        $i3 = $r4.<com.metrictrade.and.ec: int a>;

     label06:
        if $i3 != 12 goto label17;

     label07:
        $r5 = $r4.<com.metrictrade.and.ec: com.metrictrade.and.ef e>;

        $i3 = $r5.<com.metrictrade.and.ef: int c>;

     label08:
        if $i3 != 0 goto label17;

        $z0 = 1;

     label09:
        if $z0 != 0 goto label15;

     label10:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        $i3 = $r4.<com.metrictrade.and.ec: int a>;

     label11:
        if $i3 != 1 goto label18;

     label12:
        $i3 = $r4.<com.metrictrade.and.ec: int b>;

     label13:
        if $i3 != 0 goto label18;

        $z0 = 1;

     label14:
        if $z0 == 0 goto label19;

     label15:
        r0.<com.metrictrade.and.dr: boolean e> = 1;

     label16:
        return -1;

     label17:
        $z0 = 0;

        goto label09;

     label18:
        $z0 = 0;

        goto label14;

     label19:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        $r2 = $r4.<com.metrictrade.and.ec: com.metrictrade.and.eh d>;

     label20:
        $z0 = virtualinvoke $r2.<com.metrictrade.and.eh: boolean b()>();

     label21:
        if $z0 == 0 goto label62;

     label22:
        $z0 = r0.<com.metrictrade.and.dr: boolean f>;

     label23:
        if $z0 == 0 goto label26;

        $r14 = new java.io.IOException;

     label24:
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");

        throw $r14;

     label25:
        $r6 := @caughtexception;

        throw $r6;

     label26:
        $z0 = r0.<com.metrictrade.and.dr: boolean b>;

     label27:
        if $z0 == 0 goto label36;

     label28:
        $r7 = r0.<com.metrictrade.and.dr: byte[] i>;

        $r8 = r0.<com.metrictrade.and.dr: byte[] i>;

        $i3 = lengthof $r8;

     label29:
        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int b(byte[],int,int)>($r7, 0, $i3);

     label30:
        r0.<com.metrictrade.and.dr: int g> = $i3;

     label31:
        $i3 = r0.<com.metrictrade.and.dr: int g>;

     label32:
        if $i3 != -1 goto label40;

        $r14 = new java.io.IOException;

     label33:
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>("Unexpected end of ZLIB input stream");

        throw $r14;

     label34:
        $r9 := @caughtexception;

        $r10 = virtualinvoke $r9.<java.lang.Exception: java.lang.String getMessage()>();

        $r11 = $r10;

        $r14 = new java.io.IOException;

        $r3 = $r14;

        if $r10 == null goto label65;

     label35:
        specialinvoke $r14.<java.io.IOException: void <init>(java.lang.String)>($r11);

        throw $r3;

     label36:
        $r7 = r0.<com.metrictrade.and.dr: byte[] i>;

        $r8 = r0.<com.metrictrade.and.dr: byte[] i>;

        $i3 = lengthof $r8;

     label37:
        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int c(byte[],int,int)>($r7, 0, $i3);

     label38:
        r0.<com.metrictrade.and.dr: int g> = $i3;

     label39:
        goto label31;

     label40:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        $r7 = r0.<com.metrictrade.and.dr: byte[] i>;

        $i3 = r0.<com.metrictrade.and.dr: int g>;

        $r2 = $r4.<com.metrictrade.and.ec: com.metrictrade.and.eh d>;

        $i4 = $r2.<com.metrictrade.and.eh: int b>;

        $i5 = $r2.<com.metrictrade.and.eh: int c>;

     label41:
        if $i4 >= $i5 goto label44;

        $r17 = new java.lang.IllegalStateException;

     label42:
        specialinvoke $r17.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Old input was not completely processed");

     label43:
        throw $r17;

     label44:
        $i4 = $i3;

        if $i3 < 0 goto label47;

     label45:
        $i5 = lengthof $r7;

     label46:
        if $i3 <= $i5 goto label50;

     label47:
        $r18 = new java.lang.ArrayIndexOutOfBoundsException;

     label48:
        specialinvoke $r18.<java.lang.ArrayIndexOutOfBoundsException: void <init>()>();

     label49:
        throw $r18;

     label50:
        $i5 = $i3 & 1;

        if $i5 == 0 goto label66;

     label51:
        $i5 = $r2.<com.metrictrade.and.eh: int d>;

        $b6 = $r7[0];

     label52:
        $s7 = (short) $b6;

        $s7 = $s7 & 255;

     label53:
        $i2 = $r2.<com.metrictrade.and.eh: int e>;

     label54:
        $i10 = (int) $s7;

        $i2 = $i10 << $i2;

        $i5 = $i5 | $i2;

     label55:
        $r2.<com.metrictrade.and.eh: int d> = $i5;

        $i5 = $r2.<com.metrictrade.and.eh: int e>;

     label56:
        $i5 = $i5 + 8;

     label57:
        $r2.<com.metrictrade.and.eh: int e> = $i5;

     label58:
        $b6 = 1;

     label59:
        $r2.<com.metrictrade.and.eh: byte[] a> = $r7;

        $r2.<com.metrictrade.and.eh: int b> = $b6;

        $r2.<com.metrictrade.and.eh: int c> = $i4;

        $l8 = $r4.<com.metrictrade.and.ec: long c>;

     label60:
        $l9 = (long) $i3;

        $l8 = $l9 + $l8;

     label61:
        $r4.<com.metrictrade.and.ec: long c> = $l8;

     label62:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

     label63:
        $i3 = virtualinvoke $r4.<com.metrictrade.and.ec: int a(byte[],int,int)>($r1, $i0, $i1);

     label64:
        if $i3 == 0 goto label05;

        return $i3;

     label65:
        $r11 = "Invalid ZLIB data format";

        goto label35;

     label66:
        $b6 = 0;

        goto label59;

        catch java.io.IOException from label20 to label21 with label25;
        catch java.io.IOException from label24 to label25 with label25;
        catch java.lang.Exception from label05 to label06 with label34;
        catch java.lang.Exception from label07 to label08 with label34;
        catch java.lang.Exception from label10 to label11 with label34;
        catch java.lang.Exception from label12 to label13 with label34;
        catch java.lang.Exception from label15 to label16 with label34;
        catch java.lang.Exception from label19 to label21 with label34;
        catch java.lang.Exception from label22 to label23 with label34;
        catch java.lang.Exception from label24 to label25 with label34;
        catch java.io.IOException from label29 to label30 with label25;
        catch java.io.IOException from label33 to label34 with label25;
        catch java.lang.Exception from label26 to label27 with label34;
        catch java.lang.Exception from label28 to label32 with label34;
        catch java.lang.Exception from label33 to label34 with label34;
        catch java.io.IOException from label37 to label38 with label25;
        catch java.io.IOException from label42 to label43 with label25;
        catch java.io.IOException from label48 to label49 with label25;
        catch java.io.IOException from label63 to label64 with label25;
        catch java.lang.Exception from label36 to label39 with label34;
        catch java.lang.Exception from label40 to label41 with label34;
        catch java.lang.Exception from label42 to label44 with label34;
        catch java.lang.Exception from label45 to label46 with label34;
        catch java.lang.Exception from label48 to label50 with label34;
        catch java.lang.Exception from label51 to label52 with label34;
        catch java.lang.Exception from label53 to label54 with label34;
        catch java.lang.Exception from label55 to label56 with label34;
        catch java.lang.Exception from label57 to label58 with label34;
        catch java.lang.Exception from label59 to label60 with label34;
        catch java.lang.Exception from label61 to label64 with label34;
    }

    private void a(boolean, boolean)
    {
        byte[] $r3;
        com.metrictrade.and.ec $r4;
        com.metrictrade.and.dr r0;
        com.metrictrade.and.dq $r5;
        com.metrictrade.and.cl $r1;
        int $i0;
        com.metrictrade.and.ck $r2;
        boolean $z0, $z1;

        r0 := @this: com.metrictrade.and.dr;

        $z0 := @parameter0: boolean;

        $z1 := @parameter1: boolean;

        r0.<com.metrictrade.and.dr: boolean b> = $z0;

        r0.<com.metrictrade.and.dr: boolean c> = $z1;

        r0.<com.metrictrade.and.dr: boolean f> = 1;

        if $z0 != 0 goto label1;

        if $z1 == 0 goto label7;

     label1:
        if $z0 == 0 goto label3;

        $r1 = r0.<com.metrictrade.and.dr: com.metrictrade.and.cl j>;

        if $r1 != null goto label2;

        $r2 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ck a>;

        $i0 = $r2.<com.metrictrade.and.ck: int b>;

        r0.<com.metrictrade.and.dr: int k> = $i0;

        $r1 = new com.metrictrade.and.cl;

        $r2 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ck a>;

        specialinvoke $r1.<com.metrictrade.and.cl: void <init>(com.metrictrade.and.ck)>($r2);

        r0.<com.metrictrade.and.dr: com.metrictrade.and.cl j> = $r1;

        $i0 = r0.<com.metrictrade.and.dr: int k>;

        $r3 = newarray (byte)[$i0];

        r0.<com.metrictrade.and.dr: byte[] l> = $r3;

        $i0 = r0.<com.metrictrade.and.dr: int k>;

        $r3 = newarray (byte)[$i0];

        r0.<com.metrictrade.and.dr: byte[] m> = $r3;

     label2:
        $i0 = r0.<com.metrictrade.and.dr: int k>;

        r0.<com.metrictrade.and.dr: int n> = $i0;

        $i0 = r0.<com.metrictrade.and.dr: int k>;

        r0.<com.metrictrade.and.dr: int p> = $i0;

        r0.<com.metrictrade.and.dr: int o> = 0;

        r0.<com.metrictrade.and.dr: boolean q> = 0;

        r0.<com.metrictrade.and.dr: boolean r> = 0;

     label3:
        if $z1 == 0 goto label7;

        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        if $r4 != null goto label6;

        $r5 = r0.<com.metrictrade.and.dr: com.metrictrade.and.dq I>;

        $r4 = interfaceinvoke $r5.<com.metrictrade.and.dq: com.metrictrade.and.ec o()>();

        r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d> = $r4;

     label4:
        $r3 = r0.<com.metrictrade.and.dr: byte[] i>;

        if $r3 != null goto label5;

        $r5 = r0.<com.metrictrade.and.dr: com.metrictrade.and.dq I>;

        $r3 = interfaceinvoke $r5.<com.metrictrade.and.dq: byte[] b(int)>(2);

        r0.<com.metrictrade.and.dr: byte[] i> = $r3;

     label5:
        r0.<com.metrictrade.and.dr: boolean e> = 0;

        r0.<com.metrictrade.and.dr: boolean f> = 0;

        r0.<com.metrictrade.and.dr: boolean c> = 1;

        return;

     label6:
        $r4 = r0.<com.metrictrade.and.dr: com.metrictrade.and.ec d>;

        virtualinvoke $r4.<com.metrictrade.and.ec: void a()>();

        goto label4;

     label7:
        return;
    }

    private int b()
    {
        byte[] $r1;
        short $s3;
        com.metrictrade.and.dr r0;
        byte $b2;
        int $i0, $i1;

        r0 := @this: com.metrictrade.and.dr;

     label1:
        $i0 = r0.<com.metrictrade.and.dr: int n>;

        $i1 = r0.<com.metrictrade.and.dr: int p>;

        if $i0 >= $i1 goto label2;

        $r1 = r0.<com.metrictrade.and.dr: byte[] m>;

        $i0 = r0.<com.metrictrade.and.dr: int n>;

        $i1 = $i0 + 1;

        r0.<com.metrictrade.and.dr: int n> = $i1;

        $b2 = $r1[$i0];

        $s3 = (short) $b2;

        $s3 = $s3 & 255;

        $i0 = (int) $s3;

        return $i0;

     label2:
        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int a()>();

        if $i0 != -1 goto label1;

        return -1;
    }

    private int b(byte[], int, int)
    {
        byte[] $r1, $r2;
        com.metrictrade.and.dr r0;
        byte $b6;
        int $i0, $i1, $i2, $i3, $i4, $i5;

        r0 := @this: com.metrictrade.and.dr;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = 0;

     label1:
        if $i2 < $i1 goto label3;

     label2:
        if $i2 > 0 goto label5;

        return -1;

     label3:
        $i4 = r0.<com.metrictrade.and.dr: int n>;

        $i3 = r0.<com.metrictrade.and.dr: int p>;

        if $i4 < $i3 goto label4;

        $i4 = specialinvoke r0.<com.metrictrade.and.dr: int a()>();

        if $i4 != -1 goto label1;

        goto label2;

     label4:
        $i4 = $i2 + 1;

        $i5 = $i2 + $i0;

        $r2 = r0.<com.metrictrade.and.dr: byte[] m>;

        $i2 = r0.<com.metrictrade.and.dr: int n>;

        $i3 = $i2 + 1;

        r0.<com.metrictrade.and.dr: int n> = $i3;

        $b6 = $r2[$i2];

        $r1[$i5] = $b6;

        $i2 = $i4;

        goto label1;

     label5:
        return $i2;
    }

    private int c()
    {
        byte[] $r1;
        short $s4;
        com.metrictrade.and.dr r0;
        byte $b3;
        int $i0, $i1, $i2;
        boolean $z0;

        r0 := @this: com.metrictrade.and.dr;

        $i1 = 0;

     label1:
        if $i1 < 60000 goto label2;

        return -1;

     label2:
        $i2 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = r0.<com.metrictrade.and.dr: int y>;

        if $i2 >= $i0 goto label3;

        $r1 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i1 + 1;

        r0.<com.metrictrade.and.dr: int t> = $i0;

        $b3 = $r1[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i1 = (int) $s4;

        return $i1;

     label3:
        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int d()>();

        if $i0 != -1 goto label4;

        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label6;

        $i1 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        if $i1 <= $i0 goto label7;

        $r1 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i1 + 1;

        r0.<com.metrictrade.and.dr: int t> = $i0;

        $b3 = $r1[$i1];

        $s4 = (short) $b3;

        $s4 = $s4 & 255;

        $i1 = (int) $s4;

        return $i1;

     label4:
        if $i1 <= 1 goto label5;

        staticinvoke <com.metrictrade.and.fj: void p()>();

     label5:
        $i1 = $i1 + 1;

        goto label1;

     label6:
        return -1;

     label7:
        return -1;
    }

    private int c(byte[], int, int)
    {
        byte[] $r1, $r2;
        com.metrictrade.and.dr r0;
        byte $b4;
        int $i0, $i1, $i2, $i3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.dr;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = r0.<com.metrictrade.and.dr: int t>;

        $i3 = r0.<com.metrictrade.and.dr: int y>;

        if $i2 >= $i3 goto label1;

        $i2 = r0.<com.metrictrade.and.dr: int u>;

        if $i2 != 0 goto label3;

     label1:
        $i2 = specialinvoke r0.<com.metrictrade.and.dr: int d()>();

        if $i2 != -1 goto label3;

        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label2;

        $i2 = r0.<com.metrictrade.and.dr: int u>;

        $i3 = r0.<com.metrictrade.and.dr: int t>;

        $i2 = $i2 - $i3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if $i1 <= 0 goto label2;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i2 = r0.<com.metrictrade.and.dr: int t>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1);

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i0 + $i1;

        r0.<com.metrictrade.and.dr: int t> = $i0;

        return $i1;

     label2:
        return -1;

     label3:
        $i2 = r0.<com.metrictrade.and.dr: int y>;

        $i3 = r0.<com.metrictrade.and.dr: int t>;

        $i2 = $i2 - $i3;

        $i1 = staticinvoke <java.lang.Math: int min(int,int)>($i1, $i2);

        if $i1 <= 0 goto label4;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i2 = r0.<com.metrictrade.and.dr: int t>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i2, $r1, $i0, $i1);

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i0 + $i1;

        r0.<com.metrictrade.and.dr: int t> = $i0;

        return $i1;

     label4:
        $i1 = virtualinvoke r0.<com.metrictrade.and.dr: int read()>();

        if $i1 != -1 goto label5;

        return -1;

     label5:
        $i1 = $i1 & 255;

        $b4 = (byte) $i1;

        $r1[$i0] = $b4;

        return 1;
    }

    private int d()
    {
        byte[] $r2, $r3;
        byte[][] $r1;
        com.metrictrade.and.dr r0;
        int $i0, $i1, $i2;
        boolean $z0;
        java.io.InputStream $r4;

        r0 := @this: com.metrictrade.and.dr;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = r0.<com.metrictrade.and.dr: int y>;

        if $i1 != $i0 goto label02;

        $i1 = r0.<com.metrictrade.and.dr: int z>;

        if $i1 < 0 goto label02;

        $i0 = r0.<com.metrictrade.and.dr: int z>;

        r0.<com.metrictrade.and.dr: int A> = $i0;

        if $i0 < 0 goto label01;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $r1 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $r2 = $r1[$i0];

        $i0 = lengthof $r2;

        $i1 = $i0 + $i1;

        r0.<com.metrictrade.and.dr: int t> = $i1;

     label01:
        specialinvoke r0.<com.metrictrade.and.dr: void e()>();

        return -1;

     label02:
        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label03;

        return -1;

     label03:
        $i1 = r0.<com.metrictrade.and.dr: int t>;

        if $i1 <= 0 goto label05;

        $i1 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        if $i1 <= $i0 goto label04;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $r3 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i2 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i2 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r3, 0, $i0);

     label04:
        $i1 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i1 = $i1 - $i0;

        r0.<com.metrictrade.and.dr: int u> = $i1;

        $i1 = r0.<com.metrictrade.and.dr: int y>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i1 = $i1 - $i0;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.metrictrade.and.dr: int y> = $i1;

        r0.<com.metrictrade.and.dr: int t> = 0;

     label05:
        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = lengthof $r2;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i1 = $i1 - $i0;

        $i0 = r0.<com.metrictrade.and.dr: int F>;

        if $i1 >= $i0 goto label06;

        $i0 = r0.<com.metrictrade.and.dr: int F>;

        $i1 = $i0 - $i1;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $r3 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = $i0 - $i1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r3, 0, $i0);

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = $i0 - $i1;

        r0.<com.metrictrade.and.dr: int u> = $i0;

        $i0 = r0.<com.metrictrade.and.dr: int y>;

        $i1 = $i0 - $i1;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.metrictrade.and.dr: int y> = $i1;

        $i1 = r0.<com.metrictrade.and.dr: int F>;

     label06:
        $r4 = r0.<com.metrictrade.and.dr: java.io.InputStream H>;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1);

        if $i0 != 0 goto label10;

        $r4 = r0.<com.metrictrade.and.dr: java.io.InputStream H>;

        $r2 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i1 = virtualinvoke $r4.<java.io.InputStream: int read(byte[],int,int)>($r2, $i0, $i1);

     label07:
        if $i1 != -1 goto label09;

        r0.<com.metrictrade.and.dr: boolean B> = 1;

     label08:
        specialinvoke r0.<com.metrictrade.and.dr: void e()>();

        return 0;

     label09:
        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i1 = $i1 + $i0;

        r0.<com.metrictrade.and.dr: int u> = $i1;

        goto label08;

     label10:
        $i1 = $i0;

        goto label07;
    }

    private void e()
    {
        byte[] $r1, $r2, $r4;
        byte[][] $r3;
        com.metrictrade.and.dr r0;
        byte $b3, $b6;
        int $i0, $i1, $i2, $i4, $i5, $i7;

        r0 := @this: com.metrictrade.and.dr;

        $r1 = r0.<com.metrictrade.and.dr: byte[] s>;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        if $i1 <= 0 goto label02;

        $i1 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        if $i1 <= $i0 goto label01;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i2 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i0 - $i2;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r1, $i1, $r1, 0, $i0);

     label01:
        $i1 = r0.<com.metrictrade.and.dr: int u>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i1 = $i1 - $i0;

        r0.<com.metrictrade.and.dr: int u> = $i1;

        $i1 = r0.<com.metrictrade.and.dr: int y>;

        $i0 = r0.<com.metrictrade.and.dr: int t>;

        $i1 = $i1 - $i0;

        $i1 = staticinvoke <java.lang.Math: int max(int,int)>(0, $i1);

        r0.<com.metrictrade.and.dr: int y> = $i1;

        r0.<com.metrictrade.and.dr: int t> = 0;

     label02:
        $i1 = r0.<com.metrictrade.and.dr: int y>;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        if $i1 >= 0 goto label03;

        $i1 = 0;

     label03:
        $i2 = -1;

     label04:
        if $i2 != -1 goto label05;

        if $i1 < $i0 goto label07;

     label05:
        r0.<com.metrictrade.and.dr: int w> = -1;

        r0.<com.metrictrade.and.dr: int v> = -1;

        r0.<com.metrictrade.and.dr: int z> = $i2;

        if $i2 != -1 goto label19;

        if $i1 <= 0 goto label18;

        $i0 = $i1 + -1;

        $b3 = $r1[$i0];

        $i0 = (int) $b3;

        if $i0 != 60 goto label18;

        $i1 = $i1 + -1;

     label06:
        r0.<com.metrictrade.and.dr: int y> = $i1;

        return;

     label07:
        $b3 = $r1[$i1];

        $i4 = (int) $b3;

        if $i4 != 60 goto label09;

        r0.<com.metrictrade.and.dr: int y> = $i1;

        r0.<com.metrictrade.and.dr: int v> = 0;

        r0.<com.metrictrade.and.dr: int w> = 0;

        r0.<com.metrictrade.and.dr: int x> = 0;

     label08:
        $i1 = $i1 + 1;

        goto label04;

     label09:
        $b3 = $r1[$i1];

        $i4 = (int) $b3;

        if $i4 != 62 goto label14;

        if $i1 <= 2 goto label16;

        $i4 = r0.<com.metrictrade.and.dr: int v>;

        $r2 = <com.metrictrade.and.dr: byte[] P>;

        $i5 = lengthof $r2;

        if $i4 != $i5 goto label16;

        $i4 = r0.<com.metrictrade.and.dr: int w>;

        if $i4 != 2 goto label16;

        $i4 = 0;

     label10:
        $i5 = r0.<com.metrictrade.and.dr: int E>;

        if $i4 < $i5 goto label12;

     label11:
        r0.<com.metrictrade.and.dr: int w> = -1;

        r0.<com.metrictrade.and.dr: int v> = -1;

        goto label08;

     label12:
        $i5 = $i1 + -1;

        $b3 = $r1[$i5];

        $r3 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $r2 = $r3[$i4];

        $r3 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $r4 = $r3[$i4];

        $i5 = lengthof $r4;

        $i5 = $i5 + -2;

        $b6 = $r2[$i5];

        $i5 = (int) $b3;

        $i7 = (int) $b6;

        if $i5 != $i7 goto label13;

        $i5 = $i1 + -2;

        $b3 = $r1[$i5];

        $r3 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $r2 = $r3[$i4];

        $r3 = r0.<com.metrictrade.and.dr: byte[][] C>;

        $r4 = $r3[$i4];

        $i5 = lengthof $r4;

        $i5 = $i5 + -3;

        $b6 = $r2[$i5];

        $i5 = (int) $b3;

        $i7 = (int) $b6;

        if $i5 != $i7 goto label13;

        $i2 = r0.<com.metrictrade.and.dr: int x>;

        $i5 = r0.<com.metrictrade.and.dr: int E>;

        $i2 = $i2 * $i5;

        $i2 = $i4 + $i2;

        goto label11;

     label13:
        $i4 = $i4 + 1;

        goto label10;

     label14:
        $b3 = $r1[$i1];

        $i4 = (int) $b3;

        if $i4 != 47 goto label15;

        $i4 = r0.<com.metrictrade.and.dr: int v>;

        if $i4 != 0 goto label15;

        $i4 = r0.<com.metrictrade.and.dr: int y>;

        $i5 = $i1 + -1;

        if $i4 != $i5 goto label15;

        r0.<com.metrictrade.and.dr: int x> = 1;

        goto label08;

     label15:
        $i4 = r0.<com.metrictrade.and.dr: int v>;

        $r2 = <com.metrictrade.and.dr: byte[] P>;

        $i5 = lengthof $r2;

        if $i4 != $i5 goto label17;

        $i4 = r0.<com.metrictrade.and.dr: int w>;

        $i5 = $i4 + 1;

        r0.<com.metrictrade.and.dr: int w> = $i5;

        if $i4 < 2 goto label08;

     label16:
        goto label11;

     label17:
        $i4 = r0.<com.metrictrade.and.dr: int v>;

        if $i4 < 0 goto label16;

        $r2 = <com.metrictrade.and.dr: byte[] P>;

        $i4 = r0.<com.metrictrade.and.dr: int v>;

        $b3 = $r2[$i4];

        $b6 = $r1[$i1];

        $i4 = (int) $b3;

        $i5 = (int) $b6;

        if $i4 != $i5 goto label16;

        $i4 = r0.<com.metrictrade.and.dr: int v>;

        $i4 = $i4 + 1;

        r0.<com.metrictrade.and.dr: int v> = $i4;

        goto label08;

     label18:
        goto label06;

     label19:
        return;
    }

    private int f()
    {
        int i0;
        com.metrictrade.and.dr r0;

        r0 := @this: com.metrictrade.and.dr;

        i0 = r0.<com.metrictrade.and.dr: int A>;

        r0.<com.metrictrade.and.dr: int A> = -1;

        return i0;
    }

    public final int available()
    {
        com.metrictrade.and.dr r0;
        int $i0, $i1;
        java.io.IOException $r2;
        boolean $z0;
        java.io.InputStream $r1;

        r0 := @this: com.metrictrade.and.dr;

        $z0 = r0.<com.metrictrade.and.dr: boolean c>;

        if $z0 == 0 goto label3;

        $z0 = r0.<com.metrictrade.and.dr: boolean f>;

        if $z0 == 0 goto label1;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");

        throw $r2;

     label1:
        $z0 = r0.<com.metrictrade.and.dr: boolean e>;

        if $z0 == 0 goto label2;

        return 0;

     label2:
        return 1;

     label3:
        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label4;

        $i0 = r0.<com.metrictrade.and.dr: int u>;

        $i1 = r0.<com.metrictrade.and.dr: int t>;

        $i0 = $i0 - $i1;

        if $i0 > 0 goto label5;

        return -1;

     label4:
        $r1 = r0.<com.metrictrade.and.dr: java.io.InputStream H>;

        $i0 = virtualinvoke $r1.<java.io.InputStream: int available()>();

     label5:
        return $i0;
    }

    public final void close()
    {
        com.metrictrade.and.dr r0;
        java.io.InputStream $r1;

        r0 := @this: com.metrictrade.and.dr;

        r0.<com.metrictrade.and.dr: boolean c> = 0;

        r0.<com.metrictrade.and.dr: boolean b> = 0;

        r0.<com.metrictrade.and.dr: boolean e> = 0;

        r0.<com.metrictrade.and.dr: boolean f> = 0;

        r0.<com.metrictrade.and.dr: int g> = 0;

        $r1 = r0.<com.metrictrade.and.dr: java.io.InputStream H>;

        virtualinvoke $r1.<java.io.InputStream: void close()>();

        specialinvoke r0.<java.io.InputStream: void close()>();

        return;
    }

    public final int read()
    {
        byte[] $r1;
        java.io.IOException $r2;
        short $s1;
        com.metrictrade.and.dr r0;
        byte $b4;
        int $i0, $i2, $i3;
        boolean $z0, $z1;

        r0 := @this: com.metrictrade.and.dr;

     label01:
        $z0 = r0.<com.metrictrade.and.dr: boolean c>;

        if $z0 == 0 goto label07;

        $z0 = r0.<com.metrictrade.and.dr: boolean f>;

        if $z0 == 0 goto label02;

        $r2 = new java.io.IOException;

        specialinvoke $r2.<java.io.IOException: void <init>(java.lang.String)>("Stream closed");

        throw $r2;

     label02:
        $r1 = r0.<com.metrictrade.and.dr: byte[] h>;

        if $r1 != null goto label03;

        $r1 = newarray (byte)[1];

        r0.<com.metrictrade.and.dr: byte[] h> = $r1;

     label03:
        $r1 = r0.<com.metrictrade.and.dr: byte[] h>;

        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int a(byte[],int,int)>($r1, 0, 1);

        if $i0 != -1 goto label06;

        $s1 = -1;

     label04:
        $i0 = $s1;

     label05:
        if $i0 != -1 goto label12;

        specialinvoke r0.<com.metrictrade.and.dr: void a(boolean,boolean)>(0, 0);

        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label09;

        $i2 = r0.<com.metrictrade.and.dr: int u>;

        $i3 = r0.<com.metrictrade.and.dr: int t>;

        if $i2 > $i3 goto label09;

        return -1;

     label06:
        $r1 = r0.<com.metrictrade.and.dr: byte[] h>;

        $b4 = $r1[0];

        $s1 = $b4 & 255;

        goto label04;

     label07:
        $z0 = r0.<com.metrictrade.and.dr: boolean b>;

        if $z0 == 0 goto label08;

        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int b()>();

        goto label05;

     label08:
        $i0 = specialinvoke r0.<com.metrictrade.and.dr: int c()>();

        goto label05;

     label09:
        $i2 = specialinvoke r0.<com.metrictrade.and.dr: int f()>();

        if $i2 < 0 goto label12;

        if $i2 == 0 goto label13;

        if $i2 == 2 goto label13;

        $z0 = 0;

     label10:
        if $i2 == 1 goto label14;

        if $i2 == 2 goto label14;

        $z1 = 0;

     label11:
        specialinvoke r0.<com.metrictrade.and.dr: void a(boolean,boolean)>($z0, $z1);

     label12:
        if $i0 == -1 goto label01;

        return $i0;

     label13:
        $z0 = 1;

        goto label10;

     label14:
        $z1 = 1;

        goto label11;
    }

    public final int read(byte[], int, int)
    {
        byte[] $r1;
        com.metrictrade.and.dr r0;
        int $i0, $i1, $i2, $i3, $i4;
        boolean $z0, $z1;

        r0 := @this: com.metrictrade.and.dr;

        $r1 := @parameter0: byte[];

        $i0 := @parameter1: int;

        $i1 := @parameter2: int;

        $i2 = -1;

     label01:
        $z0 = r0.<com.metrictrade.and.dr: boolean c>;

        if $z0 == 0 goto label03;

        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int a(byte[],int,int)>($r1, $i0, $i1);

     label02:
        if $i3 != -1 goto label11;

        specialinvoke r0.<com.metrictrade.and.dr: void a(boolean,boolean)>(0, 0);

        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label05;

        $i3 = r0.<com.metrictrade.and.dr: int u>;

        $i4 = r0.<com.metrictrade.and.dr: int t>;

        if $i3 > $i4 goto label05;

        return -1;

     label03:
        $z0 = r0.<com.metrictrade.and.dr: boolean b>;

        if $z0 == 0 goto label04;

        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int b(byte[],int,int)>($r1, $i0, $i1);

        goto label02;

     label04:
        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int c(byte[],int,int)>($r1, $i0, $i1);

        goto label02;

     label05:
        $i3 = specialinvoke r0.<com.metrictrade.and.dr: int f()>();

        if $i3 < 0 goto label08;

        if $i3 == 0 goto label09;

        if $i3 == 2 goto label09;

        $z0 = 0;

     label06:
        if $i3 == 1 goto label10;

        if $i3 == 2 goto label10;

        $z1 = 0;

     label07:
        specialinvoke r0.<com.metrictrade.and.dr: void a(boolean,boolean)>($z0, $z1);

     label08:
        if $i2 <= 0 goto label01;

        return $i2;

     label09:
        $z0 = 1;

        goto label06;

     label10:
        $z1 = 1;

        goto label07;

     label11:
        if $i2 >= 0 goto label12;

        $i2 = $i3;

        goto label08;

     label12:
        $i2 = $i2 + $i3;

        goto label08;
    }

    public final long skip(long)
    {
        byte[] $r1;
        long $l0, $l1, $l4;
        com.metrictrade.and.dr r0;
        byte $b2;
        int $i3;
        boolean $z0;

        r0 := @this: com.metrictrade.and.dr;

        $l0 := @parameter0: long;

        $z0 = r0.<com.metrictrade.and.dr: boolean B>;

        if $z0 == 0 goto label1;

        return -1L;

     label1:
        $r1 = <com.metrictrade.and.dr: byte[] G>;

        if $r1 != null goto label2;

        $r1 = newarray (byte)[512];

        <com.metrictrade.and.dr: byte[] G> = $r1;

     label2:
        $l1 = 0L;

     label3:
        $b2 = $l0 cmp 0L;

        $i3 = (int) $b2;

        if $i3 > 0 goto label4;

        return $l1;

     label4:
        $r1 = <com.metrictrade.and.dr: byte[] G>;

        $i3 = lengthof $r1;

        $l4 = (long) $i3;

        $l4 = staticinvoke <java.lang.Math: long min(long,long)>($l0, $l4);

        $i3 = (int) $l4;

        $r1 = <com.metrictrade.and.dr: byte[] G>;

        $i3 = virtualinvoke r0.<com.metrictrade.and.dr: int read(byte[],int,int)>($r1, 0, $i3);

        if $i3 <= 0 goto label5;

        $l4 = (long) $i3;

        $l0 = $l0 - $l4;

        $l4 = (long) $i3;

        $l1 = $l1 + $l4;

     label5:
        if $i3 >= 0 goto label3;

        $b2 = $l1 cmp 0L;

        $i3 = (int) $b2;

        if $i3 <= 0 goto label6;

        return $l1;

     label6:
        return -1L;
    }
}
