public final class com.metrictrade.and.am extends java.lang.Object
{
    public static final char[] c;
    public static final char[] d;
    public static final char[] e;
    private static int[] f;
    public char[] a;
    public int b;

    static void <clinit>()
    {
        char[] $r1;
        int[] $r0;

        $r0 = newarray (int)[10];

        $r0[0] = 9;

        $r0[1] = 99;

        $r0[2] = 999;

        $r0[3] = 9999;

        $r0[4] = 99999;

        $r0[5] = 999999;

        $r0[6] = 9999999;

        $r0[7] = 99999999;

        $r0[8] = 999999999;

        $r0[9] = 2147483647;

        <com.metrictrade.and.am: int[] f> = $r0;

        $r1 = newarray (char)[36];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 97;

        $r1[11] = 98;

        $r1[12] = 99;

        $r1[13] = 100;

        $r1[14] = 101;

        $r1[15] = 102;

        $r1[16] = 103;

        $r1[17] = 104;

        $r1[18] = 105;

        $r1[19] = 106;

        $r1[20] = 107;

        $r1[21] = 108;

        $r1[22] = 109;

        $r1[23] = 110;

        $r1[24] = 111;

        $r1[25] = 112;

        $r1[26] = 113;

        $r1[27] = 114;

        $r1[28] = 115;

        $r1[29] = 116;

        $r1[30] = 117;

        $r1[31] = 118;

        $r1[32] = 119;

        $r1[33] = 120;

        $r1[34] = 121;

        $r1[35] = 122;

        <com.metrictrade.and.am: char[] c> = $r1;

        $r1 = newarray (char)[100];

        $r1[0] = 48;

        $r1[1] = 48;

        $r1[2] = 48;

        $r1[3] = 48;

        $r1[4] = 48;

        $r1[5] = 48;

        $r1[6] = 48;

        $r1[7] = 48;

        $r1[8] = 48;

        $r1[9] = 48;

        $r1[10] = 49;

        $r1[11] = 49;

        $r1[12] = 49;

        $r1[13] = 49;

        $r1[14] = 49;

        $r1[15] = 49;

        $r1[16] = 49;

        $r1[17] = 49;

        $r1[18] = 49;

        $r1[19] = 49;

        $r1[20] = 50;

        $r1[21] = 50;

        $r1[22] = 50;

        $r1[23] = 50;

        $r1[24] = 50;

        $r1[25] = 50;

        $r1[26] = 50;

        $r1[27] = 50;

        $r1[28] = 50;

        $r1[29] = 50;

        $r1[30] = 51;

        $r1[31] = 51;

        $r1[32] = 51;

        $r1[33] = 51;

        $r1[34] = 51;

        $r1[35] = 51;

        $r1[36] = 51;

        $r1[37] = 51;

        $r1[38] = 51;

        $r1[39] = 51;

        $r1[40] = 52;

        $r1[41] = 52;

        $r1[42] = 52;

        $r1[43] = 52;

        $r1[44] = 52;

        $r1[45] = 52;

        $r1[46] = 52;

        $r1[47] = 52;

        $r1[48] = 52;

        $r1[49] = 52;

        $r1[50] = 53;

        $r1[51] = 53;

        $r1[52] = 53;

        $r1[53] = 53;

        $r1[54] = 53;

        $r1[55] = 53;

        $r1[56] = 53;

        $r1[57] = 53;

        $r1[58] = 53;

        $r1[59] = 53;

        $r1[60] = 54;

        $r1[61] = 54;

        $r1[62] = 54;

        $r1[63] = 54;

        $r1[64] = 54;

        $r1[65] = 54;

        $r1[66] = 54;

        $r1[67] = 54;

        $r1[68] = 54;

        $r1[69] = 54;

        $r1[70] = 55;

        $r1[71] = 55;

        $r1[72] = 55;

        $r1[73] = 55;

        $r1[74] = 55;

        $r1[75] = 55;

        $r1[76] = 55;

        $r1[77] = 55;

        $r1[78] = 55;

        $r1[79] = 55;

        $r1[80] = 56;

        $r1[81] = 56;

        $r1[82] = 56;

        $r1[83] = 56;

        $r1[84] = 56;

        $r1[85] = 56;

        $r1[86] = 56;

        $r1[87] = 56;

        $r1[88] = 56;

        $r1[89] = 56;

        $r1[90] = 57;

        $r1[91] = 57;

        $r1[92] = 57;

        $r1[93] = 57;

        $r1[94] = 57;

        $r1[95] = 57;

        $r1[96] = 57;

        $r1[97] = 57;

        $r1[98] = 57;

        $r1[99] = 57;

        <com.metrictrade.and.am: char[] d> = $r1;

        $r1 = newarray (char)[100];

        $r1[0] = 48;

        $r1[1] = 49;

        $r1[2] = 50;

        $r1[3] = 51;

        $r1[4] = 52;

        $r1[5] = 53;

        $r1[6] = 54;

        $r1[7] = 55;

        $r1[8] = 56;

        $r1[9] = 57;

        $r1[10] = 48;

        $r1[11] = 49;

        $r1[12] = 50;

        $r1[13] = 51;

        $r1[14] = 52;

        $r1[15] = 53;

        $r1[16] = 54;

        $r1[17] = 55;

        $r1[18] = 56;

        $r1[19] = 57;

        $r1[20] = 48;

        $r1[21] = 49;

        $r1[22] = 50;

        $r1[23] = 51;

        $r1[24] = 52;

        $r1[25] = 53;

        $r1[26] = 54;

        $r1[27] = 55;

        $r1[28] = 56;

        $r1[29] = 57;

        $r1[30] = 48;

        $r1[31] = 49;

        $r1[32] = 50;

        $r1[33] = 51;

        $r1[34] = 52;

        $r1[35] = 53;

        $r1[36] = 54;

        $r1[37] = 55;

        $r1[38] = 56;

        $r1[39] = 57;

        $r1[40] = 48;

        $r1[41] = 49;

        $r1[42] = 50;

        $r1[43] = 51;

        $r1[44] = 52;

        $r1[45] = 53;

        $r1[46] = 54;

        $r1[47] = 55;

        $r1[48] = 56;

        $r1[49] = 57;

        $r1[50] = 48;

        $r1[51] = 49;

        $r1[52] = 50;

        $r1[53] = 51;

        $r1[54] = 52;

        $r1[55] = 53;

        $r1[56] = 54;

        $r1[57] = 55;

        $r1[58] = 56;

        $r1[59] = 57;

        $r1[60] = 48;

        $r1[61] = 49;

        $r1[62] = 50;

        $r1[63] = 51;

        $r1[64] = 52;

        $r1[65] = 53;

        $r1[66] = 54;

        $r1[67] = 55;

        $r1[68] = 56;

        $r1[69] = 57;

        $r1[70] = 48;

        $r1[71] = 49;

        $r1[72] = 50;

        $r1[73] = 51;

        $r1[74] = 52;

        $r1[75] = 53;

        $r1[76] = 54;

        $r1[77] = 55;

        $r1[78] = 56;

        $r1[79] = 57;

        $r1[80] = 48;

        $r1[81] = 49;

        $r1[82] = 50;

        $r1[83] = 51;

        $r1[84] = 52;

        $r1[85] = 53;

        $r1[86] = 54;

        $r1[87] = 55;

        $r1[88] = 56;

        $r1[89] = 57;

        $r1[90] = 48;

        $r1[91] = 49;

        $r1[92] = 50;

        $r1[93] = 51;

        $r1[94] = 52;

        $r1[95] = 53;

        $r1[96] = 54;

        $r1[97] = 55;

        $r1[98] = 56;

        $r1[99] = 57;

        <com.metrictrade.and.am: char[] e> = $r1;

        return;
    }

    public void <init>()
    {
        char[] $r1;
        com.metrictrade.and.am r0;

        r0 := @this: com.metrictrade.and.am;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[64];

        r0.<com.metrictrade.and.am: char[] a> = $r1;

        return;
    }

    public void <init>(int)
    {
        int $i0;
        char[] $r1;
        com.metrictrade.and.am r0;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = newarray (char)[$i0];

        r0.<com.metrictrade.and.am: char[] a> = $r1;

        return;
    }

    public void <init>(java.lang.String)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.am;

        $r1 := @parameter0: java.lang.String;

        $i1 = 64;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        if $r1 != null goto label3;

        $i0 = 0;

     label1:
        if $i0 >= 64 goto label4;

     label2:
        $r2 = newarray (char)[$i1];

        r0.<com.metrictrade.and.am: char[] a> = $r2;

        virtualinvoke r0.<com.metrictrade.and.am: com.metrictrade.and.am a(java.lang.String)>($r1);

        return;

     label3:
        $i0 = virtualinvoke $r1.<java.lang.String: int length()>();

        goto label1;

     label4:
        if $i0 >= 512 goto label5;

        $i1 = 512;

        goto label2;

     label5:
        if $i0 >= 1024 goto label6;

        $i1 = 1024;

        goto label2;

     label6:
        $i1 = $i0 / 4096;

        $i1 = $i1 + 1;

        $i1 = $i1 * 4096;

        goto label2;
    }

    private static void a(int, int, char[])
    {
        char $c4, $c6;
        int $i0, $i1, $i2, $i3, $i5;
        char[] $r0, $r1;

        $i1 := @parameter0: int;

        $i2 := @parameter1: int;

        $r0 := @parameter2: char[];

        if $i1 >= 0 goto label5;

        $i3 = neg $i1;

        $c4 = 45;

        $i1 = $i2;

     label1:
        if $i3 >= 65536 goto label3;

     label2:
        $i2 = 52429 * $i3;

        $i2 = $i2 >>> 19;

        $i5 = $i2 << 3;

        $i0 = $i2 << 1;

        $i0 = $i5 + $i0;

        $i3 = $i3 - $i0;

        $i1 = $i1 + -1;

        $r1 = <com.metrictrade.and.am: char[] c>;

        $c6 = $r1[$i3];

        $r0[$i1] = $c6;

        if $i2 != 0 goto label4;

        if $c4 == 0 goto label6;

        $i1 = $i1 + -1;

        $r0[$i1] = $c4;

        return;

     label3:
        $i2 = $i3 / 100;

        $i0 = $i2 << 6;

        $i5 = $i2 << 5;

        $i0 = $i0 + $i5;

        $i5 = $i2 << 2;

        $i0 = $i0 + $i5;

        $i3 = $i3 - $i0;

        $i1 = $i1 + -1;

        $r1 = <com.metrictrade.and.am: char[] e>;

        $c6 = $r1[$i3];

        $r0[$i1] = $c6;

        $i1 = $i1 + -1;

        $r1 = <com.metrictrade.and.am: char[] d>;

        $c6 = $r1[$i3];

        $r0[$i1] = $c6;

        $i3 = $i2;

        goto label1;

     label4:
        $i3 = $i2;

        goto label2;

     label5:
        $c4 = 0;

        $i3 = $i1;

        $i1 = $i2;

        goto label1;

     label6:
        return;
    }

    private static void a(long, int, char[])
    {
        long $l0, $l9, $l10, $l11;
        char $c3, $c8;
        byte $b2;
        int $i1, $i4, $i5, $i6, $i7;
        char[] $r0, $r1;

        $l0 := @parameter0: long;

        $i1 := @parameter1: int;

        $r0 := @parameter2: char[];

        $b2 = $l0 cmp 0L;

        $i4 = (int) $b2;

        if $i4 >= 0 goto label7;

        $l0 = neg $l0;

        $c3 = 45;

        $i4 = $i1;

     label1:
        $b2 = $l0 cmp 2147483647L;

        $i1 = (int) $b2;

        if $i1 > 0 goto label4;

        $i1 = (int) $l0;

     label2:
        if $i1 >= 65536 goto label5;

     label3:
        $i5 = 52429 * $i1;

        $i5 = $i5 >>> 19;

        $i6 = $i5 << 3;

        $i7 = $i5 << 1;

        $i6 = $i6 + $i7;

        $i1 = $i1 - $i6;

        $i4 = $i4 + -1;

        $r1 = <com.metrictrade.and.am: char[] c>;

        $c8 = $r1[$i1];

        $r0[$i4] = $c8;

        if $i5 != 0 goto label6;

        if $c3 == 0 goto label8;

        $i1 = $i4 + -1;

        $r0[$i1] = $c3;

        return;

     label4:
        $l9 = $l0 / 100L;

        $l10 = $l9 << 6;

        $l11 = $l9 << 5;

        $l10 = $l10 + $l11;

        $l11 = $l9 << 2;

        $l10 = $l10 + $l11;

        $l0 = $l0 - $l10;

        $i1 = (int) $l0;

        $i4 = $i4 + -1;

        $r1 = <com.metrictrade.and.am: char[] e>;

        $c8 = $r1[$i1];

        $r0[$i4] = $c8;

        $i4 = $i4 + -1;

        $r1 = <com.metrictrade.and.am: char[] d>;

        $c8 = $r1[$i1];

        $r0[$i4] = $c8;

        $l0 = $l9;

        goto label1;

     label5:
        $i5 = $i1 / 100;

        $i6 = $i5 << 6;

        $i7 = $i5 << 5;

        $i6 = $i6 + $i7;

        $i7 = $i5 << 2;

        $i6 = $i6 + $i7;

        $i1 = $i1 - $i6;

        $i4 = $i4 + -1;

        $r1 = <com.metrictrade.and.am: char[] e>;

        $c8 = $r1[$i1];

        $r0[$i4] = $c8;

        $i4 = $i4 + -1;

        $r1 = <com.metrictrade.and.am: char[] d>;

        $c8 = $r1[$i1];

        $r0[$i4] = $c8;

        $i1 = $i5;

        goto label2;

     label6:
        $i1 = $i5;

        goto label3;

     label7:
        $c3 = 0;

        $i4 = $i1;

        goto label1;

     label8:
        return;
    }

    public static int b(long)
    {
        byte $b1;
        int $i2, $i4;
        long $l0, $l3;

        $l0 := @parameter0: long;

        $i2 = 1;

        $l3 = 10L;

     label1:
        if $i2 < 19 goto label2;

        return 19;

     label2:
        $b1 = $l0 cmp $l3;

        $i4 = (int) $b1;

        if $i4 < 0 goto label3;

        $l3 = $l3 * 10L;

        $i2 = $i2 + 1;

        goto label1;

     label3:
        return $i2;
    }

    private static int f(int)
    {
        int[] $r0;
        int $i0, $i1, $i2;

        $i0 := @parameter0: int;

        $i1 = 0;

     label1:
        $r0 = <com.metrictrade.and.am: int[] f>;

        $i2 = $r0[$i1];

        if $i0 > $i2 goto label2;

        $i0 = $i1 + 1;

        return $i0;

     label2:
        $i1 = $i1 + 1;

        goto label1;
    }

    public final char a(int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;
        char $c2;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r1;

     label2:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $c2 = $r2[$i0];

        return $c2;
    }

    public final com.metrictrade.and.am a(char)
    {
        com.metrictrade.and.am r0;
        int $i1, $i2;
        char[] $r1;
        char $c0;

        r0 := @this: com.metrictrade.and.am;

        $c0 := @parameter0: char;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + 1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = lengthof $r1;

        if $i1 <= $i2 goto label1;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + 1;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i1);

     label1:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i2 + 1;

        r0.<com.metrictrade.and.am: int b> = $i1;

        $r1[$i2] = $c0;

        return r0;
    }

    public final com.metrictrade.and.am a(double)
    {
        long $l3, $l4;
        byte $b1;
        com.metrictrade.and.am r0;
        int $i0, $i2, $i5, $i6;
        char[] $r1;
        double $d0;

        r0 := @this: com.metrictrade.and.am;

        $d0 := @parameter0: double;

        $b1 = $d0 cmpg 0.0;

        $i2 = (int) $b1;

        if $i2 >= 0 goto label2;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 + 1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = lengthof $r1;

        if $i2 <= $i0 goto label1;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 + 1;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i2);

     label1:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i0 = $i2 + 1;

        r0.<com.metrictrade.and.am: int b> = $i0;

        $r1[$i2] = 45;

        $d0 = neg $d0;

     label2:
        $d0 = 10000.0 * $d0;

        $d0 = $d0 + 0.5;

        $l3 = (long) $d0;

        $l4 = $l3 % 10000L;

        $i2 = (int) $l4;

        $l3 = $l3 / 10000L;

        $i5 = r0.<com.metrictrade.and.am: int b>;

        $i0 = staticinvoke <com.metrictrade.and.am: int b(long)>($l3);

        $i0 = $i5 + $i0;

        $i5 = $i0 + 5;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i6 = lengthof $r1;

        if $i5 <= $i6 goto label3;

        $i5 = $i0 + 5;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i5);

     label3:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <com.metrictrade.and.am: void a(long,int,char[])>($l3, $i0, $r1);

        r0.<com.metrictrade.and.am: int b> = $i0;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = r0.<com.metrictrade.and.am: int b>;

        $i5 = $i0 + 1;

        r0.<com.metrictrade.and.am: int b> = $i5;

        $r1[$i0] = 46;

        $l3 = (long) $i2;

        virtualinvoke r0.<com.metrictrade.and.am: com.metrictrade.and.am a(long,int,int)>($l3, 1, 4);

        return r0;
    }

    public final com.metrictrade.and.am a(int, int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        if $i0 != -2147483648 goto label1;

        virtualinvoke r0.<com.metrictrade.and.am: com.metrictrade.and.am a(java.lang.String)>("-2147483648");

        return r0;

     label1:
        if $i0 < 0 goto label4;

        $i2 = staticinvoke <com.metrictrade.and.am: int f(int)>($i0);

     label2:
        $i3 = $i1 + -1;

        if $i2 < $i1 goto label5;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i2 + $i1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = lengthof $r1;

        if $i1 <= $i2 goto label3;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i1);

     label3:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <com.metrictrade.and.am: void a(int,int,char[])>($i0, $i1, $r1);

        r0.<com.metrictrade.and.am: int b> = $i1;

        return r0;

     label4:
        $i2 = neg $i0;

        $i2 = staticinvoke <com.metrictrade.and.am: int f(int)>($i2);

        $i2 = $i2 + 1;

        goto label2;

     label5:
        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + 1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i4 = lengthof $r1;

        if $i1 <= $i4 goto label6;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + 1;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i1);

     label6:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i4 = $i1 + 1;

        r0.<com.metrictrade.and.am: int b> = $i4;

        $r1[$i1] = 48;

        $i1 = $i3;

        goto label2;
    }

    public final com.metrictrade.and.am a(long)
    {
        byte $b1;
        com.metrictrade.and.am r0;
        int $i2, $i3;
        char[] $r1;
        long $l0, $l4;

        r0 := @this: com.metrictrade.and.am;

        $l0 := @parameter0: long;

        $b1 = $l0 cmp -9223372036854775808L;

        if $b1 != 0 goto label1;

        virtualinvoke r0.<com.metrictrade.and.am: com.metrictrade.and.am a(java.lang.String)>("-9223372036854775808");

        return r0;

     label1:
        $b1 = $l0 cmp 0L;

        $i2 = (int) $b1;

        if $i2 < 0 goto label4;

        $i2 = staticinvoke <com.metrictrade.and.am: int b(long)>($l0);

     label2:
        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 + $i3;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i3 = lengthof $r1;

        if $i2 <= $i3 goto label3;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i2);

     label3:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <com.metrictrade.and.am: void a(long,int,char[])>($l0, $i2, $r1);

        r0.<com.metrictrade.and.am: int b> = $i2;

        return r0;

     label4:
        $l4 = neg $l0;

        $i2 = staticinvoke <com.metrictrade.and.am: int b(long)>($l4);

        $i2 = $i2 + 1;

        goto label2;
    }

    public final com.metrictrade.and.am a(long, int, int)
    {
        long $l0;
        char $c5;
        com.metrictrade.and.am r0;
        int $i1, $i2, $i3, $i4;
        char[] $r1;

        r0 := @this: com.metrictrade.and.am;

        $l0 := @parameter0: long;

        $i2 := @parameter1: int;

        $i1 := @parameter2: int;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i3 = $i3 + $i1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i4 = lengthof $r1;

        if $i3 <= $i4 goto label1;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i3 = $i3 + $i1;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i3);

     label1:
        $i3 = 0;

     label2:
        if $i3 < $i1 goto label5;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i3 = $i3 + $i1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <com.metrictrade.and.am: void a(long,int,char[])>($l0, $i3, $r1);

     label3:
        if $i1 > $i2 goto label6;

     label4:
        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i1 + $i2;

        r0.<com.metrictrade.and.am: int b> = $i2;

        return r0;

     label5:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i4 = r0.<com.metrictrade.and.am: int b>;

        $i4 = $i4 + $i3;

        $r1[$i4] = 48;

        $i3 = $i3 + 1;

        goto label2;

     label6:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i3 = $i3 + $i1;

        $i3 = $i3 + -1;

        $c5 = $r1[$i3];

        $i3 = (int) $c5;

        if $i3 == 48 goto label7;

        $i2 = $i1;

        goto label4;

     label7:
        $i1 = $i1 + -1;

        goto label3;
    }

    public final com.metrictrade.and.am a(java.lang.String)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2;
        char[] $r1;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.am;

        $r2 := @parameter0: java.lang.String;

        if $r2 != null goto label1;

        $r2 = "null";

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 + $i1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = lengthof $r1;

        if $i2 <= $i0 goto label2;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i2);

     label2:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = r0.<com.metrictrade.and.am: int b>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, $r1, $i0);

        r0.<com.metrictrade.and.am: int b> = $i2;

        return r0;
    }

    public final void a(int, char)
    {
        com.metrictrade.and.am r0;
        int $i0, $i2;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;
        char $c1;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $c1 := @parameter1: char;

        if $i0 < 0 goto label1;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        if $i0 < $i2 goto label2;

     label1:
        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r1;

     label2:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $r2[$i0] = $c1;

        return;
    }

    public final void a(int, int, char[], int)
    {
        java.lang.StringIndexOutOfBoundsException $r2;
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2, $i3, $i4;
        char[] $r1, $r3;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $i1 := @parameter1: int;

        $r1 := @parameter2: char[];

        $i2 := @parameter3: int;

        if $i0 >= 0 goto label1;

        $r2 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r2;

     label1:
        if $i1 < 0 goto label2;

        $i4 = $i1 + $i0;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        if $i4 <= $i3 goto label3;

     label2:
        $r2 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i1);

        throw $r2;

     label3:
        if $i1 <= 0 goto label4;

        if $i0 >= $i1 goto label4;

        $r3 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, $i0, $r1, $i2, $i1);

     label4:
        return;
    }

    public final void a(int, char[])
    {
        com.metrictrade.and.am r0;
        int $i0, $i1;
        char[] $r1, $r2;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $r1 := @parameter1: char[];

        if $i0 <= 0 goto label1;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i0 > $i1 goto label1;

        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

     label1:
        return;
    }

    public final void a(java.io.OutputStream, byte[], int)
    {
        java.io.OutputStream $r1;
        byte[] $r2;
        char $c6;
        byte $b7;
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2, $i3, $i4, $i5;
        char[] $r3;

        r0 := @this: com.metrictrade.and.am;

        $r1 := @parameter0: java.io.OutputStream;

        $r2 := @parameter1: byte[];

        $i0 := @parameter2: int;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i3 = 0;

     label1:
        if $i2 > 0 goto label2;

        return;

     label2:
        if $i2 <= $i0 goto label6;

        $i4 = $i0;

     label3:
        $i5 = 0;

     label4:
        if $i5 < $i4 goto label5;

        virtualinvoke $r1.<java.io.OutputStream: void write(byte[],int,int)>($r2, 0, $i4);

        $i2 = $i2 - $i4;

        $i3 = $i3 + $i4;

        goto label1;

     label5:
        $r3 = r0.<com.metrictrade.and.am: char[] a>;

        $i1 = $i3 + $i5;

        $c6 = $r3[$i1];

        $c6 = $c6 & 255;

        $b7 = (byte) $c6;

        $r2[$i5] = $b7;

        $i5 = $i5 + 1;

        goto label4;

     label6:
        $i4 = $i2;

        goto label3;
    }

    public final com.metrictrade.and.am b(int, char)
    {
        char $c1;
        com.metrictrade.and.am r0;
        int $i0, $i2, $i3, $i4;
        char[] $r1, $r2;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $c1 := @parameter1: char;

        if $i0 < 0 goto label2;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        if $i0 > $i3 goto label2;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        $i3 = $i3 + 1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = lengthof $r1;

        if $i3 <= $i2 goto label1;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i3);

     label1:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = $i0 + 1;

        $i4 = r0.<com.metrictrade.and.am: int b>;

        $i4 = $i4 - $i0;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i0, $r1, $i2, $i4);

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $r1[$i0] = $c1;

        r0.<com.metrictrade.and.am: int b> = $i3;

     label2:
        return r0;
    }

    public final com.metrictrade.and.am b(java.lang.String)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2, $i3;
        char[] $r1, $r3;
        java.lang.String $r2;

        r0 := @this: com.metrictrade.and.am;

        $r2 := @parameter0: java.lang.String;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i1 < 0 goto label3;

        if $r2 != null goto label1;

        $r2 = "null";

     label1:
        $i1 = virtualinvoke $r2.<java.lang.String: int length()>();

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 + $i1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = lengthof $r1;

        if $i2 <= $i0 goto label2;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i2);

     label2:
        $r3 = r0.<com.metrictrade.and.am: char[] a>;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i3 = r0.<com.metrictrade.and.am: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r1, $i1, $i3);

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        virtualinvoke $r2.<java.lang.String: void getChars(int,int,char[],int)>(0, $i1, $r1, 0);

        r0.<com.metrictrade.and.am: int b> = $i2;

     label3:
        return r0;
    }

    public final void b(int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1;
        java.lang.StringIndexOutOfBoundsException $r1;
        char[] $r2;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        if $i0 >= 0 goto label1;

        $r1 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r1;

     label1:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $i1 = lengthof $r2;

        if $i0 <= $i1 goto label2;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i0);

     label2:
        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i1 >= $i0 goto label5;

     label3:
        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i1 < $i0 goto label4;

        return;

     label4:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $r2[$i1] = 0;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + 1;

        r0.<com.metrictrade.and.am: int b> = $i1;

        goto label3;

     label5:
        r0.<com.metrictrade.and.am: int b> = $i0;

        return;
    }

    public final com.metrictrade.and.am c(int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2;
        char[] $r1, $r2;
        java.lang.StringIndexOutOfBoundsException $r3;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.metrictrade.and.am: int b>;

        if $i0 < $i1 goto label2;

     label1:
        $r3 = new java.lang.StringIndexOutOfBoundsException;

        specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i0);

        throw $r3;

     label2:
        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $i1 = $i0 + 1;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i2 = $i2 - $i0;

        $i2 = $i2 + -1;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, $i1, $r1, $i0, $i2);

        $i0 = r0.<com.metrictrade.and.am: int b>;

        $i0 = $i0 + -1;

        r0.<com.metrictrade.and.am: int b> = $i0;

        return r0;
    }

    public final void d(int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2;
        char[] $r1, $r2;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        $i1 = 512;

        $i2 = r0.<com.metrictrade.and.am: int b>;

        if $i0 >= $i2 goto label1;

        return;

     label1:
        if $i0 >= 512 goto label5;

     label2:
        $i2 = $i1 - $i0;

        if $i2 >= 0 goto label3;

        $i1 = $i0;

     label3:
        if $i1 >= 0 goto label4;

        if $i0 < 0 goto label7;

        $i1 = 2147483647;

     label4:
        $r1 = newarray (char)[$i1];

        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = r0.<com.metrictrade.and.am: int b>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i0);

        r0.<com.metrictrade.and.am: char[] a> = $r1;

        return;

     label5:
        if $i0 >= 1024 goto label6;

        $i1 = 1024;

        goto label2;

     label6:
        $i1 = $i0 / 4096;

        $i1 = $i1 + 1;

        $i1 = $i1 * 4096;

        goto label2;

     label7:
        return;
    }

    public final com.metrictrade.and.am e(int)
    {
        com.metrictrade.and.am r0;
        int $i0, $i1, $i2;
        char[] $r1;

        r0 := @this: com.metrictrade.and.am;

        $i0 := @parameter0: int;

        if $i0 != -2147483648 goto label1;

        virtualinvoke r0.<com.metrictrade.and.am: com.metrictrade.and.am a(java.lang.String)>("-2147483648");

        return r0;

     label1:
        if $i0 < 0 goto label4;

        $i1 = staticinvoke <com.metrictrade.and.am: int f(int)>($i0);

     label2:
        $i2 = r0.<com.metrictrade.and.am: int b>;

        $i1 = $i1 + $i2;

        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        $i2 = lengthof $r1;

        if $i1 <= $i2 goto label3;

        virtualinvoke r0.<com.metrictrade.and.am: void d(int)>($i1);

     label3:
        $r1 = r0.<com.metrictrade.and.am: char[] a>;

        staticinvoke <com.metrictrade.and.am: void a(int,int,char[])>($i0, $i1, $r1);

        r0.<com.metrictrade.and.am: int b> = $i1;

        return r0;

     label4:
        $i1 = neg $i0;

        $i1 = staticinvoke <com.metrictrade.and.am: int f(int)>($i1);

        $i1 = $i1 + 1;

        goto label2;
    }

    public final boolean equals(java.lang.Object)
    {
        char $c0, $c4;
        com.metrictrade.and.am r0, $r4;
        int $i1, $i2, $i3, $i5;
        char[] $r3, $r5;
        java.lang.Object $r1;
        java.lang.String $r2;
        boolean $z0;

        r0 := @this: com.metrictrade.and.am;

        $r1 := @parameter0: java.lang.Object;

        if r0 != $r1 goto label1;

        return 1;

     label1:
        $i1 = r0.<com.metrictrade.and.am: int b>;

        $z0 = $r1 instanceof java.lang.String;

        if $z0 == 0 goto label4;

        $r2 = (java.lang.String) $r1;

        $i2 = virtualinvoke $r2.<java.lang.String: int length()>();

        if $i1 != $i2 goto label7;

        $r3 = r0.<com.metrictrade.and.am: char[] a>;

        $i3 = $i1;

        $i1 = 0;

     label2:
        $i2 = $i3 + -1;

        if $i3 == 0 goto label8;

        $c0 = $r3[$i1];

        $c4 = virtualinvoke $r2.<java.lang.String: char charAt(int)>($i1);

        $i3 = (int) $c0;

        $i5 = (int) $c4;

        if $i3 == $i5 goto label3;

        return 0;

     label3:
        $i1 = $i1 + 1;

        $i3 = $i2;

        goto label2;

     label4:
        $z0 = $r1 instanceof com.metrictrade.and.am;

        if $z0 == 0 goto label7;

        $r4 = (com.metrictrade.and.am) $r1;

        $i2 = $r4.<com.metrictrade.and.am: int b>;

        if $i1 != $i2 goto label7;

        $r3 = r0.<com.metrictrade.and.am: char[] a>;

        $r5 = $r4.<com.metrictrade.and.am: char[] a>;

        $i2 = 0;

     label5:
        $i3 = $i1 + -1;

        if $i1 == 0 goto label8;

        $c4 = $r3[$i2];

        $c0 = $r5[$i2];

        $i1 = (int) $c4;

        $i5 = (int) $c0;

        if $i1 == $i5 goto label6;

        return 0;

     label6:
        $i2 = $i2 + 1;

        $i1 = $i3;

        goto label5;

     label7:
        return 0;

     label8:
        return 1;
    }

    public final java.lang.String toString()
    {
        com.metrictrade.and.am r0;
        int $i0;
        char[] $r2;
        java.lang.String $r1;

        r0 := @this: com.metrictrade.and.am;

        $r1 = new java.lang.String;

        $r2 = r0.<com.metrictrade.and.am: char[] a>;

        $i0 = r0.<com.metrictrade.and.am: int b>;

        specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0);

        return $r1;
    }
}
