public class com.movesky.app.main.InfiniteCombatView extends com.movesky.app.engine.ui.UIView implements com.movesky.app.main.units.UnitManager
{
    private android.graphics.Paint bluePaint;
    com.movesky.app.main.ai.AIController controller;
    com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator;
    com.movesky.app.main.GridAcceleration gridAcceleration;
    private android.graphics.Paint particlePaint;
    com.movesky.app.engine.particles.ParticleSystem particleSystem;
    com.movesky.app.engine.ai.Pathfinder pathfinder;
    java.util.Random random;
    private android.graphics.Paint redPaint;
    com.movesky.app.engine.util.Bag temp;
    com.movesky.app.engine.fastgraph.LineOfSightTester tester;
    java.util.ArrayList units;
    com.movesky.app.engine.util.Bag unitsToRemove;
    private android.graphics.Paint whitePaint;

    public void <init>()
    {
        com.movesky.app.main.InfiniteCombatView r0;
        java.util.ArrayList $r1;
        android.graphics.Paint $r2;
        android.graphics.Paint$Join $r3;
        android.graphics.Paint$Style $r4;
        java.util.Random $r5;
        com.movesky.app.engine.particles.ParticleSystem $r6;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r7;
        com.movesky.app.engine.ai.Pathfinder $r8;
        com.movesky.app.engine.ai.ConnectedGraph $r9;
        com.movesky.app.engine.fastgraph.SimpleLineOfSightTester $r10;
        com.movesky.app.main.GridAcceleration $r11;
        com.movesky.app.main.ai.AIController $r12;
        com.movesky.app.engine.fastgraph.LineOfSightTester $r13;
        com.movesky.app.engine.util.Bag $r14;
        int $i0;
        com.movesky.app.main.units.UnitType $r15;
        com.movesky.app.main.Team $r16;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        specialinvoke r0.<com.movesky.app.engine.ui.UIView: void <init>()>();

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units> = $r1;

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint> = $r2;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-16776961);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r3);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint> = $r2;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-65536);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r3);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint> = $r2;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-1);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        $r3 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r3);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        $r4 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r4);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint whitePaint>;

        virtualinvoke $r2.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r2 = new android.graphics.Paint;

        specialinvoke $r2.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint particlePaint> = $r2;

        $r5 = new java.util.Random;

        specialinvoke $r5.<java.util.Random: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random> = $r5;

        $r6 = new com.movesky.app.engine.particles.ParticleSystem;

        specialinvoke $r6.<com.movesky.app.engine.particles.ParticleSystem: void <init>(int)>(1000);

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.particles.ParticleSystem particleSystem> = $r6;

        $r7 = new com.movesky.app.engine.fastgraph.FastGraphGenerator;

        specialinvoke $r7.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void <init>(float,float,float)>(15.0F, 320.0F, 530.0F);

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator> = $r7;

        $r8 = new com.movesky.app.engine.ai.Pathfinder;

        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r9 = $r7.<com.movesky.app.engine.fastgraph.FastGraphGenerator: com.movesky.app.engine.ai.ConnectedGraph graph>;

        specialinvoke $r8.<com.movesky.app.engine.ai.Pathfinder: void <init>(com.movesky.app.engine.ai.ConnectedGraph)>($r9);

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.ai.Pathfinder pathfinder> = $r8;

        $r10 = new com.movesky.app.engine.fastgraph.SimpleLineOfSightTester;

        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r1 = $r7.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        specialinvoke $r10.<com.movesky.app.engine.fastgraph.SimpleLineOfSightTester: void <init>(float,java.util.ArrayList)>(15.0F, $r1);

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.LineOfSightTester tester> = $r10;

        $r11 = new com.movesky.app.main.GridAcceleration;

        specialinvoke $r11.<com.movesky.app.main.GridAcceleration: void <init>(float,float,float)>(320.0F, 530.0F, 32.0F);

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration> = $r11;

        $r12 = new com.movesky.app.main.ai.AIController;

        specialinvoke $r12.<com.movesky.app.main.ai.AIController: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller> = $r12;

        $r12 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        $r8 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.ai.Pathfinder pathfinder>;

        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r9 = $r7.<com.movesky.app.engine.fastgraph.FastGraphGenerator: com.movesky.app.engine.ai.ConnectedGraph graph>;

        $r13 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.LineOfSightTester tester>;

        $r11 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        virtualinvoke $r12.<com.movesky.app.main.ai.AIController: void setPathfinder(com.movesky.app.engine.ai.Pathfinder,com.movesky.app.engine.ai.ConnectedGraph,com.movesky.app.engine.fastgraph.LineOfSightTester,com.movesky.app.main.GridAcceleration)>($r8, $r9, $r13, $r11);

        $r12 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        virtualinvoke $r12.<com.movesky.app.main.ai.AIController: void setUpdateFraction(float)>(0.1F);

        $r14 = new com.movesky.app.engine.util.Bag;

        specialinvoke $r14.<com.movesky.app.engine.util.Bag: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag unitsToRemove> = $r14;

        $r14 = new com.movesky.app.engine.util.Bag;

        specialinvoke $r14.<com.movesky.app.engine.util.Bag: void <init>()>();

        r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp> = $r14;

        virtualinvoke r0.<com.movesky.app.main.InfiniteCombatView: void setSize(float,float)>(320.0F, 530.0F);

        $i0 = 0;

     label1:
        if $i0 >= 15 goto label2;

        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType ATTACKING>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType ATTACKING>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType UBER>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType UBER>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType UBER>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        $r15 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType UBER>;

        $r16 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r15, $r16);

        return;
    }

    private static final boolean intervalsDontOverlap(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $b0 = $f0 cmpg $f2;

        if $b0 >= 0 goto label2;

        $f0 = $f2 - $f1;

     label1:
        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        return 1;

     label2:
        $f0 = $f0 - $f3;

        goto label1;

     label3:
        return 0;
    }

    private void spawnUnit(com.movesky.app.main.units.UnitType, com.movesky.app.main.Team)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        com.movesky.app.main.units.UnitType $r1;
        com.movesky.app.main.Team $r2, $r3;
        android.graphics.Paint $r4;
        com.movesky.app.engine.particles.ParticleSystem $r5;
        com.movesky.app.main.units.Unit $r6;
        int[] $r7;
        int $i0;
        java.lang.RuntimeException $r8;
        java.util.Random $r9;
        float $f0, $f1;
        java.util.ArrayList $r10;
        com.movesky.app.main.ai.AIController $r11;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $r1 := @parameter0: com.movesky.app.main.units.UnitType;

        $r2 := @parameter1: com.movesky.app.main.Team;

        $r3 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r2 != $r3 goto label3;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint redPaint>;

     label1:
        $r5 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.particles.ParticleSystem particleSystem>;

        $r6 = virtualinvoke $r1.<com.movesky.app.main.units.UnitType: com.movesky.app.main.units.Unit createUnit(com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>(r0, $r2, $r4, $r5);

        $r7 = <com.movesky.app.main.InfiniteCombatView$1: int[] $SwitchMap$com$movesky$app$main$Team>;

        $i0 = virtualinvoke $r2.<com.movesky.app.main.Team: int ordinal()>();

        $i0 = $r7[$i0];

        lookupswitch($i0)
        {
            case 1: goto label4;
            case 2: goto label6;
            default: goto label2;
        };

     label2:
        $r8 = new java.lang.RuntimeException;

        specialinvoke $r8.<java.lang.RuntimeException: void <init>(java.lang.String)>("what");

        throw $r8;

     label3:
        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint bluePaint>;

        goto label1;

     label4:
        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f0 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f0 = $f0 * 320.0F;

        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f1 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f1 = $f1 * 530.0F;

        $f1 = $f1 / 4.0F;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void setPosition(float,float)>($f0, $f1);

     label5:
        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f0 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f0 = $f0 * 0.01F;

        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f1 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f1 = $f1 * 6.2831855F;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void setVelocity(float,float)>($f0, $f1);

        $r10 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        virtualinvoke $r10.<java.util.ArrayList: boolean add(java.lang.Object)>($r6);

        $r11 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        virtualinvoke $r11.<com.movesky.app.main.ai.AIController: void addEntity(com.movesky.app.main.units.Unit)>($r6);

        return;

     label6:
        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f0 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f0 = $f0 * 320.0F;

        $r9 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.Random random>;

        $f1 = virtualinvoke $r9.<java.util.Random: float nextFloat()>();

        $f1 = $f1 * 530.0F;

        $f1 = $f1 / 4.0F;

        $f1 = $f1 + 397.5F;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void setPosition(float,float)>($f0, $f1);

        goto label5;
    }

    public void addWall(com.movesky.app.engine.fastgraph.Wall)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        com.movesky.app.engine.fastgraph.Wall $r1;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r2;
        java.util.ArrayList $r3;
        com.movesky.app.main.GridAcceleration $r4;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $r1 := @parameter0: com.movesky.app.engine.fastgraph.Wall;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        virtualinvoke $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void compute()>();

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void clearWalls()>();

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void insertWalls(java.util.List)>($r3);

        return;
    }

    public com.movesky.app.engine.util.Bag getUnitsInCircle(float, float, float)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.movesky.app.engine.util.Bag $r1;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.movesky.app.main.units.Unit $r5;
        byte $b0;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        virtualinvoke $r1.<com.movesky.app.engine.util.Bag: void clear()>();

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.movesky.app.main.units.Unit) $r4;

        $f3 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getX()>();

        $f4 = $f0 - $f3;

        $f3 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getY()>();

        $f5 = $f1 - $f3;

        $f3 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getRadius()>();

        $f3 = $f3 + $f2;

        $f4 = $f4 * $f4;

        $f5 = $f5 * $f5;

        $f4 = $f4 + $f5;

        $f3 = $f3 * $f3;

        $b0 = $f4 cmpg $f3;

        if $b0 > 0 goto label1;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        virtualinvoke $r1.<com.movesky.app.engine.util.Bag: boolean add(java.lang.Object)>($r5);

        goto label1;

     label2:
        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        return $r1;
    }

    public com.movesky.app.engine.util.Bag getUnitsIntersectingLine(float, float, float, float)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7;
        com.movesky.app.engine.util.Bag $r1;
        byte $b0;
        java.util.ArrayList $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.movesky.app.main.units.Unit $r5;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        virtualinvoke $r1.<com.movesky.app.engine.util.Bag: void clear()>();

        $f5 = $f3 - $f1;

        $f5 = neg $f5;

        $f4 = $f2 - $f0;

        $f6 = $f5 * $f5;

        $f7 = $f4 * $f4;

        $f6 = $f6 + $f7;

        $f6 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f6);

        $f5 = $f5 / $f6;

        $f4 = $f4 / $f6;

        $f0 = $f5 * $f0;

        $f1 = $f4 * $f1;

        $f6 = $f0 + $f1;

        $f0 = $f5 * $f2;

        $f1 = $f4 * $f3;

        $f0 = $f0 + $f1;

        $b0 = $f0 cmpg $f6;

        if $b0 >= 0 goto label4;

        $f1 = $f0;

        $f0 = $f6;

     label1:
        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.movesky.app.main.units.Unit) $r4;

        $f2 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getX()>();

        $f2 = $f2 * $f5;

        $f3 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getY()>();

        $f3 = $f3 * $f4;

        $f3 = $f2 + $f3;

        $f6 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getRadius()>();

        $f2 = $f3 - $f6;

        $f3 = $f3 + $f6;

        $z0 = staticinvoke <com.movesky.app.main.InfiniteCombatView: boolean intervalsDontOverlap(float,float,float,float)>($f2, $f3, $f1, $f0);

        if $z0 != 0 goto label2;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        virtualinvoke $r1.<com.movesky.app.engine.util.Bag: boolean add(java.lang.Object)>($r5);

        goto label2;

     label3:
        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag temp>;

        return $r1;

     label4:
        $f1 = $f6;

        goto label1;
    }

    public void notifyUnitDead(com.movesky.app.main.units.Unit)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        com.movesky.app.main.units.Unit $r1;
        java.util.ArrayList $r2;
        com.movesky.app.main.ai.AIController $r3;
        com.movesky.app.engine.util.Bag $r4;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $r1 := @parameter0: com.movesky.app.main.units.Unit;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        virtualinvoke $r2.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        virtualinvoke $r3.<com.movesky.app.main.ai.AIController: void removeEntity(com.movesky.app.main.units.Unit)>($r1);

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag unitsToRemove>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Bag: boolean add(java.lang.Object)>($r1);

        return;
    }

    public void onDraw(android.graphics.Canvas)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        android.graphics.Canvas $r1;
        android.graphics.RectF $r2;
        android.graphics.Region$Op $r3;
        int $i0, $i1;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.movesky.app.main.units.Unit $r6;
        com.movesky.app.engine.particles.ParticleSystem $r7;
        android.graphics.Paint $r8;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $r1 := @parameter0: android.graphics.Canvas;

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.RectF _rect>;

        $r3 = <android.graphics.Region$Op: android.graphics.Region$Op INTERSECT>;

        virtualinvoke $r1.<android.graphics.Canvas: boolean clipRect(android.graphics.RectF,android.graphics.Region$Op)>($r2, $r3);

        $i0 = 0;

     label1:
        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void drawChassis(android.graphics.Canvas)>($r1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $i0 = 0;

     label3:
        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label4;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void drawEffects(android.graphics.Canvas)>($r1);

        $i0 = $i0 + 1;

        goto label3;

     label4:
        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.particles.ParticleSystem particleSystem>;

        $r8 = r0.<com.movesky.app.main.InfiniteCombatView: android.graphics.Paint particlePaint>;

        virtualinvoke $r7.<com.movesky.app.engine.particles.ParticleSystem: void draw(android.graphics.Canvas,android.graphics.Paint)>($r1, $r8);

        $i0 = 0;

     label5:
        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label6;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void drawHealthBar(android.graphics.Canvas,boolean)>($r1, 0);

        $i0 = $i0 + 1;

        goto label5;

     label6:
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;
    }

    public void onUpdate(float)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        float $f0;
        com.movesky.app.main.ai.AIController $r1;
        com.movesky.app.main.GridAcceleration $r2;
        java.util.List $r3;
        int $i0, $i1;
        java.util.ArrayList $r4;
        java.lang.Object $r5;
        com.movesky.app.main.units.Unit $r6;
        com.movesky.app.engine.util.Bag $r7;
        boolean $z0;
        com.movesky.app.main.units.UnitType $r8;
        com.movesky.app.main.Team $r9;
        com.movesky.app.engine.particles.ParticleSystem $r10;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $f0 := @parameter0: float;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        virtualinvoke $r1.<com.movesky.app.main.ai.AIController: void update()>();

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        virtualinvoke $r2.<com.movesky.app.main.GridAcceleration: void clearUnits()>();

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        $r1 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.ai.AIController controller>;

        $r3 = virtualinvoke $r1.<com.movesky.app.main.ai.AIController: java.util.List getUnits()>();

        virtualinvoke $r2.<com.movesky.app.main.GridAcceleration: void insertUnits(java.util.List)>($r3);

        $i0 = 0;

     label1:
        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $i1 = virtualinvoke $r4.<java.util.ArrayList: int size()>();

        if $i0 >= $i1 goto label2;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        $r5 = virtualinvoke $r4.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        virtualinvoke $r6.<com.movesky.app.main.units.Unit: void update(float)>($f0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag unitsToRemove>;

        $z0 = virtualinvoke $r7.<com.movesky.app.engine.util.Bag: boolean isEmpty()>();

        if $z0 != 0 goto label3;

        $r7 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.util.Bag unitsToRemove>;

        $r5 = virtualinvoke $r7.<com.movesky.app.engine.util.Bag: java.lang.Object removeLast()>();

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        virtualinvoke $r4.<java.util.ArrayList: boolean remove(java.lang.Object)>($r6);

        $r8 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: com.movesky.app.main.units.UnitType getType()>();

        $r9 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: com.movesky.app.main.Team getTeam()>();

        specialinvoke r0.<com.movesky.app.main.InfiniteCombatView: void spawnUnit(com.movesky.app.main.units.UnitType,com.movesky.app.main.Team)>($r8, $r9);

        goto label2;

     label3:
        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        virtualinvoke $r2.<com.movesky.app.main.GridAcceleration: void clearUnits()>();

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: java.util.ArrayList units>;

        virtualinvoke $r2.<com.movesky.app.main.GridAcceleration: void insertUnits(java.util.List)>($r4);

        $r10 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.particles.ParticleSystem particleSystem>;

        virtualinvoke $r10.<com.movesky.app.engine.particles.ParticleSystem: void tick(float)>($f0);

        return;
    }

    public void removeWall(com.movesky.app.engine.fastgraph.Wall)
    {
        com.movesky.app.main.InfiniteCombatView r0;
        com.movesky.app.engine.fastgraph.Wall $r1;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r2;
        java.util.ArrayList $r3;
        com.movesky.app.main.GridAcceleration $r4;

        r0 := @this: com.movesky.app.main.InfiniteCombatView;

        $r1 := @parameter0: com.movesky.app.engine.fastgraph.Wall;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        virtualinvoke $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void compute()>();

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void clearWalls()>();

        $r4 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.main.GridAcceleration gridAcceleration>;

        $r2 = r0.<com.movesky.app.main.InfiniteCombatView: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGenerator>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void insertWalls(java.util.List)>($r3);

        return;
    }
}
