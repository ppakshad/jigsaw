public class com.movesky.app.engine.util.Bag extends java.util.AbstractCollection implements java.util.RandomAccess, java.lang.Cloneable, java.io.Serializable
{
    private static final long serialVersionUID;
    int capacity;
    java.lang.Object[] elements;
    int numElements;
    int numModifications;
    com.movesky.app.engine.util.Bag$BagIterator sharedIterator;

    public void <init>()
    {
        com.movesky.app.engine.util.Bag r0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        specialinvoke r0.<com.movesky.app.engine.util.Bag: void <init>(int)>(16);

        return;
    }

    public void <init>(int)
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        com.movesky.app.engine.util.Bag$BagIterator $r1;
        java.lang.Object[] $r3;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 := @parameter0: int;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        $r1 = new com.movesky.app.engine.util.Bag$BagIterator;

        specialinvoke $r1.<com.movesky.app.engine.util.Bag$BagIterator: void <init>(com.movesky.app.engine.util.Bag)>(r0);

        r0.<com.movesky.app.engine.util.Bag: com.movesky.app.engine.util.Bag$BagIterator sharedIterator> = $r1;

        goto label1;

     label1:
        r0.<com.movesky.app.engine.util.Bag: int numElements> = 0;

        r0.<com.movesky.app.engine.util.Bag: int capacity> = 16;

        $r3 = newarray (java.lang.Object)[16];

        r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements> = $r3;

        return;
    }

    public void <init>(java.util.Collection)
    {
        com.movesky.app.engine.util.Bag r0;
        java.util.Collection $r1;
        int $i0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.util.Collection;

        $i0 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        specialinvoke r0.<com.movesky.app.engine.util.Bag: void <init>(java.util.Collection,int)>($r1, $i0);

        return;
    }

    public void <init>(java.util.Collection, int)
    {
        com.movesky.app.engine.util.Bag r0;
        java.util.Collection $r1;
        int $i0, $i1;
        com.movesky.app.engine.util.Bag$BagIterator $r2;
        java.lang.IllegalArgumentException $r3;
        java.lang.Object[] $r4;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.util.Collection;

        $i0 := @parameter1: int;

        specialinvoke r0.<java.util.AbstractCollection: void <init>()>();

        $r2 = new com.movesky.app.engine.util.Bag$BagIterator;

        specialinvoke $r2.<com.movesky.app.engine.util.Bag$BagIterator: void <init>(com.movesky.app.engine.util.Bag)>(r0);

        r0.<com.movesky.app.engine.util.Bag: com.movesky.app.engine.util.Bag$BagIterator sharedIterator> = $r2;

        if $i0 >= 1 goto label1;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Initial capacity was less than 1");

        throw $r3;

     label1:
        $i1 = interfaceinvoke $r1.<java.util.Collection: int size()>();

        if $i0 >= $i1 goto label2;

        $r3 = new java.lang.IllegalArgumentException;

        specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Initial capacity was less than given collection size");

        throw $r3;

     label2:
        r0.<com.movesky.app.engine.util.Bag: int numElements> = $i1;

        r0.<com.movesky.app.engine.util.Bag: int capacity> = $i0;

        if $i1 != $i0 goto label3;

        $r4 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray()>();

        r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements> = $r4;

        return;

     label3:
        $r4 = newarray (java.lang.Object)[$i0];

        $r4 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>($r4);

        r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements> = $r4;

        return;
    }

    static java.lang.Object[] copyArray(java.lang.Object[], int)
    {
        java.lang.Object[] $r0, $r3;
        int $i0, $i1;
        java.lang.Class $r1;
        java.lang.Object $r2;

        $r0 := @parameter0: java.lang.Object[];

        $i0 := @parameter1: int;

        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        if $r1 != class "[Ljava/lang/Object;" goto label3;

        $r2 = newarray (java.lang.Object)[$i0];

     label1:
        $r3 = (java.lang.Object[]) $r2;

        $i1 = lengthof $r0;

        if $i1 >= $i0 goto label2;

        $i0 = lengthof $r0;

     label2:
        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r0, 0, $r3, 0, $i0);

        return $r3;

     label3:
        $r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Class getClass()>();

        $r1 = virtualinvoke $r1.<java.lang.Class: java.lang.Class getComponentType()>();

        $r2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r1, $i0);

        goto label1;
    }

    private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
    {
        com.movesky.app.engine.util.Bag r0;
        java.io.ObjectOutputStream $r1;
        int $i0, $i1;
        java.util.ConcurrentModificationException $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.io.ObjectOutputStream;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        virtualinvoke $r1.<java.io.ObjectOutputStream: void defaultWriteObject()>();

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        if $i1 == $i0 goto label1;

        $r2 = new java.util.ConcurrentModificationException;

        specialinvoke $r2.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r2;

     label1:
        return;
    }

    protected void accommodateNewElements(int)
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0, $i1, $i2;
        java.lang.Object[] $r1;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 := @parameter0: int;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        $i1 = $i1 + 1;

        r0.<com.movesky.app.engine.util.Bag: int numModifications> = $i1;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i1 = $i1 + 1;

        $i2 = r0.<com.movesky.app.engine.util.Bag: int capacity>;

        if $i1 <= $i2 goto label1;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int capacity>;

        $i0 = $i1 + 1;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int capacity>;

        $i1 = $i1 * 2;

        $i0 = staticinvoke <java.lang.Math: int max(int,int)>($i0, $i1);

        $i1 = r0.<com.movesky.app.engine.util.Bag: int capacity>;

        if $i0 <= $i1 goto label1;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r1 = staticinvoke <com.movesky.app.engine.util.Bag: java.lang.Object[] copyArray(java.lang.Object[],int)>($r1, $i0);

        r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements> = $r1;

        r0.<com.movesky.app.engine.util.Bag: int capacity> = $i0;

     label1:
        return;
    }

    public boolean add(java.lang.Object)
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object $r1;
        int $i0, $i1;
        java.lang.NullPointerException $r2;
        java.lang.Object[] $r3;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        virtualinvoke r0.<com.movesky.app.engine.util.Bag: void accommodateNewElements(int)>(1);

        $r3 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i1 = $i0 + 1;

        r0.<com.movesky.app.engine.util.Bag: int numElements> = $i1;

        $r3[$i0] = $r1;

        return 1;
    }

    public boolean addAll(java.util.Collection)
    {
        com.movesky.app.engine.util.Bag r0;
        java.util.Collection $r1;
        int $i0, $i1;
        java.lang.Object[] $r2, $r3;
        boolean $z0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.util.Collection;

        $z0 = interfaceinvoke $r1.<java.util.Collection: boolean isEmpty()>();

        if $z0 == 0 goto label1;

        return 0;

     label1:
        $r3 = interfaceinvoke $r1.<java.util.Collection: java.lang.Object[] toArray()>();

        $i0 = lengthof $r3;

        virtualinvoke r0.<com.movesky.app.engine.util.Bag: void accommodateNewElements(int)>($i0);

        $r2 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r3, 0, $r2, $i1, $i0);

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i0 = $i1 + $i0;

        r0.<com.movesky.app.engine.util.Bag: int numElements> = $i0;

        return 1;
    }

    public void clear()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        $i0 = $i0 + 1;

        r0.<com.movesky.app.engine.util.Bag: int numModifications> = $i0;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, 0, $i0, null);

        r0.<com.movesky.app.engine.util.Bag: int numElements> = 0;

        return;
    }

    public com.movesky.app.engine.util.Bag clone()
    {
        com.movesky.app.engine.util.Bag r0, $r2;
        int $i0, $i1;
        java.lang.Object $r1;
        java.lang.Object[] $r3;
        java.util.ConcurrentModificationException $r4;
        java.lang.Throwable $r5;
        java.lang.InternalError $r6;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

     label1:
        $r1 = specialinvoke r0.<java.lang.Object: java.lang.Object clone()>();

     label2:
        $r2 = (com.movesky.app.engine.util.Bag) $r1;

        $r3 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int capacity>;

     label3:
        $r3 = staticinvoke <com.movesky.app.engine.util.Bag: java.lang.Object[] copyArray(java.lang.Object[],int)>($r3, $i1);

     label4:
        $r2.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements> = $r3;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        if $i0 == $i1 goto label8;

        $r4 = new java.util.ConcurrentModificationException;

     label5:
        specialinvoke $r4.<java.util.ConcurrentModificationException: void <init>()>();

     label6:
        throw $r4;

     label7:
        $r5 := @caughtexception;

        $r6 = new java.lang.InternalError;

        specialinvoke $r6.<java.lang.InternalError: void <init>()>();

        throw $r6;

     label8:
        return $r2;

        catch java.lang.CloneNotSupportedException from label1 to label2 with label7;
        catch java.lang.CloneNotSupportedException from label3 to label4 with label7;
        catch java.lang.CloneNotSupportedException from label5 to label6 with label7;
    }

    public volatile java.lang.Object clone() throws java.lang.CloneNotSupportedException
    {
        com.movesky.app.engine.util.Bag r0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        r0 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: com.movesky.app.engine.util.Bag clone()>();

        return r0;
    }

    public boolean contains(java.lang.Object)
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.lang.Object;

        $i0 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: int indexOf(java.lang.Object)>($r1);

        if $i0 == -1 goto label1;

        return 1;

     label1:
        return 0;
    }

    protected void ensureInBounds(int)
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0, $i1;
        java.lang.IndexOutOfBoundsException $r1;
        java.lang.StringBuilder $r2;
        java.lang.String $r3;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 := @parameter0: int;

        if $i0 < 0 goto label1;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i0 < $i1 goto label2;

     label1:
        $r1 = new java.lang.IndexOutOfBoundsException;

        $r2 = new java.lang.StringBuilder;

        specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("index = ");

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", numElements = ");

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $r2 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);

        $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();

        specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r3);

        throw $r1;

     label2:
        return;
    }

    public java.lang.Object get(int)
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 := @parameter0: int;

        virtualinvoke r0.<com.movesky.app.engine.util.Bag: void ensureInBounds(int)>($i0);

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r2 = $r1[$i0];

        return $r2;
    }

    public java.lang.Object getFirst()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i0 >= 1 goto label1;

        return null;

     label1:
        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r2 = $r1[0];

        return $r2;
    }

    public java.lang.Object getLast()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i0 >= 1 goto label1;

        return null;

     label1:
        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i0 = $i0 + -1;

        $r2 = $r1[$i0];

        return $r2;
    }

    public int indexOf(java.lang.Object)
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object $r1, $r3;
        int $i0, $i1;
        boolean $z0;
        java.lang.Object[] $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.lang.Object;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i1 = 0;

     label1:
        if $i1 >= $i0 goto label3;

        $r2 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r3 = $r2[$i1];

        $z0 = virtualinvoke $r3.<java.lang.Object: boolean equals(java.lang.Object)>($r1);

        if $z0 == 0 goto label2;

        return $i1;

     label2:
        $i1 = $i1 + 1;

        goto label1;

     label3:
        return -1;
    }

    public boolean isEmpty()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i0 != 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public java.util.Iterator iterator()
    {
        com.movesky.app.engine.util.Bag r0;
        com.movesky.app.engine.util.Bag$BagIterator $r1;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 = r0.<com.movesky.app.engine.util.Bag: com.movesky.app.engine.util.Bag$BagIterator sharedIterator>;

        virtualinvoke $r1.<com.movesky.app.engine.util.Bag$BagIterator: void reset()>();

        $r1 = r0.<com.movesky.app.engine.util.Bag: com.movesky.app.engine.util.Bag$BagIterator sharedIterator>;

        return $r1;
    }

    public java.util.Iterator newIterator()
    {
        com.movesky.app.engine.util.Bag r0;
        com.movesky.app.engine.util.Bag$BagIterator $r1;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 = new com.movesky.app.engine.util.Bag$BagIterator;

        specialinvoke $r1.<com.movesky.app.engine.util.Bag$BagIterator: void <init>(com.movesky.app.engine.util.Bag)>(r0);

        return $r1;
    }

    public java.lang.Object remove(int)
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0, $i1;
        java.lang.Object[] $r1;
        java.lang.Object $r2, $r3;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 := @parameter0: int;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        $i1 = $i1 + 1;

        r0.<com.movesky.app.engine.util.Bag: int numModifications> = $i1;

        virtualinvoke r0.<com.movesky.app.engine.util.Bag: void ensureInBounds(int)>($i0);

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i1 = $i1 + -1;

        if $i0 != $i1 goto label1;

        $r2 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: java.lang.Object unsafeRemoveLast()>();

        return $r2;

     label1:
        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r2 = $r1[$i0];

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r3 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: java.lang.Object unsafeRemoveLast()>();

        $r1[$i0] = $r3;

        return $r2;
    }

    public boolean remove(java.lang.Object)
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object $r1;
        int $i0;
        java.lang.NullPointerException $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.lang.Object;

        if $r1 != null goto label1;

        $r2 = new java.lang.NullPointerException;

        specialinvoke $r2.<java.lang.NullPointerException: void <init>()>();

        throw $r2;

     label1:
        $i0 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: int indexOf(java.lang.Object)>($r1);

        if $i0 == -1 goto label2;

        virtualinvoke r0.<com.movesky.app.engine.util.Bag: java.lang.Object remove(int)>($i0);

        return 1;

     label2:
        return 0;
    }

    public java.lang.Object removeLast()
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object $r1;
        int $i0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        $i0 = $i0 + 1;

        r0.<com.movesky.app.engine.util.Bag: int numModifications> = $i0;

        virtualinvoke r0.<com.movesky.app.engine.util.Bag: void ensureInBounds(int)>(0);

        $r1 = virtualinvoke r0.<com.movesky.app.engine.util.Bag: java.lang.Object unsafeRemoveLast()>();

        return $r1;
    }

    public void reverse()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0, $i1, $i2;
        java.lang.Object[] $r1, $r3;
        java.lang.Object $r2, $r4;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i0 = $i0 / 2;

        $i1 = 0;

        $i2 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i2 = $i2 + -1;

     label1:
        if $i1 >= $i0 goto label2;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r2 = $r1[$i2];

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r3 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r4 = $r3[$i1];

        $r1[$i2] = $r4;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $r1[$i1] = $r2;

        $i1 = $i1 + 1;

        $i2 = $i2 + -1;

        goto label1;

     label2:
        return;
    }

    public int size()
    {
        com.movesky.app.engine.util.Bag r0;
        int i0;

        r0 := @this: com.movesky.app.engine.util.Bag;

        i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        return i0;
    }

    public java.lang.Object[] toArray()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $r1 = staticinvoke <com.movesky.app.engine.util.Bag: java.lang.Object[] copyArray(java.lang.Object[],int)>($r1, $i0);

        return $r1;
    }

    public java.lang.Object[] toArray(java.lang.Object[])
    {
        com.movesky.app.engine.util.Bag r0;
        java.lang.Object[] $r1, $r2;
        int $i0, $i1, $i2;
        java.util.ConcurrentModificationException $r3;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 := @parameter0: java.lang.Object[];

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        $i1 = lengthof $r1;

        $i2 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i1 >= $i2 goto label1;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $r1 = staticinvoke <com.movesky.app.engine.util.Bag: java.lang.Object[] copyArray(java.lang.Object[],int)>($r1, $i1);

     label1:
        $r2 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, 0, $r1, 0, $i1);

        $i1 = lengthof $r1;

        $i2 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        if $i1 <= $i2 goto label2;

        $i1 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i2 = lengthof $r1;

        staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>($r1, $i1, $i2, null);

     label2:
        $i1 = r0.<com.movesky.app.engine.util.Bag: int numModifications>;

        if $i0 == $i1 goto label3;

        $r3 = new java.util.ConcurrentModificationException;

        specialinvoke $r3.<java.util.ConcurrentModificationException: void <init>()>();

        throw $r3;

     label3:
        return $r1;
    }

    protected java.lang.Object unsafeRemoveLast()
    {
        com.movesky.app.engine.util.Bag r0;
        int $i0;
        java.lang.Object[] $r1;
        java.lang.Object $r2;

        r0 := @this: com.movesky.app.engine.util.Bag;

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $i0 = $i0 + -1;

        r0.<com.movesky.app.engine.util.Bag: int numElements> = $i0;

        $r2 = $r1[$i0];

        $r1 = r0.<com.movesky.app.engine.util.Bag: java.lang.Object[] elements>;

        $i0 = r0.<com.movesky.app.engine.util.Bag: int numElements>;

        $r1[$i0] = null;

        return $r2;
    }

    public static void <clinit>()
    {
        <com.movesky.app.engine.util.Bag: long serialVersionUID> = 1L;

        return;
    }
}
