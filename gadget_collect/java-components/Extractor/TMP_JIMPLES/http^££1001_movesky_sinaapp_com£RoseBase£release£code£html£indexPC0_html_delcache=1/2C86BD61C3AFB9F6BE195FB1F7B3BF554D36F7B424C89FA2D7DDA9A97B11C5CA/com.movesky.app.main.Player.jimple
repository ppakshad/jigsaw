public class com.movesky.app.main.Player extends java.lang.Object
{
    private float _combo;
    private int _health;
    private boolean _isLocal;
    private com.movesky.app.main.ai.AIController aiController;
    public com.movesky.app.main.Base base;
    private com.movesky.app.engine.fastgraph.Wall currentWall;
    private android.graphics.Paint paint;
    private com.movesky.app.main.UnitSelector selector;
    private com.movesky.app.main.Team team;
    private int totalUnitsCreated;
    private com.movesky.app.main.achievements.events.UnitCreatedEvent unitCreatedEvent;
    private com.movesky.app.main.units.UnitManager unitManager;
    public java.util.List units;
    public java.util.ArrayList walls;

    public void <init>(com.movesky.app.main.Team, com.movesky.app.main.ai.AIController, com.movesky.app.main.units.UnitManager, boolean)
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.Team $r1;
        com.movesky.app.main.ai.AIController $r2;
        com.movesky.app.main.units.UnitManager $r3;
        boolean $z0;
        java.util.ArrayList $r4;
        com.movesky.app.main.Base $r5;
        android.graphics.Paint $r6;
        android.graphics.Paint$Join $r7;
        int $i0;
        android.graphics.Paint$Cap $r8;
        int[] $r9;
        com.movesky.app.main.UnitSelector $r10;
        com.movesky.app.engine.particles.ParticleSystem $r11;
        com.movesky.app.engine.ui.Anchor $r12;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: com.movesky.app.main.Team;

        $r2 := @parameter1: com.movesky.app.main.ai.AIController;

        $r3 := @parameter2: com.movesky.app.main.units.UnitManager;

        $z0 := @parameter3: boolean;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        r0.<com.movesky.app.main.Player: boolean _isLocal> = $z0;

        r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team> = $r1;

        r0.<com.movesky.app.main.Player: com.movesky.app.main.units.UnitManager unitManager> = $r3;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.movesky.app.main.Player: java.util.List units> = $r4;

        $r5 = new com.movesky.app.main.Base;

        specialinvoke $r5.<com.movesky.app.main.Base: void <init>(com.movesky.app.main.Player)>(r0);

        r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base> = $r5;

        virtualinvoke r0.<com.movesky.app.main.Player: void resetHealth()>();

        virtualinvoke r0.<com.movesky.app.main.Player: void setCombo(float)>(0.0F);

        $r6 = new android.graphics.Paint;

        specialinvoke $r6.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.Player: android.graphics.Paint paint> = $r6;

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        virtualinvoke $r6.<android.graphics.Paint: void setStrokeWidth(float)>(2.0F);

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r7 = <android.graphics.Paint$Join: android.graphics.Paint$Join ROUND>;

        virtualinvoke $r6.<android.graphics.Paint: void setStrokeJoin(android.graphics.Paint$Join)>($r7);

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        virtualinvoke $r6.<android.graphics.Paint: void setTextSize(float)>(20.0F);

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        virtualinvoke $r6.<android.graphics.Paint: void setAntiAlias(boolean)>(1);

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $i0 = virtualinvoke $r1.<com.movesky.app.main.Team: int getUnitColor()>();

        virtualinvoke $r6.<android.graphics.Paint: void setColor(int)>($i0);

        $r6 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r8 = <android.graphics.Paint$Cap: android.graphics.Paint$Cap ROUND>;

        virtualinvoke $r6.<android.graphics.Paint: void setStrokeCap(android.graphics.Paint$Cap)>($r8);

        $r9 = <com.movesky.app.main.Player$1: int[] $SwitchMap$com$movesky$app$main$Team>;

        $i0 = virtualinvoke $r1.<com.movesky.app.main.Team: int ordinal()>();

        $i0 = $r9[$i0];

        lookupswitch($i0)
        {
            case 1: goto label2;
            case 2: goto label3;
            default: goto label1;
        };

     label1:
        r0.<com.movesky.app.main.Player: com.movesky.app.main.ai.AIController aiController> = $r2;

        $r10 = new com.movesky.app.main.UnitSelector;

        $r11 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        specialinvoke $r10.<com.movesky.app.main.UnitSelector: void <init>(com.movesky.app.main.Team,com.movesky.app.main.units.UnitManager,com.movesky.app.engine.particles.ParticleSystem)>($r1, $r3, $r11);

        r0.<com.movesky.app.main.Player: com.movesky.app.main.UnitSelector selector> = $r10;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        r0.<com.movesky.app.main.Player: java.util.ArrayList walls> = $r4;

        return;

     label2:
        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r12 = <com.movesky.app.engine.ui.Anchor: com.movesky.app.engine.ui.Anchor BOTTOM_LEFT>;

        virtualinvoke $r5.<com.movesky.app.main.Base: void setAnchor(com.movesky.app.engine.ui.Anchor)>($r12);

        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        virtualinvoke $r5.<com.movesky.app.main.Base: void setPosition(float,float)>(0.0F, 530.0F);

        goto label1;

     label3:
        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r12 = <com.movesky.app.engine.ui.Anchor: com.movesky.app.engine.ui.Anchor TOP_LEFT>;

        virtualinvoke $r5.<com.movesky.app.main.Base: void setAnchor(com.movesky.app.engine.ui.Anchor)>($r12);

        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        virtualinvoke $r5.<com.movesky.app.main.Base: void setPosition(float,float)>(0.0F, 0.0F);

        goto label1;
    }

    private void removeWall(int)
    {
        com.movesky.app.main.Player r0;
        int $i0;
        com.movesky.app.main.units.UnitManager $r1;
        java.util.ArrayList $r2;
        java.lang.Object $r3;
        com.movesky.app.main.units.WallUnit $r4;
        com.movesky.app.engine.fastgraph.Wall $r5;

        r0 := @this: com.movesky.app.main.Player;

        $i0 := @parameter0: int;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.units.UnitManager unitManager>;

        $r2 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $r3 = virtualinvoke $r2.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r4 = (com.movesky.app.main.units.WallUnit) $r3;

        $r5 = virtualinvoke $r4.<com.movesky.app.main.units.WallUnit: com.movesky.app.engine.fastgraph.Wall getWall()>();

        interfaceinvoke $r1.<com.movesky.app.main.units.UnitManager: void removeWall(com.movesky.app.engine.fastgraph.Wall)>($r5);

        $r2 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        virtualinvoke $r2.<java.util.ArrayList: java.lang.Object remove(int)>($i0);

        return;
    }

    public void adjustHealth(int)
    {
        com.movesky.app.main.Player r0;
        int $i0, $i1;
        float $f0;
        com.movesky.app.main.Base $r1;
        boolean $z0;

        r0 := @this: com.movesky.app.main.Player;

        $i0 := @parameter0: int;

        $i1 = r0.<com.movesky.app.main.Player: int _health>;

        $i0 = $i1 + $i0;

        $f0 = (float) $i0;

        $f0 = staticinvoke <com.movesky.app.engine.util.MathUtils: float clamp(float,float,float)>(0.0F, 100.0F, $f0);

        $i0 = (int) $f0;

        r0.<com.movesky.app.main.Player: int _health> = $i0;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $i0 = r0.<com.movesky.app.main.Player: int _health>;

        virtualinvoke $r1.<com.movesky.app.main.Base: void setHealth(int)>($i0);

        $z0 = r0.<com.movesky.app.main.Player: boolean _isLocal>;

        if $z0 == 0 goto label1;

        staticinvoke <com.movesky.app.engine.util.Vibrate: void vibrate(float)>(0.1F);

     label1:
        return;
    }

    public void draw(android.graphics.Canvas, boolean)
    {
        com.movesky.app.main.Player r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        int $i0, $i1, $i2;
        com.movesky.app.main.Base $r2;
        android.graphics.Paint $r3;
        com.movesky.app.main.Team $r4;
        java.util.ArrayList $r5;
        java.lang.Object $r6;
        com.movesky.app.main.units.WallUnit $r7;
        android.graphics.Paint$Style $r8;
        java.util.List $r9;
        com.movesky.app.main.units.Unit $r10;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 := @parameter1: boolean;

        $i0 = 0;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        virtualinvoke $r2.<com.movesky.app.main.Base: void draw(android.graphics.Canvas,boolean)>($r1, $z0);

        $r3 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r4 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $i1 = virtualinvoke $r4.<com.movesky.app.main.Team: int getWallColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = 0;

     label1:
        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $i2 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        if $i1 >= $i2 goto label2;

        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $r6 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i1);

        $r7 = (com.movesky.app.main.units.WallUnit) $r6;

        virtualinvoke $r7.<com.movesky.app.main.units.WallUnit: void drawChassis(android.graphics.Canvas)>($r1);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        $r3 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r8 = <android.graphics.Paint$Style: android.graphics.Paint$Style STROKE>;

        virtualinvoke $r3.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r8);

        $r3 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r4 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $i1 = virtualinvoke $r4.<com.movesky.app.main.Team: int getUnitColor()>();

        virtualinvoke $r3.<android.graphics.Paint: void setColor(int)>($i1);

        $i1 = 0;

     label3:
        $r9 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i2 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i1 >= $i2 goto label4;

        $r9 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r6 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i1);

        $r10 = (com.movesky.app.main.units.Unit) $r6;

        virtualinvoke $r10.<com.movesky.app.main.units.Unit: void drawChassis(android.graphics.Canvas)>($r1);

        $i1 = $i1 + 1;

        goto label3;

     label4:
        $r9 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i1 = interfaceinvoke $r9.<java.util.List: int size()>();

        if $i0 >= $i1 goto label5;

        $r9 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r6 = interfaceinvoke $r9.<java.util.List: java.lang.Object get(int)>($i0);

        $r10 = (com.movesky.app.main.units.Unit) $r6;

        virtualinvoke $r10.<com.movesky.app.main.units.Unit: void drawEffects(android.graphics.Canvas)>($r1);

        $i0 = $i0 + 1;

        goto label4;

     label5:
        return;
    }

    public com.movesky.app.engine.fastgraph.Wall endWall()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.units.UnitManager $r1;
        com.movesky.app.main.Team $r2;
        android.graphics.Paint $r3;
        com.movesky.app.engine.particles.ParticleSystem $r4;
        java.util.ArrayList $r5;
        com.movesky.app.engine.fastgraph.Wall $r6;
        float $f0;
        byte $b0;
        com.movesky.app.main.units.WallUnit $r7;

        r0 := @this: com.movesky.app.main.Player;

        $r6 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        virtualinvoke $r6.<com.movesky.app.engine.fastgraph.Wall: void updateLength()>();

        $r6 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        $f0 = $r6.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $b0 = $f0 cmpg 5.0F;

        if $b0 >= 0 goto label1;

        return null;

     label1:
        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $r7 = new com.movesky.app.main.units.WallUnit;

        $r6 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.units.UnitManager unitManager>;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r3 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r4 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        specialinvoke $r7.<com.movesky.app.main.units.WallUnit: void <init>(com.movesky.app.engine.fastgraph.Wall,com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>($r6, $r1, $r2, $r3, $r4);

        virtualinvoke $r5.<java.util.ArrayList: boolean add(java.lang.Object)>($r7);

        $r6 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall> = null;

        return $r6;
    }

    public float getCombo()
    {
        com.movesky.app.main.Player r0;
        float f0;

        r0 := @this: com.movesky.app.main.Player;

        f0 = r0.<com.movesky.app.main.Player: float _combo>;

        return f0;
    }

    public float getHealth()
    {
        com.movesky.app.main.Player r0;
        int $i0;
        float $f0;

        r0 := @this: com.movesky.app.main.Player;

        $i0 = r0.<com.movesky.app.main.Player: int _health>;

        $f0 = (float) $i0;

        return $f0;
    }

    public com.movesky.app.main.units.Unit getMostAdvancedUnit()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.units.Unit $r1, $r4;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        com.movesky.app.main.Team $r5, $r6;
        float $f0, $f1;
        byte $b2;

        r0 := @this: com.movesky.app.main.Player;

        $r1 = null;

        $i0 = 0;

     label1:
        $r2 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r2 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.movesky.app.main.units.Unit) $r3;

        if $r1 == null goto label3;

        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r6 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r5 != $r6 goto label2;

        $f0 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = virtualinvoke $r1.<com.movesky.app.main.units.Unit: float getY()>();

        $b2 = $f0 cmpl $f1;

        if $b2 > 0 goto label3;

     label2:
        $r5 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r6 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r5 != $r6 goto label5;

        $f0 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = virtualinvoke $r1.<com.movesky.app.main.units.Unit: float getY()>();

        $b2 = $f0 cmpg $f1;

        if $b2 >= 0 goto label5;

     label3:
        $i0 = $i0 + 1;

        $r1 = $r4;

        goto label1;

     label4:
        return $r1;

     label5:
        $r4 = $r1;

        goto label3;
    }

    public int getSimulationSyncHash()
    {
        com.movesky.app.main.Player r0;
        int $i0, $i1, $i2;
        java.util.List $r1;
        java.lang.Object $r2;
        com.movesky.app.main.units.Unit $r3;

        r0 := @this: com.movesky.app.main.Player;

        $i0 = r0.<com.movesky.app.main.Player: int _health>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,int)>(0, $i0);

        $i1 = 0;

     label1:
        $r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i2 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i1 >= $i2 goto label2;

        $r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i1);

        $r3 = (com.movesky.app.main.units.Unit) $r2;

        $i2 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: int getSimulationSyncHash()>();

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,int)>($i0, $i2);

        $i1 = $i1 + 1;

        goto label1;

     label2:
        return $i0;
    }

    public com.movesky.app.main.Team getTeam()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.Team r1;

        r0 := @this: com.movesky.app.main.Player;

        r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        return r1;
    }

    public int getTotalUnitsCreated()
    {
        com.movesky.app.main.Player r0;
        int i0;

        r0 := @this: com.movesky.app.main.Player;

        i0 = r0.<com.movesky.app.main.Player: int totalUnitsCreated>;

        return i0;
    }

    public com.movesky.app.main.UnitSelector getUnitSelector()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.UnitSelector r1;

        r0 := @this: com.movesky.app.main.Player;

        r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.UnitSelector selector>;

        return r1;
    }

    public java.util.List getUnits()
    {
        com.movesky.app.main.Player r0;
        java.util.List r1;

        r0 := @this: com.movesky.app.main.Player;

        r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        return r1;
    }

    public boolean isLocal()
    {
        com.movesky.app.main.Player r0;
        boolean z0;

        r0 := @this: com.movesky.app.main.Player;

        z0 = r0.<com.movesky.app.main.Player: boolean _isLocal>;

        return z0;
    }

    public void postDraw(android.graphics.Canvas, boolean)
    {
        com.movesky.app.main.Player r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        int $i0, $i1;
        java.util.List $r2;
        java.lang.Object $r3;
        com.movesky.app.main.units.Unit $r4;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 := @parameter1: boolean;

        $i0 = 0;

     label1:
        $r2 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i1 = interfaceinvoke $r2.<java.util.List: int size()>();

        if $i0 >= $i1 goto label2;

        $r2 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r3 = interfaceinvoke $r2.<java.util.List: java.lang.Object get(int)>($i0);

        $r4 = (com.movesky.app.main.units.Unit) $r3;

        virtualinvoke $r4.<com.movesky.app.main.units.Unit: void drawHealthBar(android.graphics.Canvas,boolean)>($r1, $z0);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    public void resetHealth()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.Base $r1;

        r0 := @this: com.movesky.app.main.Player;

        r0.<com.movesky.app.main.Player: int _health> = 100;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        virtualinvoke $r1.<com.movesky.app.main.Base: void setHealth(int)>(100);

        return;
    }

    public void setCombo(float)
    {
        com.movesky.app.main.Player r0;
        byte $b0;
        float $f0;

        r0 := @this: com.movesky.app.main.Player;

        $f0 := @parameter0: float;

        $b0 = $f0 cmpg 0.0F;

        if $b0 >= 0 goto label1;

        $f0 = 0.0F;

     label1:
        r0.<com.movesky.app.main.Player: float _combo> = $f0;

        return;
    }

    public void setUnitType(com.movesky.app.main.units.UnitType)
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.units.UnitType $r1;
        com.movesky.app.main.UnitSelector $r2;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: com.movesky.app.main.units.UnitType;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.UnitSelector selector>;

        virtualinvoke $r2.<com.movesky.app.main.UnitSelector: void setUnitType(com.movesky.app.main.units.UnitType)>($r1);

        return;
    }

    public boolean settingWall()
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.engine.fastgraph.Wall $r1;

        r0 := @this: com.movesky.app.main.Player;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        if $r1 == null goto label1;

        return 1;

     label1:
        return 0;
    }

    public void setupEvents(com.movesky.app.main.InGameScreen, com.movesky.app.main.YSSimulation)
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.main.InGameScreen $r1;
        com.movesky.app.main.YSSimulation $r2;
        com.movesky.app.main.achievements.events.UnitCreatedEvent $r3;
        boolean $z0;
        float $f0;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: com.movesky.app.main.InGameScreen;

        $r2 := @parameter1: com.movesky.app.main.YSSimulation;

        $r3 = new com.movesky.app.main.achievements.events.UnitCreatedEvent;

        $z0 = $r1.<com.movesky.app.main.InGameScreen: boolean singlePlayer>;

        $f0 = $r1.<com.movesky.app.main.InGameScreen: float aiDifficulty>;

        specialinvoke $r3.<com.movesky.app.main.achievements.events.UnitCreatedEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>($r2, $z0, $f0);

        r0.<com.movesky.app.main.Player: com.movesky.app.main.achievements.events.UnitCreatedEvent unitCreatedEvent> = $r3;

        return;
    }

    public void setupSubviews(com.movesky.app.engine.ui.UIScrollView, boolean)
    {
        com.movesky.app.main.Player r0;
        com.movesky.app.engine.ui.UIScrollView $r1;
        boolean $z0;
        com.movesky.app.main.Base $r2;
        com.movesky.app.engine.util.Point $r3;
        float $f0, $f1;

        r0 := @this: com.movesky.app.main.Player;

        $r1 := @parameter0: com.movesky.app.engine.ui.UIScrollView;

        $z0 := @parameter1: boolean;

        if $z0 == 0 goto label1;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r3 = virtualinvoke $r2.<com.movesky.app.main.Base: com.movesky.app.engine.util.Point getPosition()>();

        $f0 = $r3.<com.movesky.app.engine.util.Point: float x>;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r3 = virtualinvoke $r2.<com.movesky.app.main.Base: com.movesky.app.engine.util.Point getPosition()>();

        $f1 = $r3.<com.movesky.app.engine.util.Point: float y>;

        virtualinvoke $r1.<com.movesky.app.engine.ui.UIScrollView: void scrollTo(float,float)>($f0, $f1);

     label1:
        return;
    }

    public void spawnUnit(float, float)
    {
        com.movesky.app.main.Player r0;
        float $f0, $f1, $f2, $f3, $f4;
        com.movesky.app.main.units.Unit $r1;
        com.movesky.app.main.Team $r2, $r3;
        int $i0, $i1;
        com.movesky.app.engine.particles.ParticleSystem $r4;
        com.movesky.app.engine.particles.Particle $r5;
        byte $b2;
        com.movesky.app.main.units.UnitType $r6;
        com.movesky.app.main.units.UnitManager $r7;
        android.graphics.Paint $r8;
        com.movesky.app.main.ai.AIController $r9;
        java.util.List $r10;
        com.movesky.app.main.achievements.events.UnitCreatedEvent $r11;
        com.movesky.app.main.achievements.BBTHAchievementManager $r12;
        com.movesky.app.main.UnitSelector $r13;

        r0 := @this: com.movesky.app.main.Player;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        if $r1 == null goto label04;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r3 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r2 != $r3 goto label03;

        $f2 = virtualinvoke $r1.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f2);

     label01:
        $i0 = 0;

     label02:
        if $i0 >= 10 goto label06;

        $f2 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 6.2831855F);

        $f3 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(25.0F, 50.0F);

        $f4 = staticinvoke <android.util.FloatMath: float cos(float)>($f2);

        $f3 = $f3 * $f4;

        $f4 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(25.0F, 50.0F);

        $f2 = staticinvoke <android.util.FloatMath: float sin(float)>($f2);

        $f2 = $f2 * $f4;

        $r4 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r5 = virtualinvoke $r4.<com.movesky.app.engine.particles.ParticleSystem: com.movesky.app.engine.particles.Particle createParticle()>();

        $r5 = virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle circle()>();

        $r5 = virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle velocity(float,float)>($f3, $f2);

        $r5 = virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle shrink(float,float)>(0.1F, 0.15F);

        $r5 = virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle radius(float)>(3.0F);

        $r5 = virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle position(float,float)>($f0, $f1);

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $i1 = virtualinvoke $r2.<com.movesky.app.main.Team: int getRandomShade()>();

        virtualinvoke $r5.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle color(int)>($i1);

        $i0 = $i0 + 1;

        goto label02;

     label03:
        $f2 = virtualinvoke $r1.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f2);

        goto label01;

     label04:
        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r3 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r2 != $r3 goto label05;

        $f1 = 490.0F;

        goto label01;

     label05:
        $f1 = 40.0F;

        goto label01;

     label06:
        $f2 = r0.<com.movesky.app.main.Player: float _combo>;

        $b2 = $f2 cmpl 0.0F;

        if $b2 == 0 goto label09;

        $f2 = r0.<com.movesky.app.main.Player: float _combo>;

        $f2 = $f2 % 5.0F;

        $b2 = $f2 cmpl 0.0F;

        if $b2 != 0 goto label09;

        $r6 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType UBER>;

        $r7 = r0.<com.movesky.app.main.Player: com.movesky.app.main.units.UnitManager unitManager>;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r8 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r4 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r1 = virtualinvoke $r6.<com.movesky.app.main.units.UnitType: com.movesky.app.main.units.Unit createUnit(com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>($r7, $r2, $r8, $r4);

     label07:
        virtualinvoke $r1.<com.movesky.app.main.units.Unit: void setPosition(float,float)>($f0, $f1);

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r3 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r2 != $r3 goto label10;

        $f0 = staticinvoke <com.movesky.app.main.YSSimulation: float randInRange(float,float)>(30.0F, 70.0F);

        virtualinvoke $r1.<com.movesky.app.main.units.Unit: void setVelocity(float,float)>($f0, 1.5707964F);

     label08:
        $r9 = r0.<com.movesky.app.main.Player: com.movesky.app.main.ai.AIController aiController>;

        virtualinvoke $r9.<com.movesky.app.main.ai.AIController: void addEntity(com.movesky.app.main.units.Unit)>($r1);

        $r10 = r0.<com.movesky.app.main.Player: java.util.List units>;

        interfaceinvoke $r10.<java.util.List: boolean add(java.lang.Object)>($r1);

        $i0 = r0.<com.movesky.app.main.Player: int totalUnitsCreated>;

        $i0 = $i0 + 1;

        r0.<com.movesky.app.main.Player: int totalUnitsCreated> = $i0;

        $r11 = r0.<com.movesky.app.main.Player: com.movesky.app.main.achievements.events.UnitCreatedEvent unitCreatedEvent>;

        if $r11 == null goto label11;

        $r11 = r0.<com.movesky.app.main.Player: com.movesky.app.main.achievements.events.UnitCreatedEvent unitCreatedEvent>;

        virtualinvoke $r11.<com.movesky.app.main.achievements.events.UnitCreatedEvent: void set(com.movesky.app.main.units.Unit)>($r1);

        $r12 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r11 = r0.<com.movesky.app.main.Player: com.movesky.app.main.achievements.events.UnitCreatedEvent unitCreatedEvent>;

        virtualinvoke $r12.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyUnitCreated(com.movesky.app.main.achievements.events.UnitCreatedEvent)>($r11);

        return;

     label09:
        $r13 = r0.<com.movesky.app.main.Player: com.movesky.app.main.UnitSelector selector>;

        $r6 = virtualinvoke $r13.<com.movesky.app.main.UnitSelector: com.movesky.app.main.units.UnitType getUnitType()>();

        $r7 = r0.<com.movesky.app.main.Player: com.movesky.app.main.units.UnitManager unitManager>;

        $r2 = r0.<com.movesky.app.main.Player: com.movesky.app.main.Team team>;

        $r8 = r0.<com.movesky.app.main.Player: android.graphics.Paint paint>;

        $r4 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r1 = virtualinvoke $r6.<com.movesky.app.main.units.UnitType: com.movesky.app.main.units.Unit createUnit(com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>($r7, $r2, $r8, $r4);

        goto label07;

     label10:
        $f0 = staticinvoke <com.movesky.app.main.YSSimulation: float randInRange(float,float)>(30.0F, 70.0F);

        virtualinvoke $r1.<com.movesky.app.main.units.Unit: void setVelocity(float,float)>($f0, -1.5707964F);

        goto label08;

     label11:
        return;
    }

    public void startWall(float, float)
    {
        com.movesky.app.main.Player r0;
        float $f0, $f1;
        com.movesky.app.engine.fastgraph.Wall $r1;

        r0 := @this: com.movesky.app.main.Player;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = new com.movesky.app.engine.fastgraph.Wall;

        specialinvoke $r1.<com.movesky.app.engine.fastgraph.Wall: void <init>(float,float,float,float)>($f0, $f1, $f0, $f1);

        r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall> = $r1;

        return;
    }

    public void update(float)
    {
        com.movesky.app.main.Player r0;
        float $f0, $f1;
        int $i0, $i1;
        java.util.List $r1;
        java.lang.Object $r2;
        com.movesky.app.main.units.Unit $r3;
        byte $b2;
        com.movesky.app.main.ai.AIController $r4;
        java.util.ArrayList $r5;
        com.movesky.app.main.units.WallUnit $r6;
        boolean $z0;

        r0 := @this: com.movesky.app.main.Player;

        $f0 := @parameter0: float;

        $i0 = 0;

     label1:
        $r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $i1 = interfaceinvoke $r1.<java.util.List: int size()>();

        if $i0 >= $i1 goto label4;

        $r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>($i0);

        $r3 = (com.movesky.app.main.units.Unit) $r2;

        virtualinvoke $r3.<com.movesky.app.main.units.Unit: void update(float)>($f0);

        $f1 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: float getY()>();

        $b2 = $f1 cmpg 0.0F;

        if $b2 < 0 goto label2;

        $f1 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: float getY()>();

        $b2 = $f1 cmpl 530.0F;

        if $b2 <= 0 goto label3;

     label2:
        $r1 = r0.<com.movesky.app.main.Player: java.util.List units>;

        interfaceinvoke $r1.<java.util.List: java.lang.Object remove(int)>($i0);

        $i0 = $i0 + -1;

        $r4 = r0.<com.movesky.app.main.Player: com.movesky.app.main.ai.AIController aiController>;

        virtualinvoke $r4.<com.movesky.app.main.ai.AIController: void removeEntity(com.movesky.app.main.units.Unit)>($r3);

     label3:
        $i0 = $i0 + 1;

        goto label1;

     label4:
        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $i0 = virtualinvoke $r5.<java.util.ArrayList: int size()>();

        $i0 = $i0 + -1;

     label5:
        if $i0 < 0 goto label7;

        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $r2 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.WallUnit) $r2;

        virtualinvoke $r6.<com.movesky.app.main.units.WallUnit: void update(float)>($f0);

        $r5 = r0.<com.movesky.app.main.Player: java.util.ArrayList walls>;

        $r2 = virtualinvoke $r5.<java.util.ArrayList: java.lang.Object get(int)>($i0);

        $r6 = (com.movesky.app.main.units.WallUnit) $r2;

        $z0 = virtualinvoke $r6.<com.movesky.app.main.units.WallUnit: boolean isDead()>();

        if $z0 == 0 goto label6;

        specialinvoke r0.<com.movesky.app.main.Player: void removeWall(int)>($i0);

     label6:
        $i0 = $i0 + -1;

        goto label5;

     label7:
        return;
    }

    public void updateWall(float, float)
    {
        com.movesky.app.main.Player r0;
        float $f0, $f1;
        com.movesky.app.engine.fastgraph.Wall $r1;
        com.movesky.app.engine.util.Point $r2;

        r0 := @this: com.movesky.app.main.Player;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = r0.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall currentWall>;

        $r2 = $r1.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        virtualinvoke $r2.<com.movesky.app.engine.util.Point: void set(float,float)>($f0, $f1);

        return;
    }
}
