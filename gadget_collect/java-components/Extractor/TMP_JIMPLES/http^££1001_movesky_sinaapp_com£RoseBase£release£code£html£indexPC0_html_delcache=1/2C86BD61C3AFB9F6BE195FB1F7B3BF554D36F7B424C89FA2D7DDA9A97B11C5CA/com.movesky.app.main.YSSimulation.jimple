public class com.movesky.app.main.YSSimulation extends com.movesky.app.engine.net.simulation.Simulation implements com.movesky.app.main.units.UnitManager
{
    public static final float GAME_HEIGHT;
    public static final float GAME_WIDTH;
    public static final float GAME_X;
    public static final float GAME_Y;
    public static final float MIN_WALL_LENGTH;
    public static final int MUSIC_STOPPED_EVENT;
    public static final int TUTORIAL_DONE_EVENT;
    public static final float UBER_UNIT_THRESHOLD;
    private static final java.util.Random random;
    private com.movesky.app.main.GridAcceleration accel;
    public com.movesky.app.engine.util.Timer accelTickTimer;
    private com.movesky.app.main.ai.AIController aiController;
    public com.movesky.app.engine.util.Timer aiControllerTimer;
    public com.movesky.app.engine.util.Timer aiTickTimer;
    private com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent;
    private com.movesky.app.main.achievements.events.BeatHitEvent beatHitEvent;
    private com.movesky.app.engine.util.Bag cachedUnitBag;
    private java.util.HashSet cachedUnitSet;
    public com.movesky.app.main.Player clientPlayer;
    public com.movesky.app.engine.util.Timer clientPlayerTimer;
    private boolean clientReady;
    public com.movesky.app.engine.util.Timer entireTickTimer;
    private com.movesky.app.main.achievements.events.GameEndedEvent gameEndedEvent;
    private com.movesky.app.main.YSSimulation$GameState gameState;
    private com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen;
    private com.movesky.app.main.InGameScreen inGameScreen;
    public com.movesky.app.main.Player localPlayer;
    private android.graphics.Paint paint;
    private com.movesky.app.engine.ai.Pathfinder pathFinder;
    long placement_tip_start_time;
    private java.util.HashMap playerMap;
    public com.movesky.app.main.Player remotePlayer;
    public com.movesky.app.main.Player serverPlayer;
    public com.movesky.app.engine.util.Timer serverPlayerTimer;
    private boolean serverReady;
    public com.movesky.app.main.Song song;
    private float startingCountdown;
    private com.movesky.app.main.Team team;
    private com.movesky.app.main.FastLineOfSightTester tester;
    private com.movesky.app.main.achievements.events.UnitDeadEvent unitDeadEvent;
    private com.movesky.app.main.achievements.events.UpdateEvent updateEvent;

    static void <clinit>()
    {
        java.util.Random $r0;

        <com.movesky.app.main.YSSimulation: float UBER_UNIT_THRESHOLD> = 5.0F;

        <com.movesky.app.main.YSSimulation: int TUTORIAL_DONE_EVENT> = 13;

        <com.movesky.app.main.YSSimulation: int MUSIC_STOPPED_EVENT> = 69;

        <com.movesky.app.main.YSSimulation: float MIN_WALL_LENGTH> = 5.0F;

        <com.movesky.app.main.YSSimulation: float GAME_Y> = 0.0F;

        <com.movesky.app.main.YSSimulation: float GAME_X> = 50.0F;

        <com.movesky.app.main.YSSimulation: float GAME_WIDTH> = 270.0F;

        <com.movesky.app.main.YSSimulation: float GAME_HEIGHT> = 530.0F;

        $r0 = new java.util.Random;

        specialinvoke $r0.<java.util.Random: void <init>()>();

        <com.movesky.app.main.YSSimulation: java.util.Random random> = $r0;

        return;
    }

    public void <init>(com.movesky.app.main.Team, com.movesky.app.engine.net.simulation.LockStepProtocol, boolean, com.movesky.app.main.InGameScreen)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.Team $r1, $r12, $r13;
        com.movesky.app.engine.net.simulation.LockStepProtocol $r2;
        boolean $z0;
        com.movesky.app.main.InGameScreen $r3;
        com.movesky.app.main.YSSimulation$GameState $r4;
        android.graphics.Paint $r5;
        com.movesky.app.engine.util.Bag $r6;
        java.util.HashSet $r7;
        com.movesky.app.engine.util.Timer $r8;
        com.movesky.app.main.ai.AIController $r9;
        com.movesky.app.main.GridAcceleration $r10;
        com.movesky.app.main.Player $r11;
        java.util.HashMap $r14;
        java.lang.Boolean $r15;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r16;
        java.util.ArrayList $r17;
        com.movesky.app.engine.ai.Pathfinder $r18;
        com.movesky.app.engine.ai.ConnectedGraph $r19;
        com.movesky.app.main.FastLineOfSightTester $r20;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.main.Team;

        $r2 := @parameter1: com.movesky.app.engine.net.simulation.LockStepProtocol;

        $z0 := @parameter2: boolean;

        $r3 := @parameter3: com.movesky.app.main.InGameScreen;

        specialinvoke r0.<com.movesky.app.engine.net.simulation.Simulation: void <init>(int,float,int,com.movesky.app.engine.net.simulation.LockStepProtocol,boolean)>(3, 0.1F, 2, $r2, $z0);

        $r4 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState WAITING_TO_START>;

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState> = $r4;

        $r5 = new android.graphics.Paint;

        specialinvoke $r5.<android.graphics.Paint: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint> = $r5;

        $r6 = new com.movesky.app.engine.util.Bag;

        specialinvoke $r6.<com.movesky.app.engine.util.Bag: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag> = $r6;

        $r7 = new java.util.HashSet;

        specialinvoke $r7.<java.util.HashSet: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: java.util.HashSet cachedUnitSet> = $r7;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer accelTickTimer> = $r8;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiTickTimer> = $r8;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer entireTickTimer> = $r8;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiControllerTimer> = $r8;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer serverPlayerTimer> = $r8;

        $r8 = new com.movesky.app.engine.util.Timer;

        specialinvoke $r8.<com.movesky.app.engine.util.Timer: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer clientPlayerTimer> = $r8;

        r0.<com.movesky.app.main.YSSimulation: float startingCountdown> = 3.0F;

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen> = $r3;

        $r9 = new com.movesky.app.main.ai.AIController;

        specialinvoke $r9.<com.movesky.app.main.ai.AIController: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController> = $r9;

        $r10 = new com.movesky.app.main.GridAcceleration;

        specialinvoke $r10.<com.movesky.app.main.GridAcceleration: void <init>(float,float,float)>(270.0F, 530.0F, 27.0F);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel> = $r10;

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team> = $r1;

        $r11 = new com.movesky.app.main.Player;

        $r1 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        $r12 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team>;

        $r13 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r12 != $r13 goto label5;

        $z0 = 1;

     label1:
        specialinvoke $r11.<com.movesky.app.main.Player: void <init>(com.movesky.app.main.Team,com.movesky.app.main.ai.AIController,com.movesky.app.main.units.UnitManager,boolean)>($r1, $r9, r0, $z0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer> = $r11;

        $r11 = new com.movesky.app.main.Player;

        $r1 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        $r12 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team>;

        $r13 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r12 != $r13 goto label6;

        $z0 = 1;

     label2:
        specialinvoke $r11.<com.movesky.app.main.Player: void <init>(com.movesky.app.main.Team,com.movesky.app.main.ai.AIController,com.movesky.app.main.units.UnitManager,boolean)>($r1, $r9, r0, $z0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer> = $r11;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team>;

        $r12 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r1 != $r12 goto label7;

        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

     label3:
        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer> = $r11;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team>;

        $r12 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r1 != $r12 goto label8;

        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

     label4:
        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer> = $r11;

        $r14 = new java.util.HashMap;

        specialinvoke $r14.<java.util.HashMap: void <init>()>();

        r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap> = $r14;

        $r14 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);

        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r11);

        $r14 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);

        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        virtualinvoke $r14.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r15, $r11);

        $r16 = new com.movesky.app.engine.fastgraph.FastGraphGenerator;

        specialinvoke $r16.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void <init>(float,float,float)>(15.0F, 270.0F, 530.0F);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen> = $r16;

        $r16 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        virtualinvoke $r16.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void compute()>();

        $r10 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $r16 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r17 = $r16.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r10.<com.movesky.app.main.GridAcceleration: void insertWalls(java.util.List)>($r17);

        $r18 = new com.movesky.app.engine.ai.Pathfinder;

        $r16 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r19 = $r16.<com.movesky.app.engine.fastgraph.FastGraphGenerator: com.movesky.app.engine.ai.ConnectedGraph graph>;

        specialinvoke $r18.<com.movesky.app.engine.ai.Pathfinder: void <init>(com.movesky.app.engine.ai.ConnectedGraph)>($r19);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.ai.Pathfinder pathFinder> = $r18;

        $r20 = new com.movesky.app.main.FastLineOfSightTester;

        $r10 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        specialinvoke $r20.<com.movesky.app.main.FastLineOfSightTester: void <init>(float,com.movesky.app.main.GridAcceleration)>(15.0F, $r10);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.FastLineOfSightTester tester> = $r20;

        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        $r18 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.ai.Pathfinder pathFinder>;

        $r16 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r19 = $r16.<com.movesky.app.engine.fastgraph.FastGraphGenerator: com.movesky.app.engine.ai.ConnectedGraph graph>;

        $r20 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.FastLineOfSightTester tester>;

        $r10 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r9.<com.movesky.app.main.ai.AIController: void setPathfinder(com.movesky.app.engine.ai.Pathfinder,com.movesky.app.engine.ai.ConnectedGraph,com.movesky.app.engine.fastgraph.LineOfSightTester,com.movesky.app.main.GridAcceleration)>($r18, $r19, $r20, $r10);

        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        virtualinvoke $r9.<com.movesky.app.main.ai.AIController: void setUpdateFraction(float)>(0.1F);

        return;

     label5:
        $z0 = 0;

        goto label1;

     label6:
        $z0 = 0;

        goto label2;

     label7:
        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        goto label3;

     label8:
        $r11 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        goto label4;
    }

    private void addWall(com.movesky.app.engine.fastgraph.Wall)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.engine.fastgraph.Wall $r1;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r2;
        java.util.ArrayList $r3;
        com.movesky.app.main.GridAcceleration $r4;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.engine.fastgraph.Wall;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r3.<java.util.ArrayList: boolean add(java.lang.Object)>($r1);

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        virtualinvoke $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void compute()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void clearWalls()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void insertWalls(java.util.List)>($r3);

        return;
    }

    private void drawGrid(android.graphics.Canvas)
    {
        com.movesky.app.main.YSSimulation r0;
        android.graphics.Canvas $r1;
        android.graphics.Paint $r2;
        float $f0;
        byte $b0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void setARGB(int,int,int,int)>(60, 255, 255, 255);

        $r2 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void setStrokeWidth(float)>(1.0F);

        $f0 = 0.0F;

     label1:
        $b0 = $f0 cmpg 270.0F;

        if $b0 >= 0 goto label2;

        $r2 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, 0.0F, $f0, 530.0F, $r2);

        $f0 = $f0 + 45.0F;

        goto label1;

     label2:
        $f0 = 0.0F;

     label3:
        $b0 = $f0 cmpg 530.0F;

        if $b0 >= 0 goto label4;

        $r2 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f0, 270.0F, $f0, $r2);

        $f0 = $f0 + 44.166668F;

        goto label3;

     label4:
        return;
    }

    private void drawWavefronts(android.graphics.Canvas)
    {
        com.movesky.app.main.YSSimulation r0;
        android.graphics.Canvas $r1;
        com.movesky.app.main.Player $r2;
        com.movesky.app.main.units.Unit $r3, $r4;
        float $f0, $f1, $f2;
        android.graphics.Paint $r5;
        android.graphics.Paint$Style $r6;
        com.movesky.app.main.Team $r7;
        int $i0;
        byte $b1;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r3 = virtualinvoke $r2.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r4 = virtualinvoke $r2.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        if $r3 == null goto label4;

        $f0 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: float getY()>();

        $f0 = $f0 + 10.0F;

     label1:
        if $r4 == null goto label5;

        $f1 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = $f1 - 10.0F;

     label2:
        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $r6 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r5.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r6);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $r7 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        $i0 = virtualinvoke $r7.<com.movesky.app.main.Team: int getWavefrontColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $f2 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f0);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, 0.0F, 270.0F, $f2, $r5);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $r7 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        $i0 = virtualinvoke $r7.<com.movesky.app.main.Team: int getWavefrontColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $f2 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f0);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f2, 270.0F, 530.0F, $r5);

        $b1 = $f0 cmpl $f1;

        if $b1 <= 0 goto label3;

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(63, 0, 63);

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(float,float,float,float,android.graphics.Paint)>(0.0F, $f1, 270.0F, $f0, $r5);

     label3:
        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $r7 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        $i0 = virtualinvoke $r7.<com.movesky.app.main.Team: int getUnitColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f0, 270.0F, $f0, $r5);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        $r7 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        $i0 = virtualinvoke $r7.<com.movesky.app.main.Team: int getUnitColor()>();

        virtualinvoke $r5.<android.graphics.Paint: void setColor(int)>($i0);

        $r5 = r0.<com.movesky.app.main.YSSimulation: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(0.0F, $f1, 270.0F, $f1, $r5);

        return;

     label4:
        $f0 = 0.0F;

        goto label1;

     label5:
        $f1 = 530.0F;

        goto label2;
    }

    private void endTheGame()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.Player $r1;
        float $f0, $f1;
        byte $b0;
        com.movesky.app.main.YSSimulation$GameState $r2, $r3;
        com.movesky.app.main.Team $r4;
        com.movesky.app.main.achievements.events.BaseDestroyedEvent $r5;
        com.movesky.app.main.InGameScreen $r6;
        com.movesky.app.main.BeatTrack $r7;
        com.movesky.app.main.achievements.BBTHAchievementManager $r8;
        com.movesky.app.main.achievements.events.GameEndedEvent $r9;
        boolean $z0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $f0 = virtualinvoke $r1.<com.movesky.app.main.Player: float getHealth()>();

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f0);

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $f1 = virtualinvoke $r1.<com.movesky.app.main.Player: float getHealth()>();

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>(0.0F, $f1);

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label08;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState SERVER_WON>;

     label01:
        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState> = $r2;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r3 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState SERVER_WON>;

        if $r2 == $r3 goto label02;

        $r4 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        specialinvoke r0.<com.movesky.app.main.YSSimulation: void explodeBase(com.movesky.app.main.Team)>($r4);

     label02:
        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r3 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState CLIENT_WON>;

        if $r2 == $r3 goto label03;

        $r4 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        specialinvoke r0.<com.movesky.app.main.YSSimulation: void explodeBase(com.movesky.app.main.Team)>($r4);

     label03:
        $b0 = $f0 cmpl 0.0F;

        if $b0 != 0 goto label04;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.InGameScreen: com.movesky.app.main.BeatTrack getBeatTrack()>();

        virtualinvoke $r5.<com.movesky.app.main.achievements.events.BaseDestroyedEvent: void set(com.movesky.app.main.Player,com.movesky.app.main.BeatTrack)>($r1, $r7);

        $r8 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent>;

        virtualinvoke $r8.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyBaseDestroyed(com.movesky.app.main.achievements.events.BaseDestroyedEvent)>($r5);

     label04:
        $b0 = $f1 cmpl 0.0F;

        if $b0 != 0 goto label05;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.InGameScreen: com.movesky.app.main.BeatTrack getBeatTrack()>();

        virtualinvoke $r5.<com.movesky.app.main.achievements.events.BaseDestroyedEvent: void set(com.movesky.app.main.Player,com.movesky.app.main.BeatTrack)>($r1, $r7);

        $r8 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent>;

        virtualinvoke $r8.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyBaseDestroyed(com.movesky.app.main.achievements.events.BaseDestroyedEvent)>($r5);

     label05:
        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.GameEndedEvent gameEndedEvent>;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r3 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState SERVER_WON>;

        if $r2 != $r3 goto label10;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

     label06:
        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r3 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState TIE>;

        if $r2 != $r3 goto label11;

        $z0 = 1;

     label07:
        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.InGameScreen: com.movesky.app.main.BeatTrack getBeatTrack()>();

        virtualinvoke $r9.<com.movesky.app.main.achievements.events.GameEndedEvent: void set(com.movesky.app.main.Player,boolean,com.movesky.app.main.BeatTrack)>($r1, $z0, $r7);

        $r8 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r9 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.GameEndedEvent gameEndedEvent>;

        virtualinvoke $r8.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyGameEnded(com.movesky.app.main.achievements.events.GameEndedEvent)>($r9);

        return;

     label08:
        $b0 = $f0 cmpg $f1;

        if $b0 >= 0 goto label09;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState CLIENT_WON>;

        goto label01;

     label09:
        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState TIE>;

        goto label01;

     label10:
        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        goto label06;

     label11:
        $z0 = 0;

        goto label07;
    }

    private void explodeBase(com.movesky.app.main.Team)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.Team $r1, $r2;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        int $i0, $i1;
        com.movesky.app.engine.particles.ParticleSystem $r3;
        com.movesky.app.engine.particles.Particle $r4;
        com.movesky.app.main.Player $r5;
        com.movesky.app.main.Base $r6;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.main.Team;

        $r2 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r1 != $r2 goto label5;

        $f0 = 0.0F;

     label1:
        $i0 = 0;

     label2:
        if $i0 >= 50 goto label7;

        $f1 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 270.0F);

        $f2 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 20.0F);

        $f2 = $f0 + $f2;

        $f3 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 3.1415927F);

        $f4 = $f3;

        $r2 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r1 != $r2 goto label3;

        $f4 = $f3 + 3.1415927F;

     label3:
        $f3 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 100.0F);

        $f5 = staticinvoke <android.util.FloatMath: float cos(float)>($f4);

        $f5 = $f5 * $f3;

        $f6 = staticinvoke <android.util.FloatMath: float sin(float)>($f4);

        $f3 = $f3 * $f6;

        $r3 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r4 = virtualinvoke $r3.<com.movesky.app.engine.particles.ParticleSystem: com.movesky.app.engine.particles.Particle createParticle()>();

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle position(float,float)>($f1, $f2);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle velocity(float,float)>($f5, $f3);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle shrink(float,float)>(0.1F, 0.15F);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle radius(float)>(10.0F);

        $i1 = virtualinvoke $r1.<com.movesky.app.main.Team: int getRandomShade()>();

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle color(int)>($i1);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle angle(float)>($f4);

        $i1 = $i0 & 1;

        if $i1 == 0 goto label6;

        virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle line()>();

     label4:
        $i0 = $i0 + 1;

        goto label2;

     label5:
        $f0 = 510.0F;

        goto label1;

     label6:
        virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle circle()>();

        goto label4;

     label7:
        $r2 = <com.movesky.app.main.Team: com.movesky.app.main.Team CLIENT>;

        if $r1 != $r2 goto label8;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r6 = $r5.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r6.<com.movesky.app.main.Base: boolean drawFill> = 0;

        return;

     label8:
        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r6 = $r5.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r6.<com.movesky.app.main.Base: boolean drawFill> = 0;

        return;
    }

    public static void generateParticlesForWall(com.movesky.app.engine.fastgraph.Wall, com.movesky.app.main.Team)
    {
        com.movesky.app.engine.fastgraph.Wall $r0;
        com.movesky.app.main.Team $r1;
        int $i0, $i1;
        com.movesky.app.engine.util.Point $r2;
        float $f0, $f1, $f2, $f3, $f4;
        com.movesky.app.engine.particles.ParticleSystem $r3;
        com.movesky.app.engine.particles.Particle $r4;

        $r0 := @parameter0: com.movesky.app.engine.fastgraph.Wall;

        $r1 := @parameter1: com.movesky.app.main.Team;

        $i0 = 0;

     label1:
        if $i0 >= 40 goto label2;

        $r2 = $r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r2.<com.movesky.app.engine.util.Point: float x>;

        $f1 = (float) $i0;

        $f0 = $f0 * $f1;

        $f1 = 40.0F;

        $f0 = $f0 / $f1;

        $r2 = $r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r2.<com.movesky.app.engine.util.Point: float x>;

        $i1 = 40 - $i0;

        $f2 = (float) $i1;

        $f1 = $f1 * $f2;

        $f2 = 40.0F;

        $f1 = $f1 / $f2;

        $f0 = $f0 + $f1;

        $r2 = $r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f1 = $r2.<com.movesky.app.engine.util.Point: float y>;

        $f2 = (float) $i0;

        $f1 = $f1 * $f2;

        $f2 = 40.0F;

        $f1 = $f1 / $f2;

        $r2 = $r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f2 = $r2.<com.movesky.app.engine.util.Point: float y>;

        $i1 = 40 - $i0;

        $f3 = (float) $i1;

        $f2 = $f2 * $f3;

        $f3 = 40.0F;

        $f2 = $f2 / $f3;

        $f1 = $f1 + $f2;

        $f2 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(0.0F, 6.2831855F);

        $f3 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(25.0F, 50.0F);

        $f4 = staticinvoke <android.util.FloatMath: float cos(float)>($f2);

        $f3 = $f3 * $f4;

        $f4 = staticinvoke <com.movesky.app.engine.util.MathUtils: float randInRange(float,float)>(25.0F, 50.0F);

        $f2 = staticinvoke <android.util.FloatMath: float sin(float)>($f2);

        $f2 = $f2 * $f4;

        $r3 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r4 = virtualinvoke $r3.<com.movesky.app.engine.particles.ParticleSystem: com.movesky.app.engine.particles.Particle createParticle()>();

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle circle()>();

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle velocity(float,float)>($f3, $f2);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle shrink(float,float)>(0.1F, 0.15F);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle radius(float)>(3.0F);

        $r4 = virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle position(float,float)>($f0, $f1);

        $i1 = virtualinvoke $r1.<com.movesky.app.main.Team: int getRandomShade()>();

        virtualinvoke $r4.<com.movesky.app.engine.particles.Particle: com.movesky.app.engine.particles.Particle color(int)>($i1);

        $i0 = $i0 + 1;

        goto label1;

     label2:
        return;
    }

    private static final boolean intervalsDontOverlap(float, float, float, float)
    {
        float $f0, $f1, $f2, $f3;
        byte $b0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $b0 = $f0 cmpg $f2;

        if $b0 >= 0 goto label2;

        $f0 = $f2 - $f1;

     label1:
        $b0 = $f0 cmpl 0.0F;

        if $b0 <= 0 goto label3;

        return 1;

     label2:
        $f0 = $f0 - $f3;

        goto label1;

     label3:
        return 0;
    }

    public static float randInRange(float, float)
    {
        float $f0, $f1, $f2;
        java.util.Random $r0;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = $f1 - $f0;

        $r0 = <com.movesky.app.main.YSSimulation: java.util.Random random>;

        $f1 = virtualinvoke $r0.<java.util.Random: float nextFloat()>();

        $f1 = $f2 * $f1;

        $f0 = $f1 + $f0;

        return $f0;
    }

    private void setupEvents()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.InGameScreen $r1;
        boolean $z0, $z1;
        float $f0, $f1;
        com.movesky.app.main.achievements.events.GameEndedEvent $r2;
        com.movesky.app.main.achievements.events.BaseDestroyedEvent $r3;
        com.movesky.app.main.achievements.events.BeatHitEvent $r4;
        com.movesky.app.main.achievements.events.UnitDeadEvent $r5;
        com.movesky.app.main.achievements.events.UpdateEvent $r6;
        com.movesky.app.main.Player $r7;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $z0 = $r1.<com.movesky.app.main.InGameScreen: boolean singlePlayer>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $f0 = $r1.<com.movesky.app.main.InGameScreen: float aiDifficulty>;

        $r2 = new com.movesky.app.main.achievements.events.GameEndedEvent;

        specialinvoke $r2.<com.movesky.app.main.achievements.events.GameEndedEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>(r0, $z0, $f0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.GameEndedEvent gameEndedEvent> = $r2;

        $r3 = new com.movesky.app.main.achievements.events.BaseDestroyedEvent;

        specialinvoke $r3.<com.movesky.app.main.achievements.events.BaseDestroyedEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>(r0, $z0, $f0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BaseDestroyedEvent baseDestroyedEvent> = $r3;

        $r4 = new com.movesky.app.main.achievements.events.BeatHitEvent;

        specialinvoke $r4.<com.movesky.app.main.achievements.events.BeatHitEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>(r0, $z0, $f0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BeatHitEvent beatHitEvent> = $r4;

        $r5 = new com.movesky.app.main.achievements.events.UnitDeadEvent;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $z1 = $r1.<com.movesky.app.main.InGameScreen: boolean singlePlayer>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        $f1 = $r1.<com.movesky.app.main.InGameScreen: float aiDifficulty>;

        specialinvoke $r5.<com.movesky.app.main.achievements.events.UnitDeadEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>(r0, $z1, $f1);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UnitDeadEvent unitDeadEvent> = $r5;

        $r6 = new com.movesky.app.main.achievements.events.UpdateEvent;

        specialinvoke $r6.<com.movesky.app.main.achievements.events.UpdateEvent: void <init>(com.movesky.app.main.YSSimulation,boolean,float)>(r0, $z0, $f0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UpdateEvent updateEvent> = $r6;

        $r7 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        virtualinvoke $r7.<com.movesky.app.main.Player: void setupEvents(com.movesky.app.main.InGameScreen,com.movesky.app.main.YSSimulation)>($r1, r0);

        $r7 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.InGameScreen inGameScreen>;

        virtualinvoke $r7.<com.movesky.app.main.Player: void setupEvents(com.movesky.app.main.InGameScreen,com.movesky.app.main.YSSimulation)>($r1, r0);

        return;
    }

    public void draw(android.graphics.Canvas)
    {
        com.movesky.app.main.YSSimulation r0;
        android.graphics.Canvas $r1;
        com.movesky.app.main.Team $r2, $r3;
        boolean $z0;
        com.movesky.app.main.YSSimulation$GameState $r4, $r5;
        com.movesky.app.main.Player $r6;
        com.movesky.app.engine.particles.ParticleSystem $r7;
        android.graphics.Paint $r8;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: android.graphics.Canvas;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Team team>;

        $r3 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r2 != $r3 goto label3;

        $z0 = 1;

     label1:
        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r5 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r4 != $r5 goto label2;

        specialinvoke r0.<com.movesky.app.main.YSSimulation: void drawWavefronts(android.graphics.Canvas)>($r1);

     label2:
        specialinvoke r0.<com.movesky.app.main.YSSimulation: void drawGrid(android.graphics.Canvas)>($r1);

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void draw(android.graphics.Canvas,boolean)>($r1, $z0);

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void draw(android.graphics.Canvas,boolean)>($r1, $z0);

        $r7 = <com.movesky.app.main.YSGame: com.movesky.app.engine.particles.ParticleSystem PARTICLES>;

        $r8 = <com.movesky.app.main.YSGame: android.graphics.Paint PARTICLE_PAINT>;

        virtualinvoke $r7.<com.movesky.app.engine.particles.ParticleSystem: void draw(android.graphics.Canvas,android.graphics.Paint)>($r1, $r8);

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void postDraw(android.graphics.Canvas,boolean)>($r1, $z0);

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void postDraw(android.graphics.Canvas,boolean)>($r1, $z0);

        return;

     label3:
        $z0 = 0;

        goto label1;
    }

    public void generateWall(com.movesky.app.main.Player)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.Player $r1, $r3;
        boolean $z0;
        com.movesky.app.engine.fastgraph.Wall $r2;
        com.movesky.app.main.Team $r4;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.main.Player;

        $z0 = virtualinvoke $r1.<com.movesky.app.main.Player: boolean settingWall()>();

        if $z0 != 0 goto label1;

        return;

     label1:
        $r2 = virtualinvoke $r1.<com.movesky.app.main.Player: com.movesky.app.engine.fastgraph.Wall endWall()>();

        if $r2 == null goto label3;

        $r3 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        if $r1 == $r3 goto label2;

        $r4 = virtualinvoke $r1.<com.movesky.app.main.Player: com.movesky.app.main.Team getTeam()>();

        staticinvoke <com.movesky.app.main.YSSimulation: void generateParticlesForWall(com.movesky.app.engine.fastgraph.Wall,com.movesky.app.main.Team)>($r2, $r4);

     label2:
        specialinvoke r0.<com.movesky.app.main.YSSimulation: void addWall(com.movesky.app.engine.fastgraph.Wall)>($r2);

     label3:
        return;
    }

    public com.movesky.app.main.YSSimulation$GameState getGameState()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.YSSimulation$GameState r1;

        r0 := @this: com.movesky.app.main.YSSimulation;

        r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        return r1;
    }

    public com.movesky.app.main.UnitSelector getMyUnitSelector()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.UnitSelector $r1;
        com.movesky.app.main.Player $r2;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        $r1 = virtualinvoke $r2.<com.movesky.app.main.Player: com.movesky.app.main.UnitSelector getUnitSelector()>();

        return $r1;
    }

    public com.movesky.app.main.units.Unit getOpponentsMostAdvancedUnit()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.units.Unit $r1;
        com.movesky.app.main.Player $r2;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer>;

        $r1 = virtualinvoke $r2.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        return $r1;
    }

    protected int getSimulationSyncHash()
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.Player $r1;
        int $i0, $i1, $i2, $i3;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r2;
        java.util.ArrayList $r3;
        java.lang.Object $r4;
        com.movesky.app.engine.fastgraph.Wall $r5;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $i0 = virtualinvoke $r1.<com.movesky.app.main.Player: int getSimulationSyncHash()>();

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,int)>(0, $i0);

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $i1 = virtualinvoke $r1.<com.movesky.app.main.Player: int getSimulationSyncHash()>();

        $i1 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,int)>($i0, $i1);

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        $i0 = virtualinvoke $r3.<java.util.ArrayList: int size()>();

        $i2 = 0;

     label1:
        if $i2 >= $i0 goto label2;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        $r4 = virtualinvoke $r3.<java.util.ArrayList: java.lang.Object get(int)>($i2);

        $r5 = (com.movesky.app.engine.fastgraph.Wall) $r4;

        $i3 = virtualinvoke $r5.<com.movesky.app.engine.fastgraph.Wall: int getSimulationSyncHash()>();

        $i1 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,int)>($i1, $i3);

        $i2 = $i2 + 1;

        goto label1;

     label2:
        return $i1;
    }

    public float getStartingCountdown()
    {
        com.movesky.app.main.YSSimulation r0;
        float f0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        f0 = r0.<com.movesky.app.main.YSSimulation: float startingCountdown>;

        return f0;
    }

    public com.movesky.app.engine.util.Bag getUnitsInCircle(float, float, float)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6;
        java.util.HashSet $r1;
        com.movesky.app.engine.util.Bag $r2;
        com.movesky.app.main.GridAcceleration $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.movesky.app.main.units.Unit $r6;
        byte $b0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 = $f2 * $f2;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        virtualinvoke $r2.<com.movesky.app.engine.util.Bag: void clear()>();

        $r3 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $f4 = $f0 - $f2;

        $f5 = $f1 - $f2;

        $f6 = $f0 + $f2;

        $f2 = $f1 + $f2;

        $r1 = r0.<com.movesky.app.main.YSSimulation: java.util.HashSet cachedUnitSet>;

        virtualinvoke $r3.<com.movesky.app.main.GridAcceleration: void getUnitsInAABB(float,float,float,float,java.util.HashSet)>($f4, $f5, $f6, $f2, $r1);

        $r1 = r0.<com.movesky.app.main.YSSimulation: java.util.HashSet cachedUnitSet>;

        $r4 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        $f2 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: float getX()>();

        $f2 = $f0 - $f2;

        $f4 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: float getY()>();

        $f4 = $f1 - $f4;

        $f2 = $f2 * $f2;

        $f4 = $f4 * $f4;

        $f2 = $f2 + $f4;

        $b0 = $f2 cmpg $f3;

        if $b0 >= 0 goto label1;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        virtualinvoke $r2.<com.movesky.app.engine.util.Bag: boolean add(java.lang.Object)>($r6);

        goto label1;

     label2:
        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        return $r2;
    }

    public com.movesky.app.engine.util.Bag getUnitsIntersectingLine(float, float, float, float)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1, $f2, $f3, $f4, $f5, $f6, $f7, $f8;
        java.util.HashSet $r1;
        com.movesky.app.engine.util.Bag $r2;
        byte $b0;
        com.movesky.app.main.GridAcceleration $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        com.movesky.app.main.units.Unit $r6;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        virtualinvoke $r2.<com.movesky.app.engine.util.Bag: void clear()>();

        $f4 = $f3 - $f1;

        $f4 = neg $f4;

        $f5 = $f2 - $f0;

        $f6 = $f4 * $f4;

        $f7 = $f5 * $f5;

        $f6 = $f6 + $f7;

        $f6 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f6);

        $f4 = $f4 / $f6;

        $f5 = $f5 / $f6;

        $f6 = $f4 * $f0;

        $f7 = $f5 * $f1;

        $f7 = $f6 + $f7;

        $f6 = $f4 * $f2;

        $f8 = $f5 * $f3;

        $f8 = $f6 + $f8;

        $b0 = $f8 cmpg $f7;

        if $b0 >= 0 goto label4;

        $f6 = $f7;

        $f7 = $f8;

     label1:
        $r3 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        $f8 = staticinvoke <java.lang.Math: float min(float,float)>($f1, $f3);

        $f2 = staticinvoke <java.lang.Math: float max(float,float)>($f2, $f2);

        $f1 = staticinvoke <java.lang.Math: float max(float,float)>($f1, $f3);

        $r1 = r0.<com.movesky.app.main.YSSimulation: java.util.HashSet cachedUnitSet>;

        virtualinvoke $r3.<com.movesky.app.main.GridAcceleration: void getUnitsInAABB(float,float,float,float,java.util.HashSet)>($f0, $f8, $f2, $f1, $r1);

        $r1 = r0.<com.movesky.app.main.YSSimulation: java.util.HashSet cachedUnitSet>;

        $r4 = virtualinvoke $r1.<java.util.HashSet: java.util.Iterator iterator()>();

     label2:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label3;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.movesky.app.main.units.Unit) $r5;

        $f0 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: float getX()>();

        $f0 = $f0 * $f4;

        $f1 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: float getY()>();

        $f1 = $f1 * $f5;

        $f1 = $f0 + $f1;

        $f2 = virtualinvoke $r6.<com.movesky.app.main.units.Unit: float getRadius()>();

        $f0 = $f1 - $f2;

        $f1 = $f1 + $f2;

        $z0 = staticinvoke <com.movesky.app.main.YSSimulation: boolean intervalsDontOverlap(float,float,float,float)>($f0, $f1, $f7, $f6);

        if $z0 != 0 goto label2;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        virtualinvoke $r2.<com.movesky.app.engine.util.Bag: boolean add(java.lang.Object)>($r6);

        goto label2;

     label3:
        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Bag cachedUnitBag>;

        return $r2;

     label4:
        $f6 = $f8;

        goto label1;
    }

    public boolean isReady()
    {
        com.movesky.app.main.YSSimulation r0;
        boolean $z0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $z0 = r0.<com.movesky.app.main.YSSimulation: boolean clientReady>;

        if $z0 == 0 goto label1;

        $z0 = r0.<com.movesky.app.main.YSSimulation: boolean serverReady>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        return 0;
    }

    public void notifyUnitDead(com.movesky.app.main.units.Unit)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.main.units.Unit $r1;
        com.movesky.app.main.achievements.events.UnitDeadEvent $r2;
        com.movesky.app.main.Player $r3;
        java.util.List $r4;
        com.movesky.app.main.ai.AIController $r5;
        com.movesky.app.main.achievements.BBTHAchievementManager $r6;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.main.units.Unit;

        $r3 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r4 = $r3.<com.movesky.app.main.Player: java.util.List units>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r1);

        $r3 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r4 = $r3.<com.movesky.app.main.Player: java.util.List units>;

        interfaceinvoke $r4.<java.util.List: boolean remove(java.lang.Object)>($r1);

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        virtualinvoke $r5.<com.movesky.app.main.ai.AIController: void removeEntity(com.movesky.app.main.units.Unit)>($r1);

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UnitDeadEvent unitDeadEvent>;

        virtualinvoke $r2.<com.movesky.app.main.achievements.events.UnitDeadEvent: void set(com.movesky.app.main.units.Unit)>($r1);

        $r6 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UnitDeadEvent unitDeadEvent>;

        virtualinvoke $r6.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyUnitDead(com.movesky.app.main.achievements.events.UnitDeadEvent)>($r2);

        return;
    }

    public void removeWall(com.movesky.app.engine.fastgraph.Wall)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.engine.fastgraph.Wall $r1;
        com.movesky.app.engine.fastgraph.FastGraphGenerator $r2;
        java.util.ArrayList $r3;
        com.movesky.app.main.GridAcceleration $r4;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.engine.fastgraph.Wall;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r3.<java.util.ArrayList: boolean remove(java.lang.Object)>($r1);

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        virtualinvoke $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: void compute()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void clearWalls()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.fastgraph.FastGraphGenerator graphGen>;

        $r3 = $r2.<com.movesky.app.engine.fastgraph.FastGraphGenerator: java.util.ArrayList walls>;

        virtualinvoke $r4.<com.movesky.app.main.GridAcceleration: void insertWalls(java.util.List)>($r3);

        return;
    }

    public void setBothPlayersReady()
    {
        com.movesky.app.main.YSSimulation r0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        r0.<com.movesky.app.main.YSSimulation: boolean serverReady> = 1;

        r0.<com.movesky.app.main.YSSimulation: boolean clientReady> = 1;

        staticinvoke <com.movesky.app.main.units.Unit: void resetNextHashCodeID()>();

        staticinvoke <com.movesky.app.engine.fastgraph.Wall: void resetNextHashCodeID()>();

        return;
    }

    public void setupSubviews(com.movesky.app.engine.ui.UIScrollView)
    {
        com.movesky.app.main.YSSimulation r0;
        com.movesky.app.engine.ui.UIScrollView $r1;
        com.movesky.app.main.Player $r2;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $r1 := @parameter0: com.movesky.app.engine.ui.UIScrollView;

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        virtualinvoke $r2.<com.movesky.app.main.Player: void setupSubviews(com.movesky.app.engine.ui.UIScrollView,boolean)>($r1, 1);

        $r2 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer>;

        virtualinvoke $r2.<com.movesky.app.main.Player: void setupSubviews(com.movesky.app.engine.ui.UIScrollView,boolean)>($r1, 0);

        return;
    }

    protected void simulateCustomEvent(float, float, int, boolean)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1;
        int $i0;
        boolean $z0;
        com.movesky.app.main.Song $r1;
        java.util.HashMap $r2;
        java.lang.Boolean $r3;
        java.lang.Object $r4;
        com.movesky.app.main.Player $r5;
        com.movesky.app.main.units.UnitType $r6;
        com.movesky.app.main.YSSimulation$GameState $r7, $r8;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $i0 := @parameter2: int;

        $z0 := @parameter3: boolean;

        if $i0 >= 0 goto label1;

        $r1 = staticinvoke <com.movesky.app.main.Song: com.movesky.app.main.Song fromInt(int)>($i0);

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Song song> = $r1;

        specialinvoke r0.<com.movesky.app.main.YSSimulation: void setupEvents()>();

        return;

     label1:
        $r2 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r4 = virtualinvoke $r2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r5 = (com.movesky.app.main.Player) $r4;

        $r6 = staticinvoke <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType fromInt(int)>($i0);

        if $r6 == null goto label2;

        virtualinvoke $r5.<com.movesky.app.main.Player: void setUnitType(com.movesky.app.main.units.UnitType)>($r6);

        return;

     label2:
        if $i0 != 13 goto label5;

        if $z0 == 0 goto label4;

        r0.<com.movesky.app.main.YSSimulation: boolean serverReady> = 1;

     label3:
        $z0 = r0.<com.movesky.app.main.YSSimulation: boolean serverReady>;

        if $z0 == 0 goto label7;

        $z0 = r0.<com.movesky.app.main.YSSimulation: boolean clientReady>;

        if $z0 == 0 goto label7;

        staticinvoke <com.movesky.app.main.units.Unit: void resetNextHashCodeID()>();

        staticinvoke <com.movesky.app.engine.fastgraph.Wall: void resetNextHashCodeID()>();

        return;

     label4:
        r0.<com.movesky.app.main.YSSimulation: boolean clientReady> = 1;

        goto label3;

     label5:
        $r7 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r8 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r7 == $r8 goto label6;

        $r7 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r8 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState WAITING_TO_START>;

        if $r7 != $r8 goto label7;

     label6:
        if $i0 != 69 goto label7;

        specialinvoke r0.<com.movesky.app.main.YSSimulation: void endTheGame()>();

     label7:
        return;
    }

    protected void simulateTapDown(float, float, boolean, boolean, boolean)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1, $f2;
        boolean $z0, $z1, $z2;
        com.movesky.app.main.YSSimulation$GameState $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        com.movesky.app.main.Player $r6;
        byte $b0;
        long $l1;
        com.movesky.app.main.units.Unit $r7;
        com.movesky.app.main.achievements.events.BeatHitEvent $r8;
        com.movesky.app.main.achievements.BBTHAchievementManager $r9;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $z1 := @parameter3: boolean;

        $z2 := @parameter4: boolean;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r1 == $r2 goto label1;

        return;

     label1:
        $r3 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (com.movesky.app.main.Player) $r5;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label8;

        $b0 = $f1 cmpg 0.0F;

        if $b0 < 0 goto label8;

        $l1 = r0.<com.movesky.app.main.YSSimulation: long placement_tip_start_time>;

        $b0 = $l1 cmp 0L;

        if $b0 != 0 goto label4;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        if $r7 == null goto label4;

        if $z0 == 0 goto label2;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        $f2 = virtualinvoke $r7.<com.movesky.app.main.units.Unit: float getY()>();

        $b0 = $f1 cmpl $f2;

        if $b0 > 0 goto label3;

     label2:
        if $z0 != 0 goto label4;

        $r7 = virtualinvoke $r6.<com.movesky.app.main.Player: com.movesky.app.main.units.Unit getMostAdvancedUnit()>();

        $f2 = virtualinvoke $r7.<com.movesky.app.main.units.Unit: float getY()>();

        $b0 = $f1 cmpg $f2;

        if $b0 >= 0 goto label4;

     label3:
        $l1 = staticinvoke <java.lang.System: long currentTimeMillis()>();

        r0.<com.movesky.app.main.YSSimulation: long placement_tip_start_time> = $l1;

     label4:
        if $z2 == 0 goto label7;

        if $z1 == 0 goto label6;

        virtualinvoke $r6.<com.movesky.app.main.Player: void startWall(float,float)>($f0, $f1);

     label5:
        $r8 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BeatHitEvent beatHitEvent>;

        if $r8 == null goto label8;

        $r8 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BeatHitEvent beatHitEvent>;

        virtualinvoke $r8.<com.movesky.app.main.achievements.events.BeatHitEvent: void set(com.movesky.app.main.Player)>($r6);

        $r9 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r8 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.BeatHitEvent beatHitEvent>;

        virtualinvoke $r9.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyBeatHit(com.movesky.app.main.achievements.events.BeatHitEvent)>($r8);

        return;

     label6:
        $f2 = virtualinvoke $r6.<com.movesky.app.main.Player: float getCombo()>();

        $f2 = $f2 + 1.0F;

        virtualinvoke $r6.<com.movesky.app.main.Player: void setCombo(float)>($f2);

        virtualinvoke $r6.<com.movesky.app.main.Player: void spawnUnit(float,float)>($f0, $f1);

        goto label5;

     label7:
        virtualinvoke $r6.<com.movesky.app.main.Player: void setCombo(float)>(0.0F);

     label8:
        return;
    }

    protected void simulateTapMove(float, float, boolean)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1;
        boolean $z0;
        com.movesky.app.main.YSSimulation$GameState $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        com.movesky.app.main.Player $r6;
        byte $b0;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r1 == $r2 goto label1;

        return;

     label1:
        $r3 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (com.movesky.app.main.Player) $r5;

        $z0 = virtualinvoke $r6.<com.movesky.app.main.Player: boolean settingWall()>();

        if $z0 == 0 goto label4;

        $b0 = $f0 cmpg 0.0F;

        if $b0 < 0 goto label2;

        $b0 = $f1 cmpg 0.0F;

        if $b0 >= 0 goto label3;

     label2:
        virtualinvoke r0.<com.movesky.app.main.YSSimulation: void generateWall(com.movesky.app.main.Player)>($r6);

        return;

     label3:
        virtualinvoke $r6.<com.movesky.app.main.Player: void updateWall(float,float)>($f0, $f1);

     label4:
        return;
    }

    protected void simulateTapUp(float, float, boolean)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1;
        boolean $z0;
        com.movesky.app.main.YSSimulation$GameState $r1, $r2;
        java.util.HashMap $r3;
        java.lang.Boolean $r4;
        java.lang.Object $r5;
        com.movesky.app.main.Player $r6;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $z0 := @parameter2: boolean;

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r1 == $r2 goto label1;

        return;

     label1:
        $r3 = r0.<com.movesky.app.main.YSSimulation: java.util.HashMap playerMap>;

        $r4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0);

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r4);

        $r6 = (com.movesky.app.main.Player) $r5;

        virtualinvoke r0.<com.movesky.app.main.YSSimulation: void generateWall(com.movesky.app.main.Player)>($r6);

        return;
    }

    protected void update(float)
    {
        com.movesky.app.main.YSSimulation r0;
        float $f0, $f1;
        int $i0, $i2, $i3;
        boolean $z0;
        com.movesky.app.main.YSSimulation$GameState $r1, $r2;
        byte $b1;
        java.util.Random $r3;
        com.movesky.app.engine.util.Timer $r4;
        com.movesky.app.main.GridAcceleration $r5;
        com.movesky.app.main.Player $r6;
        java.util.List $r7;
        com.movesky.app.main.ai.AIController $r8;
        java.lang.Object $r9;
        com.movesky.app.main.units.Unit $r10, $r11;
        com.movesky.app.main.Base $r12;
        com.movesky.app.main.achievements.events.UpdateEvent $r13;
        com.movesky.app.main.achievements.BBTHAchievementManager $r14;

        r0 := @this: com.movesky.app.main.YSSimulation;

        $f0 := @parameter0: float;

        $i0 = 0;

        $z0 = virtualinvoke r0.<com.movesky.app.main.YSSimulation: boolean isReady()>();

        if $z0 != 0 goto label01;

        return;

     label01:
        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState WAITING_TO_START>;

        if $r1 != $r2 goto label02;

        $f1 = r0.<com.movesky.app.main.YSSimulation: float startingCountdown>;

        $f1 = $f1 - $f0;

        r0.<com.movesky.app.main.YSSimulation: float startingCountdown> = $f1;

        $f1 = r0.<com.movesky.app.main.YSSimulation: float startingCountdown>;

        $b1 = $f1 cmpg 0.0F;

        if $b1 >= 0 goto label02;

        $r3 = <com.movesky.app.main.YSSimulation: java.util.Random random>;

        virtualinvoke $r3.<java.util.Random: void setSeed(long)>(0L);

        $r1 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState> = $r1;

     label02:
        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r1 != $r2 goto label10;

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer entireTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer accelTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r5.<com.movesky.app.main.GridAcceleration: void clearUnits()>();

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        virtualinvoke $r5.<com.movesky.app.main.GridAcceleration: void insertUnits(java.util.List)>($r7);

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        virtualinvoke $r5.<com.movesky.app.main.GridAcceleration: void insertUnits(java.util.List)>($r7);

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer accelTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiControllerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r8 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.ai.AIController aiController>;

        virtualinvoke $r8.<com.movesky.app.main.ai.AIController: void update()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiControllerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer serverPlayerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void update(float)>($f0);

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer serverPlayerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer clientPlayerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void start()>();

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        virtualinvoke $r6.<com.movesky.app.main.Player: void update(float)>($f0);

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer clientPlayerTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

        $i3 = 0;

     label03:
        if $i3 >= $i2 goto label04;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i3);

        $r10 = (com.movesky.app.main.units.Unit) $r9;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i3);

        $r11 = (com.movesky.app.main.units.Unit) $r9;

        $f1 = virtualinvoke $r11.<com.movesky.app.main.units.Unit: float getX()>();

        $f1 = staticinvoke <com.movesky.app.engine.util.MathUtils: float clamp(float,float,float)>(0.0F, 270.0F, $f1);

        virtualinvoke $r10.<com.movesky.app.main.units.Unit: void setX(float)>($f1);

        $i3 = $i3 + 1;

        goto label03;

     label04:
        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $i2 = interfaceinvoke $r7.<java.util.List: int size()>();

     label05:
        if $i0 >= $i2 goto label06;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r10 = (com.movesky.app.main.units.Unit) $r9;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r7 = $r6.<com.movesky.app.main.Player: java.util.List units>;

        $r9 = interfaceinvoke $r7.<java.util.List: java.lang.Object get(int)>($i0);

        $r11 = (com.movesky.app.main.units.Unit) $r9;

        $f1 = virtualinvoke $r11.<com.movesky.app.main.units.Unit: float getX()>();

        $f1 = staticinvoke <com.movesky.app.engine.util.MathUtils: float clamp(float,float,float)>(0.0F, 270.0F, $f1);

        virtualinvoke $r10.<com.movesky.app.main.units.Unit: void setX(float)>($f1);

        $i0 = $i0 + 1;

        goto label05;

     label06:
        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer aiTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player serverPlayer>;

        $r12 = $r6.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r12.<com.movesky.app.main.Base: void damageUnits(com.movesky.app.main.GridAcceleration)>($r5);

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player clientPlayer>;

        $r12 = $r6.<com.movesky.app.main.Player: com.movesky.app.main.Base base>;

        $r5 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.GridAcceleration accel>;

        virtualinvoke $r12.<com.movesky.app.main.Base: void damageUnits(com.movesky.app.main.GridAcceleration)>($r5);

        $r1 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.YSSimulation$GameState gameState>;

        $r2 = <com.movesky.app.main.YSSimulation$GameState: com.movesky.app.main.YSSimulation$GameState IN_PROGRESS>;

        if $r1 != $r2 goto label07;

        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player localPlayer>;

        $f1 = virtualinvoke $r6.<com.movesky.app.main.Player: float getHealth()>();

        $b1 = $f1 cmpg 0.0F;

        if $b1 <= 0 goto label08;

     label07:
        $r6 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.Player remotePlayer>;

        $f1 = virtualinvoke $r6.<com.movesky.app.main.Player: float getHealth()>();

        $b1 = $f1 cmpg 0.0F;

        if $b1 > 0 goto label09;

     label08:
        specialinvoke r0.<com.movesky.app.main.YSSimulation: void endTheGame()>();

     label09:
        $r13 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UpdateEvent updateEvent>;

        virtualinvoke $r13.<com.movesky.app.main.achievements.events.UpdateEvent: void set(float)>($f0);

        $r14 = <com.movesky.app.main.achievements.BBTHAchievementManager: com.movesky.app.main.achievements.BBTHAchievementManager INSTANCE>;

        $r13 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.main.achievements.events.UpdateEvent updateEvent>;

        virtualinvoke $r14.<com.movesky.app.main.achievements.BBTHAchievementManager: void notifyUpdate(com.movesky.app.main.achievements.events.UpdateEvent)>($r13);

        $r4 = r0.<com.movesky.app.main.YSSimulation: com.movesky.app.engine.util.Timer entireTickTimer>;

        virtualinvoke $r4.<com.movesky.app.engine.util.Timer: void stop()>();

     label10:
        return;
    }
}
