public class com.movesky.app.main.units.AttackingUnit extends com.movesky.app.main.units.Unit
{
    private static final com.movesky.app.engine.util.Envelope ALPHA_ENVELOPE;
    private static final com.movesky.app.engine.util.Envelope DAMAGE_ENVELOPE;
    public static final float DETONATION_MAX_RADIUS;
    public static final float DETONATION_TIME;
    public static final float DETONATION_WITHIN_DISTANCE;
    private static final float LINE_LENGTH;
    public static final int MAX_DAMAGE;
    public static final float MIN_DAMAGE;
    private static final com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE;
    boolean detonating;
    float detonationTime;

    static void <clinit>()
    {
        com.movesky.app.engine.util.Envelope $r0;
        com.movesky.app.engine.util.Envelope$OutOfBoundsHandler $r1;

        <com.movesky.app.main.units.AttackingUnit: float MIN_DAMAGE> = 30.0F;

        <com.movesky.app.main.units.AttackingUnit: int MAX_DAMAGE> = 90;

        <com.movesky.app.main.units.AttackingUnit: float LINE_LENGTH> = 6.0F;

        <com.movesky.app.main.units.AttackingUnit: float DETONATION_WITHIN_DISTANCE> = 15.0F;

        <com.movesky.app.main.units.AttackingUnit: float DETONATION_TIME> = 0.4F;

        <com.movesky.app.main.units.AttackingUnit: float DETONATION_MAX_RADIUS> = 40.0F;

        $r0 = new com.movesky.app.engine.util.Envelope;

        $r1 = <com.movesky.app.engine.util.Envelope$OutOfBoundsHandler: com.movesky.app.engine.util.Envelope$OutOfBoundsHandler RETURN_FIRST_OR_LAST>;

        specialinvoke $r0.<com.movesky.app.engine.util.Envelope: void <init>(double,com.movesky.app.engine.util.Envelope$OutOfBoundsHandler)>(90.0, $r1);

        <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope DAMAGE_ENVELOPE> = $r0;

        $r0 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope DAMAGE_ENVELOPE>;

        virtualinvoke $r0.<com.movesky.app.engine.util.Envelope: void addLinearSegment(float,double)>(40.0F, 30.0);

        $r0 = new com.movesky.app.engine.util.Envelope;

        $r1 = <com.movesky.app.engine.util.Envelope$OutOfBoundsHandler: com.movesky.app.engine.util.Envelope$OutOfBoundsHandler RETURN_FIRST_OR_LAST>;

        specialinvoke $r0.<com.movesky.app.engine.util.Envelope: void <init>(double,com.movesky.app.engine.util.Envelope$OutOfBoundsHandler)>(0.0, $r1);

        <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE> = $r0;

        $r0 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE>;

        virtualinvoke $r0.<com.movesky.app.engine.util.Envelope: void addLinearSegment(float,double)>(0.1F, 40.0);

        $r0 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE>;

        virtualinvoke $r0.<com.movesky.app.engine.util.Envelope: void addLinearSegment(float,double)>(0.3F, 0.0);

        $r0 = new com.movesky.app.engine.util.Envelope;

        $r1 = <com.movesky.app.engine.util.Envelope$OutOfBoundsHandler: com.movesky.app.engine.util.Envelope$OutOfBoundsHandler RETURN_FIRST_OR_LAST>;

        specialinvoke $r0.<com.movesky.app.engine.util.Envelope: void <init>(double,com.movesky.app.engine.util.Envelope$OutOfBoundsHandler)>(0.0, $r1);

        <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope ALPHA_ENVELOPE> = $r0;

        $r0 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope ALPHA_ENVELOPE>;

        virtualinvoke $r0.<com.movesky.app.engine.util.Envelope: void addLinearSegment(float,double)>(0.1F, 200.0);

        $r0 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope ALPHA_ENVELOPE>;

        virtualinvoke $r0.<com.movesky.app.engine.util.Envelope: void addLinearSegment(float,double)>(0.3F, 0.0);

        return;
    }

    public void <init>(com.movesky.app.main.units.UnitManager, com.movesky.app.main.Team, android.graphics.Paint, com.movesky.app.engine.particles.ParticleSystem)
    {
        com.movesky.app.main.units.AttackingUnit r0;
        com.movesky.app.main.units.UnitManager $r1;
        com.movesky.app.main.Team $r2;
        android.graphics.Paint $r3;
        com.movesky.app.engine.particles.ParticleSystem $r4;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $r1 := @parameter0: com.movesky.app.main.units.UnitManager;

        $r2 := @parameter1: com.movesky.app.main.Team;

        $r3 := @parameter2: android.graphics.Paint;

        $r4 := @parameter3: com.movesky.app.engine.particles.ParticleSystem;

        specialinvoke r0.<com.movesky.app.main.units.Unit: void <init>(com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>($r1, $r2, $r3, $r4);

        return;
    }

    public void drawChassis(android.graphics.Canvas)
    {
        com.movesky.app.main.units.AttackingUnit r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4;
        android.graphics.Paint $r2;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating>;

        if $z0 == 0 goto label1;

        return;

     label1:
        $f0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f1, 4.0F, $r2);

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getHeading()>();

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $f3 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f4 = staticinvoke <android.util.FloatMath: float cos(float)>($f2);

        $f4 = $f4 * 6.0F;

        $f3 = $f3 + $f4;

        $f4 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $f2 = staticinvoke <android.util.FloatMath: float sin(float)>($f2);

        $f2 = $f2 * 6.0F;

        $f2 = $f4 + $f2;

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f1, $f3, $f2, $r2);

        return;
    }

    public void drawEffects(android.graphics.Canvas)
    {
        com.movesky.app.main.units.AttackingUnit r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        android.graphics.Paint $r2, $r3;
        com.movesky.app.engine.util.Envelope $r4;
        float $f0, $f1, $f2;
        double $d0;
        com.movesky.app.main.Team $r5, $r6;
        int $i0;
        android.graphics.Paint$Style $r7;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating>;

        if $z0 == 0 goto label3;

        $r2 = <com.movesky.app.main.units.AttackingUnit: android.graphics.Paint tempPaint>;

        $r3 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void set(android.graphics.Paint)>($r3);

        $r4 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE>;

        $f0 = r0.<com.movesky.app.main.units.AttackingUnit: float detonationTime>;

        $d0 = virtualinvoke $r4.<com.movesky.app.engine.util.Envelope: double getValueAtTime(float)>($f0);

        $f0 = (float) $d0;

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        $r5 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.Team team>;

        $r6 = <com.movesky.app.main.Team: com.movesky.app.main.Team SERVER>;

        if $r5 != $r6 goto label2;

        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(231, 80, 0);

     label1:
        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>($i0);

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        $r4 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope ALPHA_ENVELOPE>;

        $f1 = r0.<com.movesky.app.main.units.AttackingUnit: float detonationTime>;

        $d0 = virtualinvoke $r4.<com.movesky.app.engine.util.Envelope: double getValueAtTime(float)>($f1);

        $i0 = (int) $d0;

        virtualinvoke $r2.<android.graphics.Paint: void setAlpha(int)>($i0);

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        $r7 = <android.graphics.Paint$Style: android.graphics.Paint$Style FILL>;

        virtualinvoke $r2.<android.graphics.Paint: void setStyle(android.graphics.Paint$Style)>($r7);

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f1, $f2, $f0, $r2);

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: android.graphics.Paint paint>;

        $r3 = <com.movesky.app.main.units.AttackingUnit: android.graphics.Paint tempPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void set(android.graphics.Paint)>($r3);

        return;

     label2:
        $i0 = staticinvoke <android.graphics.Color: int rgb(int,int,int)>(0, 168, 231);

        goto label1;

     label3:
        return;
    }

    public float getRadius()
    {
        com.movesky.app.main.units.AttackingUnit r0;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        return 4.0F;
    }

    public int getStartingHealth()
    {
        com.movesky.app.main.units.AttackingUnit r0;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        return 50;
    }

    public com.movesky.app.main.units.UnitType getType()
    {
        com.movesky.app.main.units.AttackingUnit r0;
        com.movesky.app.main.units.UnitType r1;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        r1 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType ATTACKING>;

        return r1;
    }

    public boolean isDead()
    {
        com.movesky.app.main.units.AttackingUnit r0;
        boolean $z0;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $z0 = r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating>;

        if $z0 == 0 goto label1;

        return 1;

     label1:
        $z0 = specialinvoke r0.<com.movesky.app.main.units.Unit: boolean isDead()>();

        return $z0;
    }

    protected void onDead()
    {
        com.movesky.app.main.units.AttackingUnit r0;
        com.movesky.app.main.units.UnitManager $r1;
        float $f0, $f1, $f2, $f3;
        com.movesky.app.engine.util.Bag $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.movesky.app.main.units.Unit $r5;
        com.movesky.app.main.Team $r6, $r7;
        com.movesky.app.engine.util.Envelope $r8;
        double $d0;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        specialinvoke r0.<com.movesky.app.main.units.Unit: void onDead()>();

        $r1 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.units.UnitManager unitManager>;

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $r2 = interfaceinvoke $r1.<com.movesky.app.main.units.UnitManager: com.movesky.app.engine.util.Bag getUnitsInCircle(float,float,float)>($f0, $f1, 40.0F);

        $r3 = virtualinvoke $r2.<com.movesky.app.engine.util.Bag: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.movesky.app.main.units.Unit) $r4;

        $r6 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.Team team>;

        $r7 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: com.movesky.app.main.Team getTeam()>();

        $z0 = virtualinvoke $r6.<com.movesky.app.main.Team: boolean isEnemy(com.movesky.app.main.Team)>($r7);

        if $z0 == 0 goto label1;

        $r8 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope DAMAGE_ENVELOPE>;

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $f2 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getX()>();

        $f3 = virtualinvoke $r5.<com.movesky.app.main.units.Unit: float getY()>();

        $f0 = staticinvoke <com.movesky.app.engine.util.MathUtils: float getDist(float,float,float,float)>($f0, $f1, $f2, $f3);

        $d0 = virtualinvoke $r8.<com.movesky.app.engine.util.Envelope: double getValueAtTime(float)>($f0);

        $f0 = (float) $d0;

        virtualinvoke $r5.<com.movesky.app.main.units.Unit: void takeDamage(float,com.movesky.app.main.units.Unit)>($f0, r0);

        goto label1;

     label2:
        return;
    }

    public void takeDamage(float, com.movesky.app.main.units.Unit)
    {
        com.movesky.app.main.units.AttackingUnit r0;
        float $f0;
        com.movesky.app.main.units.Unit $r1;
        boolean $z0;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $f0 := @parameter0: float;

        $r1 := @parameter1: com.movesky.app.main.units.Unit;

        $z0 = r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating>;

        if $z0 != 0 goto label1;

        specialinvoke r0.<com.movesky.app.main.units.Unit: void takeDamage(float,com.movesky.app.main.units.Unit)>($f0, $r1);

     label1:
        return;
    }

    public void update(float)
    {
        com.movesky.app.main.units.AttackingUnit r0;
        float $f0, $f1, $f2, $f3;
        boolean $z0;
        com.movesky.app.engine.util.Envelope $r1;
        byte $b0;
        com.movesky.app.main.units.UnitManager $r2;
        com.movesky.app.main.units.Unit $r3;
        java.lang.String $r4;

        r0 := @this: com.movesky.app.main.units.AttackingUnit;

        $f0 := @parameter0: float;

        $z0 = r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating>;

        if $z0 == 0 goto label1;

        $f1 = r0.<com.movesky.app.main.units.AttackingUnit: float detonationTime>;

        $f0 = $f1 + $f0;

        r0.<com.movesky.app.main.units.AttackingUnit: float detonationTime> = $f0;

        $f0 = r0.<com.movesky.app.main.units.AttackingUnit: float detonationTime>;

        $r1 = <com.movesky.app.main.units.AttackingUnit: com.movesky.app.engine.util.Envelope RADIUS_ENVELOPE>;

        $f1 = virtualinvoke $r1.<com.movesky.app.engine.util.Envelope: float getTotalLength()>();

        $b0 = $f0 cmpl $f1;

        if $b0 <= 0 goto label2;

        $r2 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.units.UnitManager unitManager>;

        interfaceinvoke $r2.<com.movesky.app.main.units.UnitManager: void notifyUnitDead(com.movesky.app.main.units.Unit)>(r0);

        return;

     label1:
        specialinvoke r0.<com.movesky.app.main.units.Unit: void update(float)>($f0);

        $z0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: boolean isDead()>();

        if $z0 != 0 goto label2;

        $r3 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.units.Unit target>;

        if $r3 == null goto label2;

        $r4 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: java.lang.String getStateName()>();

        $z0 = virtualinvoke $r4.<java.lang.String: boolean equals(java.lang.Object)>("attacking");

        if $z0 == 0 goto label2;

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getX()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: float getY()>();

        $r3 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.units.Unit target>;

        $f2 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: float getX()>();

        $r3 = r0.<com.movesky.app.main.units.AttackingUnit: com.movesky.app.main.units.Unit target>;

        $f3 = virtualinvoke $r3.<com.movesky.app.main.units.Unit: float getY()>();

        $f0 = staticinvoke <com.movesky.app.engine.util.MathUtils: float getDistSqr(float,float,float,float)>($f0, $f1, $f2, $f3);

        $b0 = $f0 cmpg 225.0F;

        if $b0 >= 0 goto label2;

        r0.<com.movesky.app.main.units.AttackingUnit: boolean detonating> = 1;

        virtualinvoke r0.<com.movesky.app.main.units.AttackingUnit: void onDead()>();

     label2:
        return;
    }
}
