public class com.movesky.app.engine.ai.ConnectedGraph extends java.lang.Object
{
    public java.util.HashMap m_connections;

    public void <init>()
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        java.util.HashMap $r1;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new java.util.HashMap;

        specialinvoke $r1.<java.util.HashMap: void <init>()>();

        r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections> = $r1;

        return;
    }

    public void addConnection(float, float, float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1, $f2, $f3;
        java.util.ArrayList $r1;
        com.movesky.app.engine.util.Point $r2, $r3, $r4, $r5;
        java.util.HashMap $r6;
        java.lang.Object $r7;
        boolean $z0;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r2 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float)>($f0, $f1);

        $r3 = $r2;

        $r4 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float)>($f2, $f3);

        $r5 = $r4;

        if $r2 != null goto label1;

        $r3 = new com.movesky.app.engine.util.Point;

        specialinvoke $r3.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f0, $f1);

        $r6 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r3, $r1);

     label1:
        $r6 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r7 = virtualinvoke $r6.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r3);

        $r1 = (java.util.ArrayList) $r7;

        if $r4 != null goto label2;

        $r5 = new com.movesky.app.engine.util.Point;

        specialinvoke $r5.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f3);

     label2:
        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r5);

        $r6 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $z0 = virtualinvoke $r6.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r5);

        if $z0 != 0 goto label3;

        $r6 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r1 = new java.util.ArrayList;

        specialinvoke $r1.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r5, $r1);

     label3:
        return;
    }

    public void addConnection(com.movesky.app.engine.util.Point, com.movesky.app.engine.util.Point)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        com.movesky.app.engine.util.Point $r1, $r2;
        java.util.HashMap $r3;
        boolean $z0;
        java.util.ArrayList $r4;
        java.lang.Object $r5;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $r1 := @parameter0: com.movesky.app.engine.util.Point;

        $r2 := @parameter1: com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        if $z0 != 0 goto label1;

        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r1, $r4);

     label1:
        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $z0 = virtualinvoke $r3.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r2);

        if $z0 != 0 goto label2;

        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r4 = new java.util.ArrayList;

        specialinvoke $r4.<java.util.ArrayList: void <init>()>();

        virtualinvoke $r3.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>($r2, $r4);

     label2:
        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r5 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.ArrayList) $r5;

        virtualinvoke $r4.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public boolean contains(com.movesky.app.engine.util.Point)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        com.movesky.app.engine.util.Point $r1;
        boolean $z0;
        java.util.HashMap $r2;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $r1 := @parameter0: com.movesky.app.engine.util.Point;

        $r2 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $z0 = virtualinvoke $r2.<java.util.HashMap: boolean containsKey(java.lang.Object)>($r1);

        return $z0;
    }

    public com.movesky.app.engine.util.Point getClosestNode(float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1, $f2, $f3, $f4, $f5;
        com.movesky.app.engine.util.Point $r1, $r6;
        java.util.HashMap $r2;
        java.util.Set $r3;
        java.util.Iterator $r4;
        boolean $z0;
        java.lang.Object $r5;
        byte $b0;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 = 0.0F;

        $r1 = null;

        $r2 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r3 = virtualinvoke $r2.<java.util.HashMap: java.util.Set keySet()>();

        $r4 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r4.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label4;

        $r5 = interfaceinvoke $r4.<java.util.Iterator: java.lang.Object next()>();

        $r6 = (com.movesky.app.engine.util.Point) $r5;

        $f3 = $r6.<com.movesky.app.engine.util.Point: float x>;

        $f3 = $f3 - $f0;

        $f4 = $r6.<com.movesky.app.engine.util.Point: float x>;

        $f4 = $f4 - $f0;

        $f3 = $f3 * $f4;

        $f4 = $r6.<com.movesky.app.engine.util.Point: float y>;

        $f4 = $f4 - $f1;

        $f5 = $r6.<com.movesky.app.engine.util.Point: float y>;

        $f5 = $f5 - $f1;

        $f4 = $f4 * $f5;

        $f3 = $f3 + $f4;

        if $r1 == null goto label2;

        $b0 = $f3 cmpg $f2;

        if $b0 >= 0 goto label5;

     label2:
        $f2 = $f3;

     label3:
        $r1 = $r6;

        goto label1;

     label4:
        return $r1;

     label5:
        $r6 = $r1;

        goto label3;
    }

    public java.util.HashMap getGraph()
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        java.util.HashMap r1;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        r1 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        return r1;
    }

    public java.util.ArrayList getNeighbors(float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1;
        java.util.HashMap $r1;
        com.movesky.app.engine.util.Point $r2;
        java.lang.Object $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r2 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float)>($f0, $f1);

        if $r2 != null goto label1;

        return null;

     label1:
        $r1 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r3 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r4 = (java.util.ArrayList) $r3;

        return $r4;
    }

    public java.util.ArrayList getNeighbors(com.movesky.app.engine.util.Point)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        com.movesky.app.engine.util.Point $r1;
        java.lang.Object $r2;
        java.util.HashMap $r3;
        java.util.ArrayList $r4;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $r1 := @parameter0: com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r2 = virtualinvoke $r3.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r4 = (java.util.ArrayList) $r2;

        return $r4;
    }

    public com.movesky.app.engine.util.Point getPointAtCoords(float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $r1 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float,float,float)>($f0, $f1, 0.05F, 0.05F);

        return $r1;
    }

    public com.movesky.app.engine.util.Point getPointAtCoords(float, float, float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1, $f2, $f3, $f4;
        java.util.HashMap $r1;
        java.util.Set $r2;
        java.util.Iterator $r3;
        boolean $z0;
        java.lang.Object $r4;
        com.movesky.app.engine.util.Point $r5;
        byte $b0;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r1 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r2 = virtualinvoke $r1.<java.util.HashMap: java.util.Set keySet()>();

        $r3 = interfaceinvoke $r2.<java.util.Set: java.util.Iterator iterator()>();

     label1:
        $z0 = interfaceinvoke $r3.<java.util.Iterator: boolean hasNext()>();

        if $z0 == 0 goto label2;

        $r4 = interfaceinvoke $r3.<java.util.Iterator: java.lang.Object next()>();

        $r5 = (com.movesky.app.engine.util.Point) $r4;

        $f4 = $r5.<com.movesky.app.engine.util.Point: float x>;

        $f4 = $f4 - $f0;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $b0 = $f4 cmpg $f2;

        if $b0 >= 0 goto label1;

        $f4 = $r5.<com.movesky.app.engine.util.Point: float y>;

        $f4 = $f4 - $f1;

        $f4 = staticinvoke <java.lang.Math: float abs(float)>($f4);

        $b0 = $f4 cmpg $f3;

        if $b0 >= 0 goto label1;

        return $r5;

     label2:
        return null;
    }

    public void removeConnection(float, float, float, float)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        float $f0, $f1, $f2, $f3;
        java.util.HashMap $r1;
        com.movesky.app.engine.util.Point $r2, $r3;
        java.lang.Object $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        $r2 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float)>($f0, $f1);

        $r3 = virtualinvoke r0.<com.movesky.app.engine.ai.ConnectedGraph: com.movesky.app.engine.util.Point getPointAtCoords(float,float)>($f2, $f3);

        if $r2 != null goto label1;

        return;

     label1:
        $r1 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r4 = virtualinvoke $r1.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r2);

        $r5 = (java.util.ArrayList) $r4;

        if $r3 == null goto label2;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r3);

     label2:
        return;
    }

    public void removeConnection(com.movesky.app.engine.util.Point, com.movesky.app.engine.util.Point)
    {
        com.movesky.app.engine.ai.ConnectedGraph r0;
        com.movesky.app.engine.util.Point $r1, $r2;
        java.lang.Object $r3;
        java.util.HashMap $r4;
        java.util.ArrayList $r5;

        r0 := @this: com.movesky.app.engine.ai.ConnectedGraph;

        $r1 := @parameter0: com.movesky.app.engine.util.Point;

        $r2 := @parameter1: com.movesky.app.engine.util.Point;

        $r4 = r0.<com.movesky.app.engine.ai.ConnectedGraph: java.util.HashMap m_connections>;

        $r3 = virtualinvoke $r4.<java.util.HashMap: java.lang.Object get(java.lang.Object)>($r1);

        $r5 = (java.util.ArrayList) $r3;

        virtualinvoke $r5.<java.util.ArrayList: boolean remove(java.lang.Object)>($r2);

        return;
    }
}
