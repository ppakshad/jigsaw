public class com.movesky.app.main.units.DefendingUnit extends com.movesky.app.main.units.Unit
{
    private static final float CANNON_LENGTH;
    private static final float DAMAGE_PER_SHOT;
    private static final float FIRE_RATE;
    private static final float LASER_DISPLAY_TIME;
    private static final float SQUARE_HALFWIDTH;
    private static final float TURRET_RADIUS;
    com.movesky.app.main.units.Unit fireTarget;
    boolean firing;
    android.graphics.RectF rect;
    float timeSinceLastShot;

    public void <init>(com.movesky.app.main.units.UnitManager, com.movesky.app.main.Team, android.graphics.Paint, com.movesky.app.engine.particles.ParticleSystem)
    {
        com.movesky.app.main.units.DefendingUnit r0;
        com.movesky.app.main.units.UnitManager $r1;
        com.movesky.app.main.Team $r2;
        android.graphics.Paint $r3;
        com.movesky.app.engine.particles.ParticleSystem $r4;
        android.graphics.RectF $r5;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        $r1 := @parameter0: com.movesky.app.main.units.UnitManager;

        $r2 := @parameter1: com.movesky.app.main.Team;

        $r3 := @parameter2: android.graphics.Paint;

        $r4 := @parameter3: com.movesky.app.engine.particles.ParticleSystem;

        specialinvoke r0.<com.movesky.app.main.units.Unit: void <init>(com.movesky.app.main.units.UnitManager,com.movesky.app.main.Team,android.graphics.Paint,com.movesky.app.engine.particles.ParticleSystem)>($r1, $r2, $r3, $r4);

        $r5 = new android.graphics.RectF;

        specialinvoke $r5.<android.graphics.RectF: void <init>(float,float,float,float)>(-4.0F, -4.0F, 4.0F, 4.0F);

        r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.RectF rect> = $r5;

        return;
    }

    public void drawChassis(android.graphics.Canvas)
    {
        com.movesky.app.main.units.DefendingUnit r0;
        android.graphics.Canvas $r1;
        float $f0, $f1, $f2, $f3;
        android.graphics.RectF $r2;
        android.graphics.Paint $r3;
        boolean $z0;
        com.movesky.app.main.units.Unit $r4;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        $r1 := @parameter0: android.graphics.Canvas;

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getHeading()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getX()>();

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getY()>();

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f2);

        $f1 = staticinvoke <com.movesky.app.engine.util.MathUtils: float toDegrees(float)>($f0);

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>($f1);

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.RectF rect>;

        $r3 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawRect(android.graphics.RectF,android.graphics.Paint)>($r2, $r3);

        $r3 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>(0.0F, 0.0F, 2.0F, $r3);

        $z0 = r0.<com.movesky.app.main.units.DefendingUnit: boolean firing>;

        if $z0 == 0 goto label3;

        $r4 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget>;

     label1:
        if $r4 != null goto label4;

        $r3 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>(2.0F, 0.0F, 8.0F, 0.0F, $r3);

     label2:
        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

        return;

     label3:
        $r4 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit target>;

        goto label1;

     label4:
        $f1 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getX()>();

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getX()>();

        $f1 = $f1 - $f2;

        $f2 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getY()>();

        $f3 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getY()>();

        $f2 = $f2 - $f3;

        $f2 = staticinvoke <com.movesky.app.engine.util.MathUtils: float getAngle(float,float,float,float)>(0.0F, 0.0F, $f1, $f2);

        $f1 = $f2 - $f0;

        $f1 = staticinvoke <android.util.FloatMath: float cos(float)>($f1);

        $f0 = $f2 - $f0;

        $f3 = staticinvoke <android.util.FloatMath: float sin(float)>($f0);

        $f0 = 8.0F * $f1;

        $f2 = 8.0F * $f3;

        $f1 = 2.0F * $f1;

        $f3 = 2.0F * $f3;

        $r3 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f1, $f3, $f0, $f2, $r3);

        goto label2;
    }

    public void drawEffects(android.graphics.Canvas)
    {
        com.movesky.app.main.units.DefendingUnit r0;
        android.graphics.Canvas $r1;
        boolean $z0;
        float $f0, $f1, $f2, $f3, $f4;
        byte $b0;
        android.graphics.Paint $r2, $r3;
        com.movesky.app.main.units.Unit $r4;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        $r1 := @parameter0: android.graphics.Canvas;

        $z0 = r0.<com.movesky.app.main.units.DefendingUnit: boolean firing>;

        if $z0 == 0 goto label1;

        $f0 = r0.<com.movesky.app.main.units.DefendingUnit: float timeSinceLastShot>;

        $b0 = $f0 cmpg 0.05F;

        if $b0 >= 0 goto label1;

        $f0 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getHeading()>();

        virtualinvoke $r1.<android.graphics.Canvas: int save()>();

        $f1 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getX()>();

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getY()>();

        virtualinvoke $r1.<android.graphics.Canvas: void translate(float,float)>($f1, $f2);

        $f1 = staticinvoke <com.movesky.app.engine.util.MathUtils: float toDegrees(float)>($f0);

        virtualinvoke $r1.<android.graphics.Canvas: void rotate(float)>($f1);

        $r2 = <com.movesky.app.main.units.DefendingUnit: android.graphics.Paint tempPaint>;

        $r3 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void set(android.graphics.Paint)>($r3);

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-7829368);

        $r4 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget>;

        $f1 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getX()>();

        $f2 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getX()>();

        $f2 = $f1 - $f2;

        $r4 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget>;

        $f1 = virtualinvoke $r4.<com.movesky.app.main.units.Unit: float getY()>();

        $f3 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: float getY()>();

        $f3 = $f1 - $f3;

        $f1 = $f2 * $f2;

        $f4 = $f3 * $f3;

        $f1 = $f1 + $f4;

        $f1 = staticinvoke <android.util.FloatMath: float sqrt(float)>($f1);

        $f3 = staticinvoke <com.movesky.app.engine.util.MathUtils: float getAngle(float,float,float,float)>(0.0F, 0.0F, $f2, $f3);

        $f2 = $f3 - $f0;

        $f2 = staticinvoke <android.util.FloatMath: float cos(float)>($f2);

        $f0 = $f3 - $f0;

        $f4 = staticinvoke <android.util.FloatMath: float sin(float)>($f0);

        $f0 = 8.0F * $f2;

        $f3 = 8.0F * $f4;

        $f2 = $f2 * $f1;

        $f1 = $f1 * $f4;

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawLine(float,float,float,float,android.graphics.Paint)>($f0, $f3, $f2, $f1, $r2);

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r2.<android.graphics.Paint: void setColor(int)>(-1);

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        virtualinvoke $r1.<android.graphics.Canvas: void drawCircle(float,float,float,android.graphics.Paint)>($f0, $f3, 1.0F, $r2);

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: android.graphics.Paint paint>;

        $r3 = <com.movesky.app.main.units.DefendingUnit: android.graphics.Paint tempPaint>;

        virtualinvoke $r2.<android.graphics.Paint: void set(android.graphics.Paint)>($r3);

        virtualinvoke $r1.<android.graphics.Canvas: void restore()>();

     label1:
        return;
    }

    public float getRadius()
    {
        com.movesky.app.main.units.DefendingUnit r0;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        return 5.0F;
    }

    public int getStartingHealth()
    {
        com.movesky.app.main.units.DefendingUnit r0;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        return 60;
    }

    public com.movesky.app.main.units.UnitType getType()
    {
        com.movesky.app.main.units.DefendingUnit r0;
        com.movesky.app.main.units.UnitType r1;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        r1 = <com.movesky.app.main.units.UnitType: com.movesky.app.main.units.UnitType DEFENDING>;

        return r1;
    }

    public void update(float)
    {
        com.movesky.app.main.units.DefendingUnit r0;
        float $f0, $f1;
        boolean $z0;
        java.lang.String $r1;
        com.movesky.app.main.units.Unit $r2;
        byte $b0;

        r0 := @this: com.movesky.app.main.units.DefendingUnit;

        $f0 := @parameter0: float;

        specialinvoke r0.<com.movesky.app.main.units.Unit: void update(float)>($f0);

        $z0 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: boolean isDead()>();

        if $z0 == 0 goto label1;

        return;

     label1:
        $f1 = r0.<com.movesky.app.main.units.DefendingUnit: float timeSinceLastShot>;

        $f0 = $f1 + $f0;

        r0.<com.movesky.app.main.units.DefendingUnit: float timeSinceLastShot> = $f0;

        $z0 = r0.<com.movesky.app.main.units.DefendingUnit: boolean firing>;

        if $z0 == 0 goto label4;

        $r1 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: java.lang.String getStateName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attacking");

        if $z0 == 0 goto label2;

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget>;

        $z0 = virtualinvoke $r2.<com.movesky.app.main.units.Unit: boolean isDead()>();

        if $z0 == 0 goto label3;

     label2:
        r0.<com.movesky.app.main.units.DefendingUnit: boolean firing> = 0;

        r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget> = null;

        return;

     label3:
        $f0 = r0.<com.movesky.app.main.units.DefendingUnit: float timeSinceLastShot>;

        $b0 = $f0 cmpl 0.5F;

        if $b0 <= 0 goto label5;

        r0.<com.movesky.app.main.units.DefendingUnit: float timeSinceLastShot> = 0.0F;

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget>;

        virtualinvoke $r2.<com.movesky.app.main.units.Unit: void takeDamage(float,com.movesky.app.main.units.Unit)>(25.0F, r0);

        return;

     label4:
        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit target>;

        if $r2 == null goto label5;

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit target>;

        $z0 = virtualinvoke $r2.<com.movesky.app.main.units.Unit: boolean isDead()>();

        if $z0 != 0 goto label5;

        $r1 = virtualinvoke r0.<com.movesky.app.main.units.DefendingUnit: java.lang.String getStateName()>();

        $z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>("attacking");

        if $z0 == 0 goto label5;

        r0.<com.movesky.app.main.units.DefendingUnit: boolean firing> = 1;

        $r2 = r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit target>;

        r0.<com.movesky.app.main.units.DefendingUnit: com.movesky.app.main.units.Unit fireTarget> = $r2;

     label5:
        return;
    }

    public static void <clinit>()
    {
        <com.movesky.app.main.units.DefendingUnit: float TURRET_RADIUS> = 2.0F;

        <com.movesky.app.main.units.DefendingUnit: float SQUARE_HALFWIDTH> = 4.0F;

        <com.movesky.app.main.units.DefendingUnit: float LASER_DISPLAY_TIME> = 0.05F;

        <com.movesky.app.main.units.DefendingUnit: float FIRE_RATE> = 0.5F;

        <com.movesky.app.main.units.DefendingUnit: float DAMAGE_PER_SHOT> = 25.0F;

        <com.movesky.app.main.units.DefendingUnit: float CANNON_LENGTH> = 8.0F;

        return;
    }
}
