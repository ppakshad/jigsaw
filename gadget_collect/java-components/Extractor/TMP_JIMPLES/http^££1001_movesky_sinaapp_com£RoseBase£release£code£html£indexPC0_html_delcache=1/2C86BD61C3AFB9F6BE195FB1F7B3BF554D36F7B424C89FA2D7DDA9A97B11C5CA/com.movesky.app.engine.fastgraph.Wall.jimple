public class com.movesky.app.engine.fastgraph.Wall extends java.lang.Object
{
    private static int nextHashCodeID;
    public com.movesky.app.engine.util.Point a;
    public com.movesky.app.engine.util.Point b;
    private int hashCodeID;
    public float length;
    public com.movesky.app.engine.util.Point norm;

    public void <init>(float, float, float, float)
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1, $f2, $f3;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $f0 := @parameter0: float;

        $f1 := @parameter1: float;

        $f2 := @parameter2: float;

        $f3 := @parameter3: float;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $r1 = new com.movesky.app.engine.util.Point;

        specialinvoke $r1.<com.movesky.app.engine.util.Point: void <init>()>();

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm> = $r1;

        $r1 = new com.movesky.app.engine.util.Point;

        specialinvoke $r1.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f0, $f1);

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a> = $r1;

        $r1 = new com.movesky.app.engine.util.Point;

        specialinvoke $r1.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f3);

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b> = $r1;

        virtualinvoke r0.<com.movesky.app.engine.fastgraph.Wall: void updateLength()>();

        return;
    }

    public void <init>(com.movesky.app.engine.util.Point, com.movesky.app.engine.util.Point)
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        com.movesky.app.engine.util.Point $r1, $r2, $r3;
        int $i0, $i1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 := @parameter0: com.movesky.app.engine.util.Point;

        $r2 := @parameter1: com.movesky.app.engine.util.Point;

        specialinvoke r0.<java.lang.Object: void <init>()>();

        $i1 = <com.movesky.app.engine.fastgraph.Wall: int nextHashCodeID>;

        $i0 = $i1 + 1;

        <com.movesky.app.engine.fastgraph.Wall: int nextHashCodeID> = $i0;

        r0.<com.movesky.app.engine.fastgraph.Wall: int hashCodeID> = $i1;

        $r3 = new com.movesky.app.engine.util.Point;

        specialinvoke $r3.<com.movesky.app.engine.util.Point: void <init>()>();

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm> = $r3;

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a> = $r1;

        r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b> = $r2;

        virtualinvoke r0.<com.movesky.app.engine.fastgraph.Wall: void updateLength()>();

        return;
    }

    public static void resetNextHashCodeID()
    {
        <com.movesky.app.engine.fastgraph.Wall: int nextHashCodeID> = 0;

        return;
    }

    public void addPoints(java.util.ArrayList, float)
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        java.util.ArrayList $r1;
        float $f0, $f1, $f2, $f3;
        com.movesky.app.engine.util.Point $r2, $r3;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 := @parameter0: java.util.ArrayList;

        $f0 := @parameter1: float;

        $r2 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r2.<com.movesky.app.engine.util.Point: float x>;

        $r2 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f2 = $r2.<com.movesky.app.engine.util.Point: float x>;

        $f1 = $f1 - $f2;

        $f1 = $f1 * $f0;

        $f2 = r0.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $f1 = $f1 / $f2;

        $r2 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f2 = $r2.<com.movesky.app.engine.util.Point: float y>;

        $r2 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f3 = $r2.<com.movesky.app.engine.util.Point: float y>;

        $f2 = $f2 - $f3;

        $f0 = $f2 * $f0;

        $f2 = r0.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $f0 = $f0 / $f2;

        $r2 = new com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f2 = $r3.<com.movesky.app.engine.util.Point: float x>;

        $f2 = $f2 - $f1;

        $f2 = $f2 - $f0;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f3 = $r3.<com.movesky.app.engine.util.Point: float y>;

        $f3 = $f3 - $f0;

        $f3 = $f3 + $f1;

        specialinvoke $r2.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r2 = new com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f2 = $r3.<com.movesky.app.engine.util.Point: float x>;

        $f2 = $f2 - $f1;

        $f2 = $f2 + $f0;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f3 = $r3.<com.movesky.app.engine.util.Point: float y>;

        $f3 = $f3 - $f0;

        $f3 = $f3 - $f1;

        specialinvoke $r2.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r2 = new com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f2 = $r3.<com.movesky.app.engine.util.Point: float x>;

        $f2 = $f2 + $f1;

        $f2 = $f2 - $f0;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f3 = $r3.<com.movesky.app.engine.util.Point: float y>;

        $f3 = $f3 + $f0;

        $f3 = $f3 + $f1;

        specialinvoke $r2.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f3);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        $r2 = new com.movesky.app.engine.util.Point;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f2 = $r3.<com.movesky.app.engine.util.Point: float x>;

        $f2 = $f2 + $f1;

        $f2 = $f2 + $f0;

        $r3 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f3 = $r3.<com.movesky.app.engine.util.Point: float y>;

        $f0 = $f0 + $f3;

        $f0 = $f0 - $f1;

        specialinvoke $r2.<com.movesky.app.engine.util.Point: void <init>(float,float)>($f2, $f0);

        virtualinvoke $r1.<java.util.ArrayList: boolean add(java.lang.Object)>($r2);

        return;
    }

    public float getMaxX()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        return $f0;
    }

    public float getMaxY()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $f0 = staticinvoke <java.lang.Math: float max(float,float)>($f0, $f1);

        return $f0;
    }

    public float getMinX()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }

    public float getMinY()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $f0 = staticinvoke <java.lang.Math: float min(float,float)>($f0, $f1);

        return $f0;
    }

    public int getSimulationSyncHash()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        com.movesky.app.engine.util.Point $r1;
        float $f0;
        int $i0;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>(0, $f0);

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        $f0 = r0.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $i0 = staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float y>;

        staticinvoke <com.movesky.app.engine.net.simulation.Hash: int mix(int,float)>($i0, $f0);

        return 0;
    }

    public int hashCode()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        int i0;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        i0 = r0.<com.movesky.app.engine.fastgraph.Wall: int hashCodeID>;

        return i0;
    }

    public void updateLength()
    {
        com.movesky.app.engine.fastgraph.Wall r0;
        float $f0, $f1, $f2, $f3;
        com.movesky.app.engine.util.Point $r1;

        r0 := @this: com.movesky.app.engine.fastgraph.Wall;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f2 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f3 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $f0 = staticinvoke <com.movesky.app.engine.util.MathUtils: float getDist(float,float,float,float)>($f0, $f1, $f2, $f3);

        r0.<com.movesky.app.engine.fastgraph.Wall: float length> = $f0;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f0 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float x>;

        $f0 = $f0 - $f1;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point b>;

        $f1 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point a>;

        $f2 = $r1.<com.movesky.app.engine.util.Point: float y>;

        $f1 = $f1 - $f2;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm>;

        $f1 = neg $f1;

        $f2 = r0.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $f1 = $f1 / $f2;

        $r1.<com.movesky.app.engine.util.Point: float x> = $f1;

        $r1 = r0.<com.movesky.app.engine.fastgraph.Wall: com.movesky.app.engine.util.Point norm>;

        $f1 = r0.<com.movesky.app.engine.fastgraph.Wall: float length>;

        $f0 = $f0 / $f1;

        $r1.<com.movesky.app.engine.util.Point: float y> = $f0;

        return;
    }
}
